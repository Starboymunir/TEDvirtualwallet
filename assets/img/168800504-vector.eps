%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Eastern European
%%Title: bg_1.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Jakub
%%CreationDate: 12/26/2013
%%BoundingBox: 0 0 600 600
%%HiResBoundingBox: 0 0 600 600
%%CropBox: 0 0 600 600
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 33338 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C455A365A355A365A355A365A355A365A355A365A355A365A355A365A
%355A365A355A35A9A85A36FF845A355A355A365AAF85365A355A365A355A
%365A355A365A355A365A355A365A3560AFFD11FF5A5A365A355A365A355A
%365A355A365A355A365A355A365A355A365A355A365A355A365A35355A35
%36355A3536355A3536355A3536355A3536355A3536355A3536355A35362F
%36A8842F5AFF842F84A8A9353635A984363536355A3536355A3536355A35
%36355A3536355A35362F5AA8FD0FFF5A36355A3536355A3536355A353635
%5A3536355A3536355A3536355A3536355A3536355A35365A355A365A355A
%365A355A365A355A365A355A365A355A365A355A365A355A365A35FF8436
%35AFFFFFFFAFFFAF353684A92F5A365A355A365A355A365A355A365A355A
%365A355A365A355AA8FD0DFF5A36365A355A365A355A365A355A365A355A
%365A355A365A355A365A355A365A3536365A355A3635362F5A35362F5A35
%362F5A35362F5A35362F5A35362F5A35362F5A35362F5A353684852F362F
%847E5A0D84A8362FAF84362F5A35362F5A35362F5A35362F5A35362F5A35
%362F5A35362F365AFD05FFA8FD05FF59362F5A35362F5A35362F5A35362F
%5A35362F5A35362F5A35362F5A35362F5A2F365A5A2F362F5A5A355A365A
%355A365A355A365A355A365A355A365A355A365A355A365A355A365A35A9
%AF5A355A35363585FFAF355AFF84355A365A355A365A355A365A355A365A
%355A365A355A365A355A36365AAFFD07FFAF5A36355A355A355A365A355A
%365A355A365A355A365A355A365A355A365A355A365AA8FFA836355A3635
%36355A3536355A3536355A3536355A3536355A3536355A3536355A353635
%5A353635FF5A36355A355AA8855A3684FF3536355A3536355A3536355A35
%36355A3536355A3536355A3536355A35362F84A8FD04FFA92F3635363584
%84847E602F36355A3536355A3536355A3536355A3536355A35362F3684FF
%FFFF84362F5A5A365A355A365A355A365A355A365A355A365A355A365A35
%5A365A355A365A355A363684FF5A36355A365A2F365AFF5A5A365A355A36
%5A355A365A355A365A355A365A355A365A355A365A355A365A355A5AFFFF
%FF5A36355A84AF5A605A848485365A355A365A355A365A355A365A355A36
%5A355A355AA8FD05FF8436352F5A35362F5A35362F5A35362F5A35362F5A
%35362F5A35362F5A35362F5A35362F5A353684FF5A362F362F5A7EFF5A36
%2F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A
%35362F3635A97E3635365AA935362F360D367E842F362F5A35362F5A3536
%2F5A35362F5A35362F5A84A9A8FD05FF84365A365A355A365A355A365A35
%5A365A355A365A355A365A355A365A355A365A355A365A355A84FFAFAF84
%AFFFFF5A36355A365A355A365A355A365A355A365A355A365A355A365A35
%5A365A355A365A355A365A355A365A36AF365A355A84A9365A8460355A36
%5A355A365A355A365A355A365A355AA9855A84A8FFFFFFA88584A85A3536
%355A3536355A3536355A3536355A3536355A35362F5A3536355A3536355A
%35362F36358484A9845A2F363536355A3536355A3536355A3536355A3536
%355A3536355A3536355A3536355A3536355A35362F5A35847E3635365AFF
%A8FF59608436355A3536355A3536355A3536355A353684845A84FD045A59
%5A358484A85A355A355A365A355A365A355A365A355A365A355A84842F5A
%365A355A365A355A365A355A35362F36355A355A365A355A365A355A365A
%355A365A355A365A355A365A355A365A355A365A355A365A355A365A3536
%84605AAF35A9845AFF5A35A9355A355A365A355A365A355A365A355AA884
%5A84355A5A845A845A845A5A84A85A2F362F5A35362F5A35362F5A35362F
%5A35365AFFFF842F3635362F5A35362F5A35362F5A35362F5A35362F5A35
%362F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F
%5A35362F5A35362F845A5AFF5A84A82F84355A84602F362F5A35362F5A35
%362F5A2F3684845A5A2F5A35362F362F362F60855A85A95A355A365A355A
%365A355A365A355A36365AFD05FF845A355A365A355A365A355A365A355A
%365A355A365A355A365A355A365A355A365A355A365A355A365A355A365A
%355A365A355A365A355A365A355A84855AFFFFFF5A5A36365AAFAF5A355A
%365A355A365A355A365AA8855A60355A365A355A365A355A362F845AAFA8
%362F5A3536355A3536355A35362F365AFD07FFA85A2F5A3536355A353635
%5A3536355A3536355A3536355A3536355A353635365A845A363536355A35
%36355A3536355A3536355A3536355A35362F5A845A2F845A363536358484
%FF5A36355A3536355A35362F5AA8845A5A3536355A3536355A3536355A5A
%8484FFFFA95A355A365A355A365A355A36365AFD0AFFA9355A365A355A36
%5A355A365A355A365A355A365A355A365A355A36365AAF5AA95A36365A35
%5A365A355A365A355A365A355A365A355A365A3584A85A2F36353635A984
%FFFF85355A355A365A355A355AA8855A5A355A365A355A365A355A365A35
%358484FFA8FFA8362F5A35362F5A35362F365AFD05FFA8FFFFFFA8FFFFA9
%2F3635362F5A35362F5A35362F5A35362F5A35362F5A35362F365AA93536
%35845A3635362F5A35362F5A35362F5A35362F5A35362F5A35362F848484
%595A5A8484AFFFFF5A3635362F5A35362F3684845A84595A2F3635362F5A
%35362F5A3536608485FD04FFA85A365A355A365A355A84FD0FFF365A355A
%365A355A365A355A365A355A365A355A365A355A5AAF365A365A35A95A36
%355A365A355A365A355A365A355A365A355A365A355A84FF84AFA8AFA8FD
%04FF5A365A355A365A355AA88536845A605A845A5A355A365A355A365A35
%2F845AFD05FF35363536355A35365AFD10FFAF3536355A3536355A353635
%5A3536355A3536355A35365AA93536355A353635FF5A36355A3536355A35
%36355A3536355A3536355A35362F5AA9FFA8FFAFFD04FF842F5A3536355A
%3536A8FFA8FFAFFFA88435605A5A2F5A3536355A3536365A84A9FFFFFF5A
%36355A365A353684FD07FF84AFFD09FFA9355A355A365A355A365A355A36
%5A355A365A35365AA9355A365A355A5AFFFFFF5A36355A365A355A365A35
%5A365A355A365A355A365A3560FD07FFA9355A355A365A355AA9FD09FF5A
%5A845A355A365A355A36355A5A84FFFF593635362F5A35365AFFFFFFCAFF
%5A8435365AFFCAFFFFFFA8FFFFFFA85A2F362F5A35362F5A35362F5A3536
%2F5A353659A935362F5A353635FD04FFAF5A362F5A35362F5A35362F5A35
%362F5A35362F5A35362F5A84FFA8FFA8842F3635362F5A2F5AA8FFFFFFCA
%FFFFFFA8FFFFFF7E365A5A2F5A35362F5A365AA984FF5A36365A355A3636
%5AFD06FF840D60A8FD0BFF8436355A365A355A365A355A365A355A36365A
%AF365A355A36365AFD04FF855A85355A365A355A365A355A365A355A365A
%355A365A355A3636365A5A5A355A365A355A365AA8FD0DFF845A7E5A365A
%355A365A845AFF5A36355A35362F365AAFFD06FF5A5AA8FD0CFFA92F3635
%5A3536355A3536355A353635365AA935363536353635FD04FF840D855A36
%355A3536355A3536355A3536355A3536355A3536355A35362F5A3536355A
%35362F5AA88484FFFFFF84845A5AAFFD05FF5A5A5A363536355AA984FF5A
%36365A355A365A84FD08FF5A5AFD05FFA8FD07FF845A365A355A365A355A
%365A355A36365AAF3636355A363636FD04FF8435857E5A365A355A365A35
%5A365A355A365A355A365A355A365A355A365A355A365A355A355AA8A984
%AFFFFFFFAF2F84A9FD07FF5A605A5A36365A5AFF5A362F5A35362F362FA9
%FD04FFA8FFFFFF593684FF845A2F3659FFFFFFA8FFFFA82F5A35362F5A35
%362F5A35362F365AA8353635362F3635AFFFFFFF840D845A362F5A35362F
%5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F5AA8
%FD0484FFA8FF845AFD04FFCFFD04FFA935842F365984FF5A36355A365A35
%5A365A36FD08FFAF3636353636845A3684FD05FF845A365A355A365A355A
%365A355A35855A5A365A355A5AFD04FF842FA98436355A365A355A365A35
%5A365A355A365A355A365A355A365A355A365A355A365A355AA9A984845A
%A9FFFFFFA935AFA9843660A9FD04FFFD045A845A59363536355A3536355A
%35365AFD08FFAF7E8484FFFFFF595AFD05FF842F5A3536355A3536355A35
%3635365A842F5A353635FD04FF842F845A363536355A3536355A3536355A
%3536355A3536355A3536355A3536355A3536355A355A8484845A0D847EFD
%04FF602F3635845936A8FFFFFF5A5A5A845AA936355A365A355A365A355A
%365AA8FD0EFF5A5AFD05FF8436355A365A355A365A355A365A355A848435
%365AFD04FF842FA98436355A365A355A365A355A365A355A365A355A365A
%355A365A355A365A355A365A355AA8848460355A5A85A8FD04FFAFA8FFFF
%FF3585FFFFFFA95A845AAF5A35362F5A35362F5A35362F5A2F5AFD04FFA8
%FFFFFFA8FFFFFFA85A0D84FD05FF842F362F5A35362F5A35362F5A35362F
%367E8435FD04FF842F845A3635362F5A35362F5A35362F5A35362F5A3536
%2F5A35362F5A35362F5A35362F5A2F5A8484845A2F5A35365A84FFFFA8FD
%05FFA83684FFFFFF84365AA935365A355A365A355A365A355A365A35AFFD
%0AFF843636605AFD05FF5A5A355A365A355A365A355A365A355A365A84FD
%04FF853585845A365A355A365A355A365A355A365A355A365A355A365A35
%5A365A355A365A355A365AA8858460355A365A358484A9FD06FF845A2FAF
%FFFFFFA95AAF365A363536355A3536355A3536355A353635FD0AFFAF84FD
%08FF5A3536355A3536355A3536355A3536355A35367EFFFF840D857E362F
%5A3536355A3536355A35362F362F362F5A3536355A3536355A3536355A35
%362F5AA88484602F36355A35362F845AA9FD04FFA8607EA9A8FFFFFF84AF
%3536355A5A365A355A365A355A365A355A36365AFD13FF5A5A365A355A36
%5A355A365A355A365A355A363684AF36857E5A365A355A365A355A365A35
%5A355A5A855A5A355A365A355A365A355A365A355A355AA8FF84845A5A36
%5A355A365A35A95AA9FD0BFFAF355A365A352F5A35362F5A35362F5A3536
%2F5A35365AFFFFFFA8FFFFFFA8FFFFFFA8FFFFFFCFFFA8FF5A3635362F5A
%35362F5A35362F5A35362F5A35365A845A362F5A35362F5A35362F5A3536
%2F8484845A84845A2F5A35362F5A35362F5A35362F5AA8FFCAFF5A842F36
%35362F5A353635845A84A8FFFFFFCFFD04FFAF35362F5A35365A365A355A
%365A355A365A355A365A353684FD0FFFA9FFFF855A5A355A355A355A365A
%355A365A355A365A355A365A355A365A355A365A355A365A3584A95A2F5A
%5A85845A365A355A365A355A365A355AA8FD04FFA97E60365A355A365A35
%5A3685848484FD07FF365A355A365A35355A3536355A3536355A3536355A
%35362F365AFD0DFFA8FFA9A9A9FFAFAF84843536355A3536355A3536355A
%3536355A3536355A3536355A3536355A353684602F60A8FF5A845A363536
%355A3536355A35362F84FD04FF84845A363536355A3536355A355A7E84FD
%045A84A935363536355A35365A355A365A355A365A355A365A355A365A35
%363684A8FFFFFFA9FFA885848584FFAFAFFD08FF365A355A365A355A365A
%355A365A355A365A355A365A355A365A355A36A9355A5AAF5A608484355A
%365A355A365A355A365A2F84FFFFFFAF5A60355A365A355A365A355A355A
%5A8584845AAF3636355A365A355A3635362F5A35362F5A35362F5A35362F
%5A35362F362F362F5A355A2F362F360D5A84A8A8FFFFFFA8FFFFFF845A35
%362F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F36845A84
%A9A85A0D845A362F5A35362F5A35362F5A35362F60FFFF5A8435362F5A35
%362F5A35362F5A353635845AA9353635362F5A35362F5A5A355A365A355A
%365A355A365A355A365A355A365A355A365A355A365A355A363684FD07FF
%5A5A365A355A365A355A365A355A365A355A365A355A365A355A365A355A
%35848484A985355AA85A355A365A355A365A355A365A355A3584FF60845A
%355A365A355A365A355A36365AA984AF365A365A355A365A355A36353635
%5A3536355A3536355A3536355A3536355A3536355A3536355A3536355A2F
%60FD06FF84362F5A3536355A3536355A3536355A3536355A3536355A3536
%355A3536355A35847E5A355A84842F36355A3536355A3536355A3536355A
%2F60845A845A2F5A3536355A353635365A847EAF3536355A3536355A3536
%355A5A365A355A365A355A365A355A365A355A365A355A365A355A365A35
%5A365A355A5AFD06FFAF355A355A365A355A365A355A365A355A365A355A
%365A355A365A355A365A355A368484AF8460355A365A355A365A355A365A
%355A365A355A35848460845A355A3536355A36365A8584AF355A365A355A
%365A355A365A352F5A35362F5A35362F5A35362F5A35362F5A35362F5A35
%362F5A35362F5A35362F5AA8FFFFFFA8FF5A3635362F5A35362F5A35362F
%5A35362F5A35362F5A35362F5A35362F5A35362F5A2F362F362F362F5A35
%362F5A35362F5A35362F5A35362F5A2F84845A845A5A845A8435365A847E
%AF35362F5A35362F5A35362F362F365A365A355A365A355A365A355A365A
%355A365A355A365A355A365A355A365A355A35AFFFFF5A5A355A365A355A
%365A355A365A355A365A355A365A355A365A355A365A355A365A355A365A
%355A365A355A365A355A365A355A365A355A365A355A365A358584608485
%84845A85848584FF5A5A355A365A355A365A5AAF845A35845A2F36355A35
%36355A3536355A3536355A3536355A3536355A3536355A353635365AFF7E
%363536355A3536355A3536355A3536355A3536355A3536355A3536355A35
%36355A3536355A3536355A3536355A3536355A3536355A3536355A353635
%5A35362F8484A8A8FFFFAF7E8484AF35363536355A3536353635FD04FFAF
%FFFFAF5A36355A365A355A365A355A365A355A365A355A365A355A365A35
%5A365A355A5A5A355A365A355A365A355A365A355A365A355A365A355A36
%5A355A365A355A365A355A365A355A365A355A365A355A365A355A365A35
%5A365A355A365A355A365A2F84FD06FFA8AF3636355A365A355A365A355A
%845A5AAFA93584A8FF845A2F5A35362F5A35362F5A35362F5A35362F5A35
%362F5A35362F5A35362F3635362F5A35362F5A35362F5A35362F5A35362F
%5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A35
%362F5A35362F5A35362F5A35362F5A35362F60FFFFA8FFFFAF2F3635362F
%5A35362F5A35362F5A5A84845A84355A84FFFF84355A355A365A355A365A
%355A365A355A365A355A365A355A365A355A365A355A365A355A365A355A
%365A355A365A355A365A355A365A355A365A355A365A355A365A355A365A
%355A365A355A365A355A365A355A365A355A365A355A365A355A3584FFFF
%FFAF355A365A355A365A355A365A355A365A5AA9A87E8435365AAFFF842F
%36355A3536355A3536355A3536355A3536355A3536355A3536355A353635
%5A3536355A3536355A3536355A3536355A3536355A3536355A3536355A35
%36355A3536355A3536355A3536355A3536355A3536355A3536355A353635
%5A3536355A2F5AFFAF3536355A3536355A3536355A3536355A353635FD04
%847E6035AF8436365A355A365A355A365A355A365A355A365A355A365A35
%5A365A355A365A355A365A355A365A355A365A355A365A355A365A355A36
%5A355A365A355A365A355A365A355A365A355A365A355A365A355A365A35
%5A365A355A365A355A365A355A355A355A365A355A365A355A365A355A36
%5A355A365A352F3659845A84845A2F5A35362F5A35362F5A35362F5A3536
%2F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A
%35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A3536
%2F5A35362F5A35362F5A35362F5A35362F5A35362F5A2F362F5A35362F5A
%35362F5A35362F5A35362F5A35365A365A355A5A5A355A365A355A365A35
%5A365A355A365A355A365A355A365A355A365A355A365A355A365A355A36
%5A355A365A355A365A355A365A355A365A355A365A355A365A355A365A35
%5A365A355A365A355A365A355A365A355A365A355A365A355A365A355A36
%5A355A365A355A365A355A365A355A365A355A365A35355A35362F5A3536
%355A3536355A3536355A35362F36355A35363536355A3536355A3536355A
%3536355A3536355A3536355A2F36355A2F36355A3536355A3536355A3536
%355A3536355A3536355A3536355A3536355A3536355A3536355A3536355A
%3536355A3536355A3536355A3536355A3536355A3536355A3536355A3536
%5A355A365A355A365A355A365A355A365A355A36367EFFFFFF845A355A35
%5A365A355A365A355A365A355A365A355A365A3585A8AFA8AF5A36355A36
%5A355A365A355A365A355A365A355A365A355A365A355A365A355A365A35
%5A365A355A365A355A365A355A365A355A365A355A365A355A365A355A36
%5A355A365A355A3635362F5A35362F5A35362F5A35362F5A35362F3684FD
%05FFA85A2F362F5A35362F5A35362F5A35362F5A35362F3635A9A884355A
%7EFF84362F5A35362F5A35362F3635362F5A35362F5A35362F5A35362F5A
%35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A3536
%2F5A35362F5A35362F5A35362F5A5A355A365A355A365A355A365A355A36
%5A355A84FD07FFA95A355A365A355A365A355A365A355A365A355A36AF84
%5A355A353636FF845A365A355A365A8485365A355A365A355A365A355A36
%5A355A365A355A365A355A365A355A365A355A365A355A365A355A365A35
%5A365A355A365A355A365A355A365A355A363536355A3536355A3536355A
%3536355A2F84A8FD07FFA8FFA8362F5A3536355A3536355A3536355A3536
%2F84A8355AFFA8362F3635AF59363536353635FFFFAF3536355A3536355A
%3536355A3536355A3536355A3536355A3536355A3536355A3536355A3536
%355A3536355A3536355A3536355A3536355A3536355A5A365A355A365A35
%5A365A355A365A2F858484AFFD09FFA95A355A365A355A365A355A365A35
%5A3636A88435AFA85A3536353684A92F5A365A3585FD04FF5A36355A365A
%355A365A355A365A355A365A355A365A355A365A355A365A355A365A355A
%365A355A365A355A365A355A365A355A365A355A365A352F5A35362F5A35
%362F5A35362F5A2F8484362F5AA8FFFFFFA8FFFFFFA8FFA8362F5A35362F
%5A35362F5A35362F3635AF3536A8A97EAF84362F8484362F5A35367EFD04
%FFAF2F362F362F362F5A35362F5A35362F5A35362F5A35362F5A35362F5A
%35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A3536
%5A365A355A365A355A365A355A3585A85A365A3560FD0AFFA95A365A355A
%365A355A365A355A365AA8603560A8AF84FF843684AF355A365A35A9FD05
%FFAFA8AFA9A95A5A365A355A365A355A365A355A365A355A365A355A365A
%355A365A355A365A355A365A355A365A355A365A355A365A355A365A3535
%5A3536355A3536355A35362F8484362F36355A2F5AFD08FFAFFFA85A3536
%355A3536355A3536355A35A95A3635362F36A8840DA98436355A35365AFD
%0BFF845A35845A363536355A3536355A3536355A3536355A3536355A3536
%355A3536355A3536355A3536355A3536355A3536355A35365A355A365A35
%5A365A355A3584845A36365AAFA8852F84FD0AFFA85A355A355A365A355A
%365A355A7EFF355A3560AFFF5A5AA95A365A355A3585FD08FFA8FFFFFFAF
%FFFFFF5A36365A355A365A355A365A355A365A355A365A355A365A355A36
%5A355A365A355A365A355A365A355A365A355A3635362F5A35362F5A3536
%2F36A8840D3635A9A8FFA85A2FFFFFFFA8FFFFFFA8FFA9FFA85A2F362F5A
%35362F5A35362F3684A92F36355A2F5AA8842F5A353635AFFFFFA8FD04FF
%AF355AA8FD06FFAF2F3635362F5A35362F5A35362F5A35362F5A35362F5A
%35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A5A355A365A35
%5A365A355A84FFFF84355AA8FFFFFF5A5AFD0CFFA95A355A365A355A365A
%355A365A84FF84845AAFAF85355A36367EFD09FF845AFD09FF84365A355A
%365A355A365A355A365A355A365A35363536355A365A355A365A355A365A
%355A365A355A365A355A363536355A3536355A353684FD04FF842F84A8AF
%843684FD0BFFA8FFA8362F5A3536355A3536355A35365AA984A9845A2F36
%2F3684FF84AFFD07FFA935A9FD08FF84363536355A3536355A3536355A35
%362F3635847EA984362F5A3536355A3536355A3536355A3536355A353635
%5A5A365A355A365A355A5AFFA8FD04FF8435605A5A84FD0FFF8436355A36
%5A355A365A355A36362F5A3536355A363684FF84A9FD09FFAF84FD08FFAF
%355A365A355A365A355A365A35365A84A8FFFFFFAFFF5A36355A365A355A
%365A355A365A355A365A355A365A352F5A35362F5A35362FA9FFA8A8FFFF
%FFCA842F3684FFFFFFA8FFFFFFA8FFFFFFA8FD05FF35362F5A35362F5A35
%362F5A35362F5A35362F3684FF5AA9FFFFA8FFFFFFA8FD07FFA8FFFFFFCF
%A935362F5A35362F5A35362F362F5A84FFFFAF5A847E5A7E5A2F362F5A35
%362F5A35362F5A35362F5A35362F5A35365A365A355A365A355AA8FFA9FD
%1AFF5A355A365A355A365A355A365A355A365A353684FF5AAFFD13FFAF35
%5A355A365A355A365A355A5AAFFFFF845A5A8584AF8460365A355A365A35
%5A365A355A365A355A365A355A365A35355A3536355A35362F84FFA9A8FD
%19FF3536355A3536355A3536355A3536355A353659FF8484FD14FF843635
%36355A3536355A35365AFFAFA95A5AA8A9A8845A362F5A3536355A353635
%5A3536355A3536355A3536355A35365A355A365A355A365A35FD1BFF7E5A
%365A355A365A355A365A355A365A355A36FFA885FD15FFAF355A365A355A
%365A355A35AFA95A5AAF84AF845A355A365A355A365A355A365A355A365A
%355A365A355A365A355A3635362F5A35362F5A35362FAFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFCAFF84362F5A35362F5A35362F5A35
%362F5A35362F84FF60A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FF84362F5A35362F5A35362F365A845A845A5A2F362F362F5A35362F5A35
%362F5A35362F5A35362F5A35362F5A35362F5A5A355A365A355A365A355A
%36FD17FF8436355A365A355A365A355A365A355A365A355AFFFFA8FD16FF
%A9355A365A355A365A355A365A355A3636355A365A355A365A355A365A35
%5A365A355A365A355A365A355A365A355A363536355A3536355A35363536
%35AFFD14FF84363536355A3536355A3536355A3536355A35365AFD19FF5A
%36355A3536355A3536355A35362F5A3536355A3536355A3536355A353635
%5A3536355A3536355A3536355A3536355A5A365A355A365A355A365A355A
%36AFFD12FF8436355A365A355A365A355A365A355A365A355A35A9FD18FF
%A85A365A355A365A355A365A355A365A355A365A355A365A355A365A355A
%365A355A365A355A84FFAFAF5A36355A365A352F5A35362F5A35362F5A35
%362F3635AFFD04FFA8FFFFFFA8FFFFFFA8FFFFFF84362F362F5A35362F5A
%35362F5A35362F5A35362F36A8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFFF842F5A35362F5A35362F5A35362F5A35362F5A35362F5A
%35362F5A35362F5A35362F5A2F36A8FD05FF59362F5A35365A365A355A36
%5A355A365A355A365A35FD0FFF845A365A355A365A355A365A355A365A35
%5A365A355A36FD19FF8436365A355A365A355A365A355A365A355A365A35
%5A365A355A365A355A365A355A355AA8FD07FF5A5A365A35355A3536355A
%3536355A3536355A353635AFFD0CFF84362F5A3536355A3536355A353635
%5A3536355A35362F5AA8FD18FFA92F5A3536355A3536355A3536355A3536
%355A3536355A3536355A3536355A35362F84A8FFAFFD07FF593635365A35
%5A365A355A365A355A365A355A363635FD0BFF845A365A355A365A355A36
%5A355A365A355A365A353636A9FD1BFF5A355A365A355A365A355A365A35
%5A365A355A365A355A365A355A365A355A36855AAFFD0AFF5A363635362F
%5A35362F5A35362F5A35362F5A35362FAFFFFFA8FFFFFFCAFF84362F5A35
%362F5A35362F5A35362F5A35362F5A2F5A5AAFFF8484FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFF84A9FFFFA8FF84362F5A35362F5A35362F5A35
%362F5A35362F5A35362F5A35362F5A35362F845A362FA9FFFFA8FFFFFFCA
%FFFFFF35365A355A365A355A365A355A365A355A365A355A36FD07FF8436
%355A365A355A365A355A365A355A365A355A3685A8AFFFFF845AFD12FF5A
%5A3684A9FFFFAF355A365A355A365A355A365A355A365A355A365A355A36
%5A355A365A35A95A36355A35A9FD0AFF5A5A362F5A3536355A3536355A35
%36355A3536353635AFFD04FF84363536355A3536355A3536355A3536355A
%35362F5A7E365AFF84FF3584FD0FFFAF35362F5A2F3684A93536355A3536
%355A3536355A3536355A3536355A3536355A3536355A35845A363536355A
%2FA9FD0BFF8436355A365A355A365A355A365A355A365A355A368484A95A
%36355A365A355A365A355A365A355A365A355A365A355A355AFFFFA95A35
%FD0EFFA9355A365A355A3636355A365A355A365A355A365A355A365A355A
%365A355A365A355A365A35855A36355A84AF846035AFFD09FFA8FF5A362F
%5A35362F5A35362F5A35362F5A35362F362F362F3635362F5A35362F5A35
%362F5A35362F5A35362F5A35362F5A2F5A845A2F3635FFFFFFA8FFFFFFA8
%FFFFFFCF842F362F5A35362F5A35362F5A35362F5A35362F5A35362F5A35
%362F5A35362F5A35362F5A2F5A84362F365AAFA9AF84365AFFA8FFFFFFA8
%FD04FFA8FF7E36365A355A365A355A365A355A365A355A365A355A365A35
%5A365A355A365A355A365A355A365A355A365A355A365A3536365A355A5A
%FD0AFF84355A355A365A355A365A355A365A355A365A355A365A355A365A
%355A365A355A365A355A365AA8FFA95A2F85A9FFA9AF35A9FD0AFFAFA9FF
%5A363536355A3536355A3536355A3536355A3536355A3536355A3536355A
%3536355A3536355A3536355A3536355A3536355A353635363584FD07FFA9
%2F5A3536355A3536355A3536355A3536355A35362F5A3536355A3536355A
%3536355A35362F5AA8FFA8FFA83635AFA8AF5A5AFD0CFFAFA9FF5A5A365A
%355A365A355A365A355A365A355A365A355A365A355A365A355A365A355A
%365A355A365A355A365A355A365A355A365A355A3560A9FD05FFAF5A355A
%365A355A365A355A365A355A365A355A355A355A3536355A365A355A365A
%355A363684FFA9FFFFFFA83635845A5AFD0DFFA8AFFF842F5A35362F5A35
%362F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F
%5A35362F5A35362F5A35362F5A35362F5A2F3684FFFFFFA8FF5A362F5A35
%362F5A35362F5A35362F5A35363584A8A9A8A95A362F5A35362F5A35362F
%3635FFA8AFFFFFA8FFA85A2F84A9FFA8FFFFFFA8FFFFFFA8FD04FFAFFF84
%36365A355A365A355A365A355A365A355A365A355A365A355A365A355A36
%5A355A365A355A365A355A365A355A365A355A365A355A365A355A84FD04
%FFAF355A365A355A365A355A365A355A363684FFA8845A8484AFA860355A
%355A365A355A365AFD19FFA8A9FF842F5A35362F5A355A35362F36355A35
%36355A3536355A3536355A3536355A3536355A3536355A3536355A353635
%5A3536355A3536355A35362F365AFFFFFFA8362F5A3536355A3536355A35
%36353684FF35362F362F362F84A85A3536355A3536355A35A9FFA9FD16FF
%AFFFFF365A35365AAFAFFFFFFFA8853536355A365A355A365A355A365A35
%5A365A355A365A355A365A355A365A355A365A355A365A355A365A355A36
%5A35365AFFA860355A355A365A355A365A355A36365AFF36365AAF5A3635
%5A3584A85A365A355A365A355A5AFFA9FD15FFA9A8FF35362F3684FFA884
%595A5AA8CFAF35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A
%35362F5A35362F5A35362F5A35362F5A35362F5A35362F3635362F5A3536
%2F5A35362F5A35362F362FA95A3684FFA85A2F362F362FA95A3635362F5A
%35362F3659FD05FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFAFFFFF365A36
%3684FF5A36355A3636355AA9FF5A5A365A355A365A355A365A355A365A35
%5A365A355A365A355A365A355A365A355A365A355A365A355A365A355A36
%5A355A365A355A365A355A365A355A3660A95A35AFA836355A355A363684
%AF365A355A365A355A36365AFD14FFA8FF353635367EFF5936353635362F
%362F36A8AF2F5A3536355A3536355A3536355A3536355A3536355A353635
%5A3536355A3536355A3536355A3536355A3536355A3536355A3536355A35
%36355A353635365AA92F36A8AF2F84A8FF5A36355AA85A3536355A353635
%5A353659FD14FF355A365A35FF8436355A36365AAF845A2F5AFF842F5A36
%5A355A365A355A365A355A365A355A365A355A365A355A365A355A365A35
%5A365A355A365A355A365A355A365A355A365A355A365A355A365A3585A8
%363584FFFFFFAF84FF5A5A5AAF355A365A355A365A355A36365AFD12FF35
%362F5A2F84A85A2F3635A95AFFA8AFA8360DA9A8362F5A35362F5A35362F
%5A35362F5A35362F5A35362F362F362F3635362F5A35362F5A35362F5A35
%362F5A35362F5A35362F5A35362F5A35362F5A35365AAF2F362F5A5A5A0D
%5AAF5A2F5AA8362F5A35362F5A35362F5A353635FFFFFFA8FFFFFFA8FFFF
%FFA8FD04FFA95A355A3636A8AF35363536A9FF843636FF84365AFF365A36
%5A355A365A355A365A355A365A355A365A356084AF84855A36355A365A35
%5A365A355A365A355A365A355A365A355A365A355A365A355A365A355AAF
%5A355A36363585FFFF5A3684AF355A365A355A365A355A365A355A5AFD0E
%FFAF363536355A35A984365A847EFFFFA93536355A2F5AAF5A2F5A353635
%5A3536355A3536355A35362F36355A84FD05FF5A36355A3536355A353635
%5A3536355A3536355A3536355A3536355A3536355A35362FA98436355A35
%367EA95A5A35FF5A36355A3536355A3536355A353635365AFD0CFFA92F36
%5A365A355AA8A92FA9FFFF5A5AAF84355A36365AFF5A5A355A365A355A36
%5A355A365A355A356084A984A984AFFD04FF5A36355A365A355A365A355A
%365A355A365A355A365A355A365A355A365A355A365A35FF8436355A3636
%2F3635AF8436365A355A365A355A365A355A365A35365AFD0AFFAF355A35
%2F5A35362FA9A8362FA9A8362F5A35362F5A2F84A85A35362F5A35362F5A
%35362F5A35362F84845A2F36355A8484A8FFFFFF35362F5A35362F5A3536
%2F5A35362F5A35362F5A35362F5A35362F5A35362F5A353659FF845A2F36
%2F3659AF84362F5A35362F5A35362F5A35362F5A35362F3659FD05FFA8FF
%FFA92F3635365A365A355A5AFF5A5A36FFA95A365A355A3636A8AF355A35
%5A365A355A365A355A365A3584A8365AA95A5A355A84A9FFFFFF84355A36
%5A355A365A355A365A355A365A355A365A355A365A355A365A355A365A35
%5A5AAFA9AF84A9A8FF845A355A365A355A365A355A365A355A365A355A36
%365AFD06FFAF355A365A35355A35362F36A8A92F3635FF5A36353635365A
%FF5A363536355A3536355A3536355A3536845A2FA9A88535362F6084FFFF
%FF8436355A3536355A3536355A3536355A35362F5A3536355A3536355A35
%36355A353635362F5A5A85846035363536355A3536355A3536355A353635
%5A3536355A353635FD04FFA93536355A35365A355A365A3560FF852F3636
%5A355A363636FF8436355A365A355A365A355A365A355A5AA92F5AFF6035
%5A355A35A9A9FFFFA9355A355A365A355A365A355A365A355A355AAF8535
%5A355A365A355A365A355A365A355A36362F36355A355A365A355A365A35
%5A365A355A365A355A365A355A363635858484355A365A355A3635362F5A
%35362F84FFA935362F362F365AFFA8362F362F5A35362F5A35362F5A3536
%2F847E362FA9A9FFA85A2F367EAFFFFF5A3635362F5A35362F5A35362F5A
%2F362F3684FFA85A2F362F5A35362F5A35362F5A35362F5A35362F5A3536
%2F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F362F362F5A
%35362F5A5A355A365A355A3560A9FFA9A984AFFFFF845A365A355A365A35
%5A365A355A365A355A5A85355A36605AAFAF5A35A9A9FFA95A365A355A36
%5A355A365A355A365A5A6084FFFFFF8436355A365A355A365A355A365A35
%5A365A355A365A355A365A355A365A355A365A355A365A355A365A355A36
%5A355A365A355A365A355A363536355A3536355A2F365AA9A8A984843536
%2F5A3536355A3536355A3536355A35362F5A845A2F5A355A84AF2F5A84FF
%FF5A2F5A3536355A3536355A35362F5AA8FD06FFA92F36355A3536355A35
%36355A3536355A3536355A3536355A3536355A3536355A3536355A353635
%5A3536355A3536355A3536355A3536355A5A365A355A365A355A36362F5A
%35362F5A365A355A365A355A365A355A365A355A365A358584362F84FFFF
%5A3684A9A984355A355A365A355A365A355A36365AFD07FFA85A365A355A
%365A355A365A355A365A355A365A355A365A355A365A355A365A355A365A
%355A365A355A365A355A365A355A365A355A365A352F5A35362F5A35362F
%5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362FA984
%5A2F36355A8484595A2F5A35362F5A35362F5A35362F5A2F5AFD04FFA8FF
%FFFF353635362F5A35362F5A35362F5A35362F5A35362F5A35362F5A3536
%2F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A35365A36
%5A355A365A355A365A355A365A355A365A355A365A355A365A355A365A35
%5A365A355A368584A984A98484355A355A365A355A365A355A365A355A36
%3684FD08FF60365A355A365A355A365A355A365A355A365A355A365A355A
%365A355A365A355A365A355A365A355A365A355A365A355A365A355A365A
%35355A3536355A3536355A3536355A3536355A3536355A2F5A5A5A353635
%5A3536355A3536355A2F5A5A845A362F5A3536355A3536355A3536355A35
%362F5A84FD09FF5A363536355A35362F5A35362F5A3536355A3536355A35
%36355A3536355A3536355A3536355A3536355A3536355A3536355A353635
%5A35365A355A365A355A365A355A365A355A365A355A365A2F84A985A860
%355A355A365A355A365A355A365A355A365A355A365A355A365A355A365A
%355A365AAFFD09FFA884A95A35362F36355A355A5A5A355A355A355A365A
%355A365A355A365A355A365A355A365A355A365A355A365A355A365A355A
%365A35363535362F5A35362F5A35362F5A35362F5A35362F5A2F5AA85A0D
%5A845A2F362F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F
%5A35362F3635A9FD04FFCFFFFFFF8484FFAF5A845A8484A9A8FFA8FFAFFF
%A88435362F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A
%35362F5A35362F3635847E84FF5A5A365A355A365A355A365A355A365A35
%5A3584A960355A3560A960355A365A355A365A355A365A355A365A355A36
%5A355A365A355A365A355A365A358484AFAFFFFFFFA885FFFF5AFD0FFF84
%5A365A355A365A355A365A355A365A355A365A355A365A355A365A355A36
%5A355A5AAF7E85845AAF355A3536355A3536355A3536355A35362F84A85A
%2F5A35362F5AA85A2F5A3536355A3536355A3536355A3536355A3536355A
%3536355A3536355A35362F36355A35847E84FFAF5AFD11FF84363536355A
%3536355A3536355A3536355A3536355A3536355A3536355A353659A95A84
%3536368484355A365A355A365A355A365A355A3584A860355A355A363684
%FFAF5A355A365A355A365A355A365A355A365A355A365A355A365A355A36
%5A355A365A355A365A2F5AFFFF5AFD13FF845A365A355A365A355A365A35
%5A365A355A365A355A365A355A365A355A35A95A85A85A352F8484362F5A
%35362F5A35362F5A35362F60A85A2F5A35362F3684FFCAFFA85A2F5A3536
%2F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A
%35362F5A5AFD05FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF843635362F5A
%35362F5A35362F5A35362F5A35362F5A35362F5A35362F36845A59FF8436
%608485355A365A355A365A355A365A3584AF60355A365A355A84FFFFFFA8
%84845A365A355A365A355A365A355A365A355A365A355A365A355A365A35
%5A365A355A365A355A3585FD16FF8436355A365A355A365A355A365A355A
%365A355A365A355A365A355A36A95A5AA9A98459AF3536355A3536355A35
%36355A2F5AA85A2F36355A353684FFFFFF84365AA92F5A3536355A353635
%5A3536355A3536355A3536355A3536355A3536355A3536355A3536353684
%FD05FFA8A9FFA95A84FD0CFF5A36355A3536355A3536355A3536355A3536
%355A3536355A353635365AA92F5AA984FF5A5A365A355A365A355A365A2F
%84A95A355A365A355A84FFFFFFA8365AFF5A5A355A365A355A365A355A36
%5A355A365A355A365A355A365A355A365A355A365A355A365A2FA9FD05FF
%A92F6035365AFD0DFF365A355A365A355A365A355A365A355A365A355A36
%5A355A365A355A84A95A845A59362F5A35362F5A35362F5A2F5AA85A2F36
%2F5A2F3684FFFFFF84365AAF353635362F5A35362F5A35362F5A35362F5A
%35362F5A35362F5A35362F5A35362F5A35362F5A353684FFFFFFA8FFA95A
%0D5A84FFCFFFFFFFA8FFFFFFA8FD04FF842F362F5A35362F5A35362F5A35
%362F5A35362F5A35362F5A35362F365A847E845A355A365A355A365A355A
%365AA860355A355A363684FFFFFFA8365AFF5A5A365A355A365A355A365A
%355A365A355A365A355A365A355A365A355A365A355A365A355A365A35FD
%07FF3660FD11FF5A355A365A355A365A355A365A355A365A355A365A355A
%365A355A365A355A353536355A3536355A3536355A35A9353635362F3684
%FFFFFFA8365AFF5A36355A3536355A3536355A3536355A3536355A353635
%5A3536355A3536355A3536355A3536355A355AA8FD05FF843584FD05FFA8
%FD0BFF8436355A3536355A3536355A3536355A3536355A3536355A353635
%5A3536355A5A365A355A365A355A365A355A7EAF355A363684FFFFFFA836
%5AFF5A36365A355A365A355A365A355A365A355A365A355A365A355A365A
%355A365A355A365A355A365A355A5AFD06FFAF3560AFFFA984355A3684FD
%0AFF5A36355A365A355A365A355A365A355A365A355A365A355A365A355A
%365A352F5A35362F5A35362F5A35362F365AAF353684FFCAFFA83559AF59
%362F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F
%5A35362F5A35362F5A35362F5AFFFFA8FFFFFFA85A2F5A35360D3635360D
%84FD04FFA8FD04FFAF35362F5A35362F5A35362F5A35362F5A35362F5A35
%362F5A35362F5A35365A365A355A365A355A365A355A36365AFFA8FFFFFF
%A9365AFF5A36355A365A355A365A355A365A355A365A355A365A355A365A
%355A365A355A365A355A365A355A365A355A5AFD07FFA95A355A5AA9AFFF
%A95A35FD0AFFA9355A365A355A365A355A365A355A365A355A365A355A36
%5A355A365A35355A3536355A3536355A3536355A35365AFFFFFF84365AAF
%59363536355A3536355A3536355A35362F5A3536355A3536355A3536355A
%3536355A3536355A3536355A35362F5AFD09FFAFA8FD05FF7E3684FD09FF
%84362F5A3536355A3536355A3536355A3536355A3536355A3536355A3536
%5A355A365A355A365A355A365A355A36365AFFA9365AFF5A36355A365A35
%5A365A355A365A355A3536355A355A355A365A355A365A355A365A355A36
%5A355A365A355A365A5AFD10FF8435FD08FFAF365A365A355A365A355A36
%5A355A365A355A365A355A365A355A365A355A3635362F5A35362F5A3536
%2F5A35362F5A35365AA95AAF353635362F5A35362F5A35362F5A35363584
%84A9848435362F5A35362F5A35362F5A35362F5A35362F5A35362F5A3536
%A8FFFFFFA8FFFFFFA8FD06FF840D5AFFFFA8FD04FFA92F362F5A35362F5A
%35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A5A355A365A35
%5A365A355A365A355A365A355A5A845A5A365A355A365A355A365A355A36
%5A84FF84855A85A8FF845A365A355A365A355A365A355A365A355A365A35
%5A365A35AFFD0CFF845A2F5A35AFFD06FF5A5A355A365A355A365A355A36
%5A355A365A355A365A355A365A355A365A355A363536355A3536355A3536
%355A3536355A353635363536355A3536355A3536355A35362F5AA8A93536
%2F362F365AAF84363536355A3536355A3536355A3536355A3536355A3536
%5AFD0BFF84362F84A884A8FD05FF59363536355A3536355A3536355A3536
%355A3536355A3536355A3536355A3536355A5A365A355A365A355A365A35
%5A365A355A365A355A365A355A365A355A365A355A363684AF35365AA936
%5A355A36FF5A5A365A355A365A355A365A355A365A355A365A355A363684
%FD0BFFA8FD09FF5A36355A365A355A365A355A365A355A365A355A365A35
%5A365A355A365A355A365A352F5A35362F5A35362F5A35362F5A35362F5A
%35362F5A35362F5A35362F5A35362F3659AF2F5AA8FFA83635362F365AAF
%2F3635362F5A35362F5A35362F5A35362F5A35362F5A2F36A8FFFFFFA8FF
%FFFFA8FD07FFA8FFFFFF593635362F5A35362F5A35362F5A35362F5A3536
%2F5A35362F5A35362F5A35362F5A3536
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2013-12-26T23:21:38+01:00</xmp:CreateDate>
         <xmp:ModifyDate>2013-12-26T23:21:39+01:00</xmp:ModifyDate>
         <xmp:MetadataDate>2013-12-26T23:21:39+01:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AdnSvHuxV2KuxV2KuxV2K&#xA;uxVlvkAiOHzFcIaXUOlXBhYdVrSrDwIoMxNT/COnEHO0ewmevCV3kLUdKS21jSL68OnHVYY44b79&#xA;lChbkrHagYPvuNu+OpjK4yAvh6Lo5xqUZHh4uqNs/L35cw3sGmXGp3GqX13IIVmtFCQxs5AU1PKu&#xA;/cFvlkJZcxHEAAB3tkcOAERMjInu5Jdo9hNon5kWthBJ6pt71YRINiY3PFq+/BjXLMkuPCSe5qxQ&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:BB6309407A6EE31197EE809D0E8F5AA2</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:BB6309407A6EE31197EE809D0E8F5AA2</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:B26309407A6EE31197EE809D0E8F5AA2</stRef:instanceID>
            <stRef:documentID>xmp.did:B26309407A6EE31197EE809D0E8F5AA2</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B26309407A6EE31197EE809D0E8F5AA2</stEvt:instanceID>
                  <stEvt:when>2013-12-26T23:11:27+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BB6309407A6EE31197EE809D0E8F5AA2</stEvt:instanceID>
                  <stEvt:when>2013-12-26T23:21:39+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>600.000000</stDim:w>
            <stDim:h>600.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -600 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 600 li
600 600 li
600 0 li
cp
clp
597.74 420.406 mo
598.101 420.757 li
600 418.855 li
600 417.445 li
597.391 420.057 li
597.74 420.406 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.278431 .580392 .729412 rgb
f
595.15 367.801 mo
594.801 368.15 li
600 373.352 li
600 371.932 li
595.511 367.439 li
595.15 367.801 li
cp
f
589.271 428.879 mo
589.621 429.229 li
595.271 423.577 li
594.92 423.228 li
594.57 422.877 li
588.92 428.529 li
589.271 428.879 li
cp
f
589.5 197.25 mo
588.351 196.91 587.281 196.639 586.301 196.429 cv
585.23 196.179 584.221 195.999 583.28 195.849 cv
582.271 195.719 581.381 195.649 580.641 195.659 cv
579.681 195.679 578.46 195.829 578.16 196.459 cv
577.221 198.45 585.08 205.492 600 212.844 cv
600 211.454 li
599.98 211.444 599.971 211.444 599.951 211.434 cv
598.811 210.904 598.341 210.523 598.451 210.284 cv
598.521 210.124 598.67 209.824 598.75 209.654 cv
598.771 209.614 598.791 209.563 598.811 209.522 cv
598.82 209.503 597.091 208.593 596.891 208.493 cv
595.461 207.703 594.07 206.892 592.851 206.102 cv
590.431 204.542 588.951 203.141 588.75 202.251 cv
588.561 201.421 589.16 200.85 590.781 200.951 cv
591.601 201 592.41 201.05 593.861 201.741 cv
594.99 202.271 595.48 202.711 595.271 202.861 cv
595.25 202.851 li
595.19 202.911 595.031 202.931 594.771 202.901 cv
593.841 202.801 593.08 202.821 592.67 203.021 cv
592.65 203.042 592.621 203.051 592.611 203.072 cv
592.561 203.091 592.521 203.122 592.49 203.162 cv
592.291 203.341 592.281 203.631 592.521 204.032 cv
593.25 205.202 596.341 207.002 599.281 208.533 cv
599.341 208.393 599.42 208.223 599.521 208.022 cv
599.67 207.693 599.841 207.333 599.951 207.102 cv
599.971 207.073 599.98 207.033 600 206.993 cv
600 200.92 li
599.471 200.71 598.94 200.491 598.431 200.291 cv
595.261 199.04 592.24 198.019 589.5 197.25 cv
cp
f
592.33 364.97 mo
592.681 364.609 li
587.041 358.968 li
586.681 359.317 li
586.33 359.678 li
591.971 365.319 li
592.33 364.97 li
cp
f
599.521 208.022 mo
599.42 208.223 599.341 208.393 599.281 208.533 cv
596.341 207.002 593.25 205.202 592.521 204.032 cv
592.281 203.631 592.291 203.341 592.49 203.162 cv
592.521 203.122 592.561 203.091 592.611 203.072 cv
592.621 203.051 592.65 203.042 592.67 203.021 cv
593.08 202.821 593.841 202.801 594.771 202.901 cv
595.031 202.931 595.19 202.911 595.25 202.851 cv
595.271 202.861 li
595.48 202.711 594.99 202.271 593.861 201.741 cv
592.41 201.05 591.601 201 590.781 200.951 cv
589.16 200.85 588.561 201.421 588.75 202.251 cv
588.951 203.141 590.431 204.542 592.851 206.102 cv
594.07 206.892 595.461 207.703 596.891 208.493 cv
597.091 208.593 598.82 209.503 598.811 209.522 cv
598.791 209.563 598.771 209.614 598.75 209.654 cv
598.67 209.824 598.521 210.124 598.451 210.284 cv
598.341 210.523 598.811 210.904 599.951 211.434 cv
599.971 211.444 599.98 211.444 600 211.454 cv
600 206.993 li
599.98 207.033 599.971 207.073 599.951 207.102 cv
599.841 207.333 599.67 207.693 599.521 208.022 cv
cp
.988235 .988235 .988235 rgb
f
582.71 509.902 mo
575.46 515.085 573.78 525.188 578.95 532.439 cv
583.79 539.213 592.91 541.122 600 537.141 cv
600 529.019 li
591.541 535.061 li
591.541 535.061 591.031 535.4 590.591 534.791 cv
590.19 534.251 590.641 533.449 590.641 533.449 cv
591.681 531.409 591.761 529.381 590.471 527.568 cv
590.061 526.988 589.92 526.828 589.371 526.219 cv
586.801 528.059 li
586.801 528.059 586.07 528.469 585.44 527.589 cv
584.86 526.768 585.48 526.219 585.48 526.219 cv
587.75 524.598 li
587.111 523.947 586.28 523.107 585.601 522.156 cv
583.551 519.275 584.181 515.995 586.871 514.074 cv
588.15 513.154 589.24 512.814 589.98 512.773 cv
589.98 512.773 590.98 512.684 591.24 513.523 cv
591.511 514.344 590.641 514.734 590.641 514.734 cv
590.021 514.795 589.141 515.064 588.121 515.795 cv
586.23 517.145 586.4 519.046 587.621 520.756 cv
588.371 521.807 589.041 522.497 589.771 523.146 cv
593.281 520.646 li
593.281 520.646 594.17 519.986 594.83 520.916 cv
595.49 521.837 594.631 522.457 594.591 522.486 cv
591.281 524.848 li
592.021 525.728 592.511 526.309 592.92 527.348 cv
593.391 528.589 593.44 529.881 593.111 531.18 cv
593.15 531.229 li
600 526.328 li
600 508.982 li
594.711 506.021 587.961 506.151 582.71 509.902 cv
cp
.278431 .580392 .729412 rgb
f
593.111 531.18 mo
593.44 529.881 593.391 528.589 592.92 527.348 cv
592.511 526.309 592.021 525.728 591.281 524.848 cv
594.591 522.486 li
594.631 522.457 595.49 521.837 594.83 520.916 cv
594.17 519.986 593.281 520.646 593.281 520.646 cv
589.771 523.146 li
589.041 522.497 588.371 521.807 587.621 520.756 cv
586.4 519.046 586.23 517.145 588.121 515.795 cv
589.141 515.064 590.021 514.795 590.641 514.734 cv
590.641 514.734 591.511 514.344 591.24 513.523 cv
590.98 512.684 589.98 512.773 589.98 512.773 cv
589.24 512.814 588.15 513.154 586.871 514.074 cv
584.181 515.995 583.551 519.275 585.601 522.156 cv
586.28 523.107 587.111 523.947 587.75 524.598 cv
585.48 526.219 li
585.48 526.219 584.86 526.768 585.44 527.589 cv
586.07 528.469 586.801 528.059 586.801 528.059 cv
589.371 526.219 li
589.92 526.828 590.061 526.988 590.471 527.568 cv
591.761 529.381 591.681 531.409 590.641 533.449 cv
590.641 533.449 590.19 534.251 590.591 534.791 cv
591.031 535.4 591.541 535.061 591.541 535.061 cv
600 529.019 li
600 526.328 li
593.15 531.229 li
593.111 531.18 li
cp
.988235 .988235 .988235 rgb
f
580.801 437.352 mo
581.15 437.711 li
586.801 432.061 li
586.451 431.699 li
586.101 431.359 li
580.45 437.001 li
580.801 437.352 li
cp
.278431 .580392 .729412 rgb
f
583.851 356.498 mo
584.21 356.137 li
578.57 350.496 li
578.21 350.846 li
577.86 351.205 li
583.5 356.848 li
583.851 356.498 li
cp
f
560.091 41.7529 mo
527.98 73.6724 li
540.301 72.8423 556.78 82.2246 564.87 90.3569 cv
572.7 98.2393 582.601 112.804 582 124.478 cv
600 106.583 li
600 77.5439 li
600 54.8066 li
591.33 46.0742 li
583.44 51.2764 569.271 49.3252 560.091 41.7529 cv
cp
f
572.33 445.824 mo
572.681 446.185 li
578.33 440.532 li
577.971 440.183 li
577.62 439.832 li
571.98 445.475 li
572.33 445.824 li
cp
f
591.67 191.087 mo
590.511 190.757 589.361 190.467 588.25 190.227 cv
587.101 189.957 586 189.757 585.011 189.627 cv
583.881 189.467 582.82 189.397 581.87 189.407 cv
579.78 189.457 578.46 189.988 577.931 190.977 cv
577.92 190.977 li
575.841 195.369 li
573.891 199.5 586.58 208.293 600 214.835 cv
600 212.844 li
585.08 205.492 577.221 198.45 578.16 196.459 cv
578.46 195.829 579.681 195.679 580.641 195.659 cv
581.381 195.649 582.271 195.719 583.28 195.849 cv
584.221 195.999 585.23 196.179 586.301 196.429 cv
587.281 196.639 588.351 196.91 589.5 197.25 cv
592.24 198.019 595.261 199.04 598.431 200.291 cv
598.94 200.491 599.471 200.71 600 200.92 cv
600 199 li
600 197.58 li
600 193.899 li
598.641 193.378 597.311 192.888 596.07 192.468 cv
594.66 191.978 593.181 191.507 591.67 191.087 cv
cp
.988235 .988235 .988235 rgb
f
581.08 507.623 mo
572.57 513.705 570.601 525.558 576.67 534.07 cv
582.04 541.582 591.91 543.993 600 540.271 cv
600 537.141 li
592.91 541.122 583.79 539.213 578.95 532.439 cv
573.78 525.188 575.46 515.085 582.71 509.902 cv
587.961 506.151 594.711 506.021 600 508.982 cv
600 505.832 li
594.031 503.102 586.801 503.541 581.08 507.623 cv
cp
f
569.73 342.363 mo
569.381 342.723 li
575.03 348.375 li
575.381 348.014 li
575.74 347.664 li
570.091 342.013 li
569.73 342.363 li
cp
.278431 .580392 .729412 rgb
f
569.15 448.285 mo
567.25 450.025 564.91 451.256 562.381 451.785 cv
562.49 452.266 li
562.591 452.767 li
565.29 452.186 567.801 450.896 569.83 449.016 cv
569.48 448.635 li
569.15 448.285 li
cp
f
566.71 339.771 mo
566.99 339.352 li
564.69 337.832 562.011 336.951 559.24 336.811 cv
559.221 337.322 li
559.19 337.801 li
561.79 337.941 564.29 338.762 566.44 340.193 cv
566.71 339.771 li
cp
f
551.03 450.115 mo
550.761 450.535 li
553.051 452.055 555.73 452.946 558.49 453.086 cv
558.53 452.576 li
558.551 452.096 li
555.96 451.955 553.46 451.125 551.311 449.695 cv
551.03 450.115 li
cp
f
548.591 341.643 mo
550.49 339.882 552.83 338.672 555.36 338.121 cv
555.25 337.641 li
555.15 337.141 li
552.44 337.732 549.94 339.032 547.91 340.912 cv
548.271 341.293 li
548.591 341.643 li
cp
f
542.36 441.863 mo
542.011 442.223 li
547.66 447.875 li
548.011 447.515 li
548.37 447.164 li
542.721 441.514 li
542.36 441.863 li
cp
f
545.78 344.443 mo
545.42 344.094 li
545.07 343.744 li
539.66 349.155 li
540.37 349.855 li
545.78 344.443 li
cp
f
541.94 379.984 mo
544.36 377.563 544.36 373.633 541.94 371.212 cv
539.521 368.791 535.591 368.791 533.181 371.212 cv
530.75 373.643 530.75 377.554 533.181 379.984 cv
535.591 382.404 539.521 382.404 541.94 379.984 cv
cp
.988235 .988235 .988235 rgb
f
533.891 433.391 mo
533.54 433.75 li
539.19 439.402 li
539.54 439.041 li
539.891 438.691 li
534.24 433.04 li
533.891 433.391 li
cp
.278431 .580392 .729412 rgb
f
530.66 368.69 mo
534.46 364.89 540.66 364.89 544.46 368.69 cv
548.271 372.502 548.271 378.693 544.46 382.506 cv
540.65 386.316 534.46 386.307 530.66 382.506 cv
526.851 378.693 526.851 372.502 530.66 368.69 cv
cp
527.41 390.888 mo
532.07 395.559 539.78 395.449 544.601 390.628 cv
552.721 382.506 li
557.53 377.693 557.65 369.971 552.98 365.31 cv
533.931 346.254 li
533.67 346.014 532.92 345.534 531.83 346.625 cv
508.681 369.781 li
507.66 370.811 508.21 371.662 508.41 371.892 cv
527.41 390.888 li
cp
f
525.42 424.918 mo
525.07 425.268 li
530.721 430.919 li
531.07 430.569 li
531.42 430.22 li
525.771 424.567 li
525.42 424.918 li
cp
f
533.181 371.212 mo
535.591 368.791 539.521 368.791 541.94 371.212 cv
544.36 373.633 544.36 377.563 541.94 379.984 cv
539.521 382.404 535.591 382.404 533.181 379.984 cv
530.75 377.554 530.75 373.643 533.181 371.212 cv
cp
543.051 381.085 mo
546.07 378.054 546.07 373.133 543.051 370.111 cv
540.021 367.08 535.101 367.08 532.07 370.111 cv
529.051 373.133 529.051 378.054 532.07 381.085 cv
535.101 384.115 540.021 384.115 543.051 381.085 cv
cp
f
532.07 370.111 mo
535.101 367.08 540.021 367.08 543.051 370.111 cv
546.07 373.133 546.07 378.054 543.051 381.085 cv
540.021 384.115 535.101 384.115 532.07 381.085 cv
529.051 378.054 529.051 373.133 532.07 370.111 cv
cp
544.46 382.506 mo
548.271 378.693 548.271 372.502 544.46 368.69 cv
540.66 364.89 534.46 364.89 530.66 368.69 cv
526.851 372.502 526.851 378.693 530.66 382.506 cv
534.46 386.307 540.65 386.316 544.46 382.506 cv
cp
.988235 .988235 .988235 rgb
f
559.94 39.832 mo
523.551 76.0132 li
535.23 71.7021 554.79 82.0947 563.931 91.2979 cv
571.99 99.4106 584.08 117.176 579.681 128.849 cv
600 108.653 li
600 106.583 li
582 124.478 li
582.601 112.804 572.7 98.2393 564.87 90.3569 cv
556.78 82.2246 540.301 72.8423 527.98 73.6724 cv
560.091 41.7529 li
569.271 49.3252 583.44 51.2764 591.33 46.0742 cv
600 54.8066 li
600 52.916 li
591.371 44.2339 li
583.92 50.1753 568.881 48.0044 559.94 39.832 cv
cp
f
558.881 154.307 mo
514.431 198.5 li
513.5 197.679 512.53 196.919 511.54 196.219 cv
511.221 195.999 510.891 195.769 510.551 195.559 cv
510.36 195.419 510.181 195.309 509.971 195.189 cv
509.75 195.049 509.521 194.909 509.311 194.789 cv
509 194.609 508.7 194.439 508.4 194.279 cv
507.08 193.558 505.721 192.958 504.351 192.458 cv
503.99 192.318 503.641 192.208 503.29 192.098 cv
502.931 191.968 502.58 191.878 502.221 191.768 cv
501.87 191.678 501.511 191.578 501.16 191.498 cv
500.46 191.328 499.74 191.198 499.021 191.087 cv
498.65 191.028 498.301 190.988 497.95 190.948 cv
497.601 190.908 497.24 190.887 496.881 190.858 cv
496.53 190.828 496.181 190.818 495.82 190.807 cv
495.49 190.797 495.131 190.788 494.79 190.807 cv
493.301 190.837 491.851 190.998 490.431 191.318 cv
490.2 191.368 489.96 191.427 489.71 191.488 cv
489.391 191.568 489.061 191.668 488.75 191.758 cv
488.431 191.858 488.11 191.968 487.79 192.088 cv
487.58 192.158 487.381 192.238 487.181 192.328 cv
487.03 192.378 486.891 192.438 486.74 192.508 cv
486.471 192.628 486.2 192.748 485.95 192.878 cv
485.051 193.329 484.2 193.829 483.37 194.409 cv
483.101 194.619 482.83 194.808 482.57 195.029 cv
459.08 171.381 li
465.971 162.879 464.45 149.125 455.46 139.132 cv
499.9 94.959 li
499.181 96.769 498.67 98.6699 498.351 100.661 cv
498.28 101.051 498.221 101.45 498.17 101.851 cv
498.07 102.651 498 103.462 497.95 104.292 cv
497.931 104.662 497.92 105.031 497.91 105.402 cv
497.9 105.732 497.9 106.072 497.9 106.402 cv
497.92 107.952 498.03 109.523 498.24 111.124 cv
498.29 111.483 498.341 111.854 498.4 112.214 cv
498.46 112.584 498.521 112.944 498.591 113.324 cv
498.771 114.204 498.96 115.105 499.19 115.995 cv
499.311 116.485 499.44 116.955 499.58 117.426 cv
499.66 117.686 499.74 117.955 499.811 118.195 cv
499.91 118.536 500.03 118.866 500.141 119.206 cv
500.28 119.626 500.42 120.047 500.57 120.456 cv
500.75 120.967 500.95 121.467 501.15 121.957 cv
501.271 122.267 501.391 122.557 501.53 122.867 cv
501.67 123.207 501.82 123.548 501.971 123.878 cv
503.69 127.698 505.95 131.47 508.74 135.051 cv
509.11 135.511 509.471 135.971 509.86 136.441 cv
510.19 136.852 510.53 137.241 510.881 137.651 cv
511.341 138.162 511.79 138.682 512.271 139.182 cv
512.681 139.612 513.08 140.032 513.49 140.442 cv
527.261 154.307 545.61 159.418 558.881 154.307 cv
cp
518.511 99.5298 mo
520.08 97.9697 521.62 99.6099 521.62 99.6099 cv
523.62 101.631 li
525.061 100.2 527.53 99.1499 529.631 98.6895 cv
529.631 98.6895 533.141 98.0801 534.021 100.23 cv
535.101 102.872 532.54 103.632 532.54 103.632 cv
531.021 103.972 528.74 104.142 525.91 106.942 cv
522.851 109.983 523.351 112.864 525.28 114.805 cv
527.78 117.325 530.131 117.046 535.7 114.975 cv
542.29 112.464 547.28 112.894 551.57 117.205 cv
555.37 121.026 556.101 127.669 553.181 131.97 cv
555.24 134.07 li
555.24 134.07 556.7 135.421 554.98 137.132 cv
553.33 138.772 552 137.191 552 137.191 cv
550.12 135.301 li
547.511 137.812 545.181 138.882 542.42 139.211 cv
542.42 139.211 539.32 139.442 538.601 137.251 cv
537.721 134.591 540.03 134.021 540.03 134.021 cv
542.79 133.601 544.82 132.931 547.29 130.459 cv
550.44 127.339 550.471 124.287 547.721 121.526 cv
545.08 118.866 542.04 118.766 537.33 120.566 cv
530.891 123.117 525.891 123.657 521.7 119.436 cv
517.71 115.416 517.28 109.763 520.631 104.991 cv
518.431 102.781 li
518.431 102.781 516.69 101.341 518.511 99.5298 cv
cp
572.74 16.4854 mo
436.75 151.676 li
435.98 152.437 436.051 153.746 436.881 154.586 cv
498.891 216.996 li
499.721 217.836 501.011 217.896 501.78 217.135 cv
600 119.496 li
600 113.435 li
573.181 140.103 li
578.36 126.858 573.36 108.473 559.591 94.6191 cv
559.181 94.209 558.761 93.7988 558.341 93.3979 cv
557.83 92.9087 557.32 92.4478 556.811 91.9873 cv
556.4 91.6377 556.011 91.2979 555.601 90.958 cv
555.141 90.5674 554.69 90.1968 554.23 89.8374 cv
550.66 87.0161 546.91 84.7354 543.101 82.9956 cv
542.761 82.8452 542.431 82.6851 542.091 82.5454 cv
541.78 82.4053 541.49 82.2744 541.19 82.1553 cv
540.7 81.9648 540.2 81.7549 539.69 81.5752 cv
539.28 81.4248 538.86 81.2744 538.44 81.125 cv
538.101 81.0146 537.771 80.9053 537.431 80.7949 cv
537.19 80.7246 536.92 80.6445 536.66 80.564 cv
536.19 80.4243 535.721 80.2847 535.24 80.1646 cv
534.341 79.9243 533.45 79.7339 532.561 79.5444 cv
532.19 79.4741 531.83 79.4146 531.46 79.354 cv
531.101 79.2847 530.73 79.2339 530.37 79.1836 cv
528.78 78.9639 527.2 78.834 525.65 78.8135 cv
525.32 78.8135 524.99 78.8037 524.65 78.8242 cv
524.28 78.8242 523.91 78.834 523.54 78.8535 cv
522.721 78.8936 521.9 78.9541 521.101 79.0537 cv
520.7 79.1035 520.301 79.1543 519.91 79.2241 cv
519.65 79.2642 519.381 79.3042 519.15 79.3647 cv
518.881 79.4048 518.61 79.4546 518.36 79.5142 cv
516.92 79.8247 515.53 80.2144 514.2 80.7451 cv
560.08 35.1211 li
570.021 44.1831 583.761 45.7744 592.301 38.9424 cv
600 46.6948 li
600 41.1431 li
575.65 16.6357 li
574.811 15.7949 573.511 15.7256 572.74 16.4854 cv
cp
f
518.431 102.781 mo
520.631 104.991 li
517.28 109.763 517.71 115.416 521.7 119.436 cv
525.891 123.657 530.891 123.117 537.33 120.566 cv
542.04 118.766 545.08 118.866 547.721 121.526 cv
550.471 124.287 550.44 127.339 547.29 130.459 cv
544.82 132.931 542.79 133.601 540.03 134.021 cv
540.03 134.021 537.721 134.591 538.601 137.251 cv
539.32 139.442 542.42 139.211 542.42 139.211 cv
545.181 138.882 547.511 137.812 550.12 135.301 cv
552 137.191 li
552 137.191 553.33 138.772 554.98 137.132 cv
556.7 135.421 555.24 134.07 555.24 134.07 cv
553.181 131.97 li
556.101 127.669 555.37 121.026 551.57 117.205 cv
547.28 112.894 542.29 112.464 535.7 114.975 cv
530.131 117.046 527.78 117.325 525.28 114.805 cv
523.351 112.864 522.851 109.983 525.91 106.942 cv
528.74 104.142 531.021 103.972 532.54 103.632 cv
532.54 103.632 535.101 102.872 534.021 100.23 cv
533.141 98.0801 529.631 98.6895 529.631 98.6895 cv
527.53 99.1499 525.061 100.2 523.62 101.631 cv
521.62 99.6099 li
521.62 99.6099 520.08 97.9697 518.511 99.5298 cv
516.69 101.341 518.431 102.781 518.431 102.781 cv
cp
.278431 .580392 .729412 rgb
f
560.08 35.1211 mo
514.2 80.7451 li
515.53 80.2144 516.92 79.8247 518.36 79.5142 cv
518.61 79.4546 518.881 79.4048 519.15 79.3647 cv
519.381 79.3042 519.65 79.2642 519.91 79.2241 cv
520.301 79.1543 520.7 79.1035 521.101 79.0537 cv
521.9 78.9541 522.721 78.8936 523.54 78.8535 cv
523.91 78.834 524.28 78.8242 524.65 78.8242 cv
524.99 78.8037 525.32 78.8135 525.65 78.8135 cv
527.2 78.834 528.78 78.9639 530.37 79.1836 cv
530.73 79.2339 531.101 79.2847 531.46 79.354 cv
531.83 79.4146 532.19 79.4741 532.561 79.5444 cv
533.45 79.7339 534.341 79.9243 535.24 80.1646 cv
535.721 80.2847 536.19 80.4243 536.66 80.564 cv
536.92 80.6445 537.19 80.7246 537.431 80.7949 cv
537.771 80.9053 538.101 81.0146 538.44 81.125 cv
538.86 81.2744 539.28 81.4248 539.69 81.5752 cv
540.2 81.7549 540.7 81.9648 541.19 82.1553 cv
541.49 82.2744 541.78 82.4053 542.091 82.5454 cv
542.431 82.6851 542.761 82.8452 543.101 82.9956 cv
546.91 84.7354 550.66 87.0161 554.23 89.8374 cv
554.69 90.1968 555.141 90.5674 555.601 90.958 cv
556.011 91.2979 556.4 91.6377 556.811 91.9873 cv
557.32 92.4478 557.83 92.9087 558.341 93.3979 cv
558.761 93.7988 559.181 94.209 559.591 94.6191 cv
573.36 108.473 578.36 126.858 573.181 140.103 cv
600 113.435 li
600 108.653 li
579.681 128.849 li
584.08 117.176 571.99 99.4106 563.931 91.2979 cv
554.79 82.0947 535.23 71.7021 523.551 76.0132 cv
559.94 39.832 li
568.881 48.0044 583.92 50.1753 591.371 44.2339 cv
600 52.916 li
600 46.6948 li
592.301 38.9424 li
583.761 45.7744 570.021 44.1831 560.08 35.1211 cv
cp
f
516.95 416.445 mo
516.591 416.795 li
522.24 422.447 li
522.591 422.086 li
522.94 421.736 li
517.301 416.096 li
516.95 416.445 li
cp
f
508.48 407.973 mo
508.12 408.322 li
513.771 413.975 li
514.12 413.614 li
514.471 413.264 li
508.83 407.612 li
508.48 407.973 li
cp
f
511.53 377.994 mo
511.181 377.644 li
505.53 383.295 li
505.881 383.645 li
506.24 384.006 li
511.891 378.344 li
511.53 377.994 li
cp
f
493.61 107.843 mo
461.92 139.353 li
469.45 148.565 471.37 162.669 466.21 170.451 cv
484.17 188.527 li
491.95 183.305 505.011 184.875 513.96 192.108 cv
544.07 162.169 li
532.49 162.619 518.011 152.616 510.181 144.724 cv
502.091 136.592 492.78 120.076 493.61 107.843 cv
cp
f
575.381 348.014 mo
575.03 348.375 li
569.381 342.723 li
569.73 342.363 li
570.091 342.013 li
575.74 347.664 li
575.381 348.014 li
cp
577.971 440.183 mo
578.33 440.532 li
572.681 446.185 li
572.33 445.824 li
571.98 445.475 li
577.62 439.832 li
577.971 440.183 li
cp
578.21 350.846 mo
578.57 350.496 li
584.21 356.137 li
583.851 356.498 li
583.5 356.848 li
577.86 351.205 li
578.21 350.846 li
cp
586.451 431.699 mo
586.801 432.061 li
581.15 437.711 li
580.801 437.352 li
580.45 437.001 li
586.101 431.359 li
586.451 431.699 li
cp
586.681 359.317 mo
587.041 358.968 li
592.681 364.609 li
592.33 364.97 li
591.971 365.319 li
586.33 359.678 li
586.681 359.317 li
cp
594.92 423.228 mo
595.271 423.577 li
589.621 429.229 li
589.271 428.879 li
588.92 428.529 li
594.57 422.877 li
594.92 423.228 li
cp
562.591 452.767 mo
562.49 452.266 li
562.381 451.785 li
564.91 451.256 567.25 450.025 569.15 448.285 cv
569.48 448.635 li
569.83 449.016 li
567.801 450.896 565.29 452.186 562.591 452.767 cv
cp
559.19 337.801 mo
559.221 337.322 li
559.24 336.811 li
562.011 336.951 564.69 337.832 566.99 339.352 cv
566.71 339.771 li
566.44 340.193 li
564.29 338.762 561.79 337.941 559.19 337.801 cv
cp
558.53 452.576 mo
558.49 453.086 li
555.73 452.946 553.051 452.055 550.761 450.535 cv
551.03 450.115 li
551.311 449.695 li
553.46 451.125 555.96 451.955 558.551 452.096 cv
558.53 452.576 li
cp
548.011 447.515 mo
547.66 447.875 li
542.011 442.223 li
542.36 441.863 li
542.721 441.514 li
548.37 447.164 li
548.011 447.515 li
cp
539.54 439.041 mo
539.19 439.402 li
533.54 433.75 li
533.891 433.391 li
534.24 433.04 li
539.891 438.691 li
539.54 439.041 li
cp
531.07 430.569 mo
530.721 430.919 li
525.07 425.268 li
525.42 424.918 li
525.771 424.567 li
531.42 430.22 li
531.07 430.569 li
cp
522.591 422.086 mo
522.24 422.447 li
516.591 416.795 li
516.95 416.445 li
517.301 416.096 li
522.94 421.736 li
522.591 422.086 li
cp
514.12 413.614 mo
513.771 413.975 li
508.12 408.322 li
508.48 407.973 li
508.83 407.612 li
514.471 413.264 li
514.12 413.614 li
cp
505.881 383.645 mo
505.53 383.295 li
511.181 377.644 li
511.53 377.994 li
511.891 378.344 li
506.24 384.006 li
505.881 383.645 li
cp
505.641 405.132 mo
505.301 405.492 li
505.271 405.473 li
503.32 403.521 501.931 401.08 501.24 398.42 cv
501.74 398.289 li
502.2 398.18 li
502.851 400.66 504.16 402.941 505.98 404.771 cv
505.641 405.132 li
cp
502.971 386.486 mo
503.41 386.756 li
503.82 387.006 li
502.49 389.217 501.771 391.748 501.74 394.358 cv
501.24 394.339 li
500.73 394.339 li
500.771 391.558 501.54 388.856 502.971 386.486 cv
cp
508.681 369.781 mo
531.83 346.625 li
532.92 345.534 533.67 346.014 533.931 346.254 cv
552.98 365.31 li
557.65 369.971 557.53 377.693 552.721 382.506 cv
544.601 390.628 li
539.78 395.449 532.07 395.559 527.41 390.888 cv
508.41 371.892 li
508.21 371.662 507.66 370.811 508.681 369.781 cv
cp
545.07 343.744 mo
545.42 344.094 li
545.78 344.443 li
540.37 349.855 li
539.66 349.155 li
545.07 343.744 li
cp
555.15 337.141 mo
555.25 337.641 li
555.36 338.121 li
552.83 338.672 550.49 339.882 548.591 341.643 cv
548.271 341.293 li
547.91 340.912 li
549.94 339.032 552.44 337.732 555.15 337.141 cv
cp
546.32 333.04 mo
534.881 344.484 li
534.61 344.313 534.271 344.154 533.881 344.063 cv
532.94 343.824 531.69 343.934 530.42 345.214 cv
507.271 368.371 li
506.131 369.512 505.95 370.752 506.19 371.771 cv
506.271 372.142 506.431 372.481 506.601 372.771 cv
496.99 382.385 li
490.351 389.027 490.341 399.84 496.98 406.482 cv
547.351 456.877 li
553.99 463.52 564.811 463.509 571.45 456.867 cv
600 428.309 li
600 418.855 li
598.101 420.757 li
597.74 420.406 li
597.391 420.057 li
600 417.445 li
600 373.352 li
594.801 368.15 li
595.15 367.801 li
595.511 367.439 li
600 371.932 li
600 362.629 li
570.41 333.03 li
563.771 326.388 552.971 326.388 546.32 333.04 cv
cp
.988235 .988235 .988235 rgb
f
501.74 398.289 mo
501.24 398.42 li
501.931 401.08 503.32 403.521 505.271 405.473 cv
505.301 405.492 li
505.641 405.132 li
505.98 404.771 li
504.16 402.941 502.851 400.66 502.2 398.18 cv
501.74 398.289 li
cp
.278431 .580392 .729412 rgb
f
501.74 394.358 mo
501.771 391.748 502.49 389.217 503.82 387.006 cv
503.41 386.756 li
502.971 386.486 li
501.54 388.856 500.771 391.558 500.73 394.339 cv
501.24 394.339 li
501.74 394.358 li
cp
f
548.431 159.918 mo
514.131 194.018 li
505.23 186.066 491.4 184.576 484.131 190.368 cv
464.381 170.481 li
470.28 163.149 468.12 148.175 460.011 139.182 cv
495.94 103.451 li
491.66 115.015 501.98 134.591 511.12 143.793 cv
519.19 151.906 536.83 164.14 548.431 159.918 cv
cp
512.271 139.182 mo
511.79 138.682 511.341 138.162 510.881 137.651 cv
510.53 137.241 510.19 136.852 509.86 136.441 cv
509.471 135.971 509.11 135.511 508.74 135.051 cv
505.95 131.47 503.69 127.698 501.971 123.878 cv
501.82 123.548 501.67 123.207 501.53 122.867 cv
501.391 122.557 501.271 122.267 501.15 121.957 cv
500.95 121.467 500.75 120.967 500.57 120.456 cv
500.42 120.047 500.28 119.626 500.141 119.206 cv
500.03 118.866 499.91 118.536 499.811 118.195 cv
499.74 117.955 499.66 117.686 499.58 117.426 cv
499.44 116.955 499.311 116.485 499.19 115.995 cv
498.96 115.105 498.771 114.204 498.591 113.324 cv
498.521 112.944 498.46 112.584 498.4 112.214 cv
498.341 111.854 498.29 111.483 498.24 111.124 cv
498.03 109.523 497.92 107.952 497.9 106.402 cv
497.9 106.072 497.9 105.732 497.91 105.402 cv
497.92 105.031 497.931 104.662 497.95 104.292 cv
498 103.462 498.07 102.651 498.17 101.851 cv
498.221 101.45 498.28 101.051 498.351 100.661 cv
498.67 98.6699 499.181 96.769 499.9 94.959 cv
455.46 139.132 li
464.45 149.125 465.971 162.879 459.08 171.381 cv
482.57 195.029 li
482.83 194.808 483.101 194.619 483.37 194.409 cv
484.2 193.829 485.051 193.329 485.95 192.878 cv
486.2 192.748 486.471 192.628 486.74 192.508 cv
486.891 192.438 487.03 192.378 487.181 192.328 cv
487.381 192.238 487.58 192.158 487.79 192.088 cv
488.11 191.968 488.431 191.858 488.75 191.758 cv
489.061 191.668 489.391 191.568 489.71 191.488 cv
489.96 191.427 490.2 191.368 490.431 191.318 cv
491.851 190.998 493.301 190.837 494.79 190.807 cv
495.131 190.788 495.49 190.797 495.82 190.807 cv
496.181 190.818 496.53 190.828 496.881 190.858 cv
497.24 190.887 497.601 190.908 497.95 190.948 cv
498.301 190.988 498.65 191.028 499.021 191.087 cv
499.74 191.198 500.46 191.328 501.16 191.498 cv
501.511 191.578 501.87 191.678 502.221 191.768 cv
502.58 191.878 502.931 191.968 503.29 192.098 cv
503.641 192.208 503.99 192.318 504.351 192.458 cv
505.721 192.958 507.08 193.558 508.4 194.279 cv
508.7 194.439 509 194.609 509.311 194.789 cv
509.521 194.909 509.75 195.049 509.971 195.189 cv
510.181 195.309 510.36 195.419 510.551 195.559 cv
510.891 195.769 511.221 195.999 511.54 196.219 cv
512.53 196.919 513.5 197.679 514.431 198.5 cv
558.881 154.307 li
545.61 159.418 527.261 154.307 513.49 140.442 cv
513.08 140.032 512.681 139.612 512.271 139.182 cv
cp
f
464.21 50.2954 mo
464.57 61.0483 458.67 71.4922 448.341 76.3931 cv
438 81.2852 426.17 79.2446 418.101 72.1416 cv
418.49 74.5127 419.21 76.8638 420.28 79.1436 cv
426.561 92.3882 442.381 98.04 455.61 91.7676 cv
468.86 85.4961 474.5 69.6714 468.23 56.4272 cv
467.15 54.147 465.78 52.1064 464.21 50.2954 cv
cp
.988235 .988235 .988235 rgb
f
544.07 162.169 mo
513.96 192.108 li
505.011 184.875 491.95 183.305 484.17 188.527 cv
466.21 170.451 li
471.37 162.669 469.45 148.565 461.92 139.353 cv
493.61 107.843 li
492.78 120.076 502.091 136.592 510.181 144.724 cv
518.011 152.616 532.49 162.619 544.07 162.169 cv
cp
495.94 103.451 mo
460.011 139.182 li
468.12 148.175 470.28 163.149 464.381 170.481 cv
484.131 190.368 li
491.4 184.576 505.23 186.066 514.131 194.018 cv
548.431 159.918 li
536.83 164.14 519.19 151.906 511.12 143.793 cv
501.98 134.591 491.66 115.015 495.94 103.451 cv
cp
f
476.351 303.361 mo
476.141 303.461 475.42 303.771 474.591 304.143 cv
473.221 304.732 471.57 305.441 471.58 305.451 cv
471.641 305.643 471.801 306.082 471.881 306.313 cv
471.99 306.603 468.601 307.893 468.471 307.523 cv
468.4 307.322 468.25 306.902 468.181 306.702 cv
466.66 307.262 465.131 307.813 463.62 308.332 cv
463.641 308.402 463.82 308.883 463.841 309.013 cv
463.91 309.333 463.73 309.523 462.33 310.023 cv
461.15 310.453 460.551 310.513 460.46 310.273 cv
460.4 310.104 460.29 309.793 460.23 309.613 cv
460.21 309.573 460.19 309.523 460.17 309.474 cv
460.17 309.463 458.301 310.043 458.091 310.104 cv
456.521 310.563 454.971 310.975 453.551 311.273 cv
450.73 311.873 448.7 311.943 447.92 311.443 cv
447.21 311.004 447.23 310.163 448.44 309.104 cv
449.061 308.553 449.67 308.012 451.181 307.473 cv
452.351 307.052 453.011 307.012 452.96 307.272 cv
452.95 307.282 li
452.95 307.363 452.841 307.492 452.641 307.652 cv
451.91 308.242 451.391 308.793 451.24 309.233 cv
451.24 309.253 451.221 309.283 451.23 309.303 cv
451.21 309.354 451.2 309.394 451.21 309.443 cv
451.2 309.724 451.391 309.934 451.851 310.043 cv
453.19 310.354 456.65 309.443 459.811 308.453 cv
459.75 308.303 459.69 308.123 459.62 307.912 cv
459.49 307.572 459.36 307.192 459.28 306.962 cv
459.21 306.782 458.841 306.482 460.82 305.782 cv
461.61 305.492 462.051 305.402 462.301 305.412 cv
462.601 305.412 462.62 305.572 462.66 305.682 cv
462.74 305.902 463.091 306.882 463.17 307.103 cv
463.19 307.152 463.2 307.192 463.221 307.232 cv
463.221 307.252 463.23 307.272 463.24 307.292 cv
463.261 307.353 464.811 306.772 465.15 306.652 cv
465.391 306.572 467.82 305.701 467.811 305.682 cv
467.79 305.631 467.78 305.592 467.761 305.541 cv
467.681 305.322 467.601 305.092 467.521 304.861 cv
467.431 304.631 467.351 304.393 467.261 304.152 cv
467.221 304.031 467.21 304.031 467.131 303.812 cv
466.99 303.421 470.391 302.15 470.57 302.651 cv
470.631 302.821 470.69 302.981 470.75 303.142 cv
470.891 303.551 471.04 303.961 471.19 304.381 cv
471.82 304.143 472.41 303.892 472.98 303.642 cv
474.721 302.881 476.15 302.141 477.08 301.471 cv
477.37 301.271 477.61 301.07 477.79 300.88 cv
478.11 300.55 478.271 300.26 478.221 300.01 cv
478.21 299.95 478.19 299.9 478.15 299.87 cv
477.841 299.48 476.601 299.33 475.471 299.351 cv
474.86 299.36 473.91 299.311 475.37 298.57 cv
476.721 297.91 478.21 297.72 479.431 297.68 cv
481.051 297.629 482.07 298.36 482.12 298.86 cv
482.19 299.91 480.21 301.521 476.351 303.361 cv
cp
485.601 294.028 mo
484.58 294.108 483.44 294.238 482.24 294.409 cv
480.931 294.599 479.57 294.838 478.17 295.139 cv
476.851 295.409 475.49 295.729 474.131 296.079 cv
472.311 296.529 470.48 297.039 468.69 297.589 cv
466.9 298.129 465.141 298.7 463.431 299.29 cv
462.971 299.46 462.521 299.62 462.051 299.79 cv
460.841 300.221 459.551 300.7 458.11 301.26 cv
456.48 301.9 454.891 302.562 453.381 303.222 cv
450.261 304.582 447.4 305.982 444.92 307.383 cv
443.87 307.953 442.92 308.523 442.07 309.063 cv
441.141 309.644 440.301 310.233 439.53 310.803 cv
438.721 311.414 438.051 312.004 437.53 312.534 cv
436.86 313.225 436.11 314.195 436.341 314.855 cv
437.12 317.025 448.681 316.285 465.771 310.163 cv
482.851 304.031 492.25 297.259 491.471 295.088 cv
491.271 294.508 490.261 294.128 488.62 294.008 cv
487.78 293.948 486.75 293.958 485.601 294.028 cv
cp
.278431 .580392 .729412 rgb
f
479.431 297.68 mo
478.21 297.72 476.721 297.91 475.37 298.57 cv
473.91 299.311 474.86 299.36 475.471 299.351 cv
476.601 299.33 477.841 299.48 478.15 299.87 cv
478.19 299.9 478.21 299.95 478.221 300.01 cv
478.271 300.26 478.11 300.55 477.79 300.88 cv
477.61 301.07 477.37 301.271 477.08 301.471 cv
476.15 302.141 474.721 302.881 472.98 303.642 cv
472.41 303.892 471.82 304.143 471.19 304.381 cv
471.04 303.961 470.891 303.551 470.75 303.142 cv
470.69 302.981 470.631 302.821 470.57 302.651 cv
470.391 302.15 466.99 303.421 467.131 303.812 cv
467.21 304.031 467.221 304.031 467.261 304.152 cv
467.351 304.393 467.431 304.631 467.521 304.861 cv
467.601 305.092 467.681 305.322 467.761 305.541 cv
467.78 305.592 467.79 305.631 467.811 305.682 cv
467.82 305.701 465.391 306.572 465.15 306.652 cv
464.811 306.772 463.261 307.353 463.24 307.292 cv
463.23 307.272 463.221 307.252 463.221 307.232 cv
463.2 307.192 463.19 307.152 463.17 307.103 cv
463.091 306.882 462.74 305.902 462.66 305.682 cv
462.62 305.572 462.601 305.412 462.301 305.412 cv
462.051 305.402 461.61 305.492 460.82 305.782 cv
458.841 306.482 459.21 306.782 459.28 306.962 cv
459.36 307.192 459.49 307.572 459.62 307.912 cv
459.69 308.123 459.75 308.303 459.811 308.453 cv
456.65 309.443 453.19 310.354 451.851 310.043 cv
451.391 309.934 451.2 309.724 451.21 309.443 cv
451.2 309.394 451.21 309.354 451.23 309.303 cv
451.221 309.283 451.24 309.253 451.24 309.233 cv
451.391 308.793 451.91 308.242 452.641 307.652 cv
452.841 307.492 452.95 307.363 452.95 307.282 cv
452.96 307.272 li
453.011 307.012 452.351 307.052 451.181 307.473 cv
449.67 308.012 449.061 308.553 448.44 309.104 cv
447.23 310.163 447.21 311.004 447.92 311.443 cv
448.7 311.943 450.73 311.873 453.551 311.273 cv
454.971 310.975 456.521 310.563 458.091 310.104 cv
458.301 310.043 460.17 309.463 460.17 309.474 cv
460.19 309.523 460.21 309.573 460.23 309.613 cv
460.29 309.793 460.4 310.104 460.46 310.273 cv
460.551 310.513 461.15 310.453 462.33 310.023 cv
463.73 309.523 463.91 309.333 463.841 309.013 cv
463.82 308.883 463.641 308.402 463.62 308.332 cv
465.131 307.813 466.66 307.262 468.181 306.702 cv
468.25 306.902 468.4 307.322 468.471 307.523 cv
468.601 307.893 471.99 306.603 471.881 306.313 cv
471.801 306.082 471.641 305.643 471.58 305.451 cv
471.57 305.441 473.221 304.732 474.591 304.143 cv
475.42 303.771 476.141 303.461 476.351 303.361 cv
480.21 301.521 482.19 299.91 482.12 298.86 cv
482.07 298.36 481.051 297.629 479.431 297.68 cv
cp
.988235 .988235 .988235 rgb
f
442.2 442.533 mo
431.591 454.268 413.4 455.197 401.66 444.584 cv
389.91 433.95 389 415.756 399.62 404.012 cv
410.23 392.268 428.431 391.348 440.17 401.98 cv
451.91 412.594 452.82 430.789 442.2 442.533 cv
cp
443.48 398.31 mo
429.721 385.865 408.4 386.936 395.96 400.7 cv
383.521 414.465 384.591 435.791 398.351 448.244 cv
412.11 460.689 433.42 459.608 445.86 445.844 cv
458.311 432.08 457.24 410.764 443.48 398.31 cv
cp
f
491.471 295.088 mo
492.25 297.259 482.851 304.031 465.771 310.163 cv
448.681 316.285 437.12 317.025 436.341 314.855 cv
436.11 314.195 436.86 313.225 437.53 312.534 cv
438.051 312.004 438.721 311.414 439.53 310.803 cv
440.301 310.233 441.141 309.644 442.07 309.063 cv
442.92 308.523 443.87 307.953 444.92 307.383 cv
447.4 305.982 450.261 304.582 453.381 303.222 cv
454.891 302.562 456.48 301.9 458.11 301.26 cv
459.551 300.7 460.841 300.221 462.051 299.79 cv
462.521 299.62 462.971 299.46 463.431 299.29 cv
465.141 298.7 466.9 298.129 468.69 297.589 cv
470.48 297.039 472.311 296.529 474.131 296.079 cv
475.49 295.729 476.851 295.409 478.17 295.139 cv
479.57 294.838 480.931 294.599 482.24 294.409 cv
483.44 294.238 484.58 294.108 485.601 294.028 cv
486.75 293.958 487.78 293.948 488.62 294.008 cv
490.261 294.128 491.271 294.508 491.471 295.088 cv
cp
432.301 311.133 mo
432.29 311.133 li
433.931 315.715 li
435.53 320.176 451.83 317.045 466.37 311.834 cv
480.9 306.622 495.48 298.68 493.881 294.229 cv
492.271 289.747 li
491.851 288.567 490.41 287.867 488 287.656 cv
486.971 287.576 485.78 287.576 484.45 287.666 cv
483.341 287.736 482.091 287.876 480.78 288.067 cv
479.4 288.267 477.95 288.527 476.49 288.827 cv
475.181 289.097 473.75 289.417 472.271 289.797 cv
470.5 290.247 468.61 290.777 466.67 291.368 cv
464.881 291.898 463.061 292.488 461.271 293.118 cv
460.79 293.278 460.32 293.448 459.841 293.618 cv
458.601 294.068 457.28 294.569 455.79 295.139 cv
454.061 295.809 452.42 296.499 450.9 297.169 cv
449.23 297.9 447.631 298.64 446.181 299.36 cv
444.841 300.01 443.46 300.73 442.091 301.49 cv
441.04 302.08 440.03 302.682 439.07 303.301 cv
438.061 303.921 437.15 304.563 436.36 305.172 cv
435.44 305.862 434.65 306.563 433.98 307.232 cv
432.53 308.752 431.98 310.053 432.301 311.133 cv
cp
f
436.391 437.142 mo
435.061 438.611 433.73 437.341 433.73 437.341 cv
432.021 435.791 li
430.801 437.142 428.71 438.242 426.931 438.801 cv
426.931 438.801 423.94 439.632 423.181 437.861 cv
422.23 435.701 424.42 434.82 424.42 434.82 cv
425.7 434.4 427.641 434.07 430.04 431.43 cv
432.631 428.578 432.181 426.148 430.53 424.647 cv
428.37 422.697 426.381 423.138 421.641 425.398 cv
416.051 428.078 411.79 428.158 408.11 424.828 cv
404.841 421.877 404.181 416.256 406.641 412.324 cv
404.87 410.714 li
404.87 410.714 403.631 409.674 405.08 408.063 cv
406.48 406.521 407.601 407.753 407.601 407.753 cv
409.221 409.223 li
411.431 406.853 413.42 405.742 415.771 405.223 cv
415.771 405.223 418.391 404.771 419.03 406.572 cv
419.801 408.773 417.83 409.463 417.83 409.463 cv
415.48 410.053 413.75 410.804 411.67 413.113 cv
409.011 416.055 409 418.656 411.36 420.796 cv
413.631 422.848 416.221 422.678 420.23 420.736 cv
425.681 418.016 429.95 417.136 433.54 420.387 cv
436.98 423.487 437.37 428.289 434.561 432.65 cv
436.44 434.351 li
436.44 434.351 437.931 435.441 436.391 437.142 cv
cp
440.17 401.98 mo
428.431 391.348 410.23 392.268 399.62 404.012 cv
389 415.756 389.91 433.95 401.66 444.584 cv
413.4 455.197 431.591 454.268 442.2 442.533 cv
452.82 430.789 451.91 412.594 440.17 401.98 cv
cp
.278431 .580392 .729412 rgb
f
420.851 56.3677 mo
422.431 55.6172 li
421.36 53.2466 421.15 51.4258 421.48 49.5449 cv
421.48 49.5449 421.95 47.4546 423.48 47.5347 cv
425.351 47.645 425.261 49.3154 425.261 49.3154 cv
424.971 51.2358 425 52.7363 426.07 55.0068 cv
427.431 57.8682 429.36 58.6777 431.67 57.5874 cv
433.891 56.5376 434.551 54.5674 434.351 51.0054 cv
434.011 46.1143 434.67 42.6826 438.181 41.0229 cv
441.53 39.4316 445.21 40.6128 447.58 44.0435 cv
449.41 43.1729 li
449.41 43.1729 450.681 42.3936 451.471 44.064 cv
452.15 45.5039 450.79 46.084 450.79 46.084 cv
449.11 46.8745 li
449.74 48.2051 449.91 50.0952 449.78 51.5859 cv
449.78 51.5859 449.471 54.0464 447.94 54.0767 cv
446.04 54.1069 446.07 52.2158 446.07 52.2158 cv
446.15 51.1353 446.5 49.5947 445.28 47.0142 cv
443.971 44.2134 442.021 43.8032 440.41 44.564 cv
438.311 45.5645 438.021 47.1743 438.23 51.376 cv
438.5 56.3574 437.25 59.5283 433.66 61.2285 cv
430.471 62.7393 426.101 61.5088 423.94 58.4775 cv
422.2 59.2979 li
422.2 59.2979 421.051 59.8989 420.311 58.3281 cv
419.591 56.8179 420.851 56.3677 420.851 56.3677 cv
cp
446.54 72.6016 mo
458.301 67.0308 463.341 52.9258 457.771 41.1626 cv
452.2 29.3994 438.091 24.3579 426.341 29.9287 cv
414.57 35.5107 409.54 49.6152 415.11 61.3691 cv
420.681 73.1421 434.78 78.1738 446.54 72.6016 cv
cp
f
422.2 59.2979 mo
423.94 58.4775 li
426.101 61.5088 430.471 62.7393 433.66 61.2285 cv
437.25 59.5283 438.5 56.3574 438.23 51.376 cv
438.021 47.1743 438.311 45.5645 440.41 44.564 cv
442.021 43.8032 443.971 44.2134 445.28 47.0142 cv
446.5 49.5947 446.15 51.1353 446.07 52.2158 cv
446.07 52.2158 446.04 54.1069 447.94 54.0767 cv
449.471 54.0464 449.78 51.5859 449.78 51.5859 cv
449.91 50.0952 449.74 48.2051 449.11 46.8745 cv
450.79 46.084 li
450.79 46.084 452.15 45.5039 451.471 44.064 cv
450.681 42.3936 449.41 43.1729 449.41 43.1729 cv
447.58 44.0435 li
445.21 40.6128 441.53 39.4316 438.181 41.0229 cv
434.67 42.6826 434.011 46.1143 434.351 51.0054 cv
434.551 54.5674 433.891 56.5376 431.67 57.5874 cv
429.36 58.6777 427.431 57.8682 426.07 55.0068 cv
425 52.7363 424.971 51.2358 425.261 49.3154 cv
425.261 49.3154 425.351 47.645 423.48 47.5347 cv
421.95 47.4546 421.48 49.5449 421.48 49.5449 cv
421.15 51.4258 421.36 53.2466 422.431 55.6172 cv
420.851 56.3677 li
420.851 56.3677 419.591 56.8179 420.311 58.3281 cv
421.051 59.8989 422.2 59.2979 422.2 59.2979 cv
cp
.988235 .988235 .988235 rgb
f
426.341 29.9287 mo
438.091 24.3579 452.2 29.3994 457.771 41.1626 cv
463.341 52.9258 458.301 67.0308 446.54 72.6016 cv
434.78 78.1738 420.681 73.1421 415.11 61.3691 cv
409.54 49.6152 414.57 35.5107 426.341 29.9287 cv
cp
447.75 75.1426 mo
460.9 68.9111 466.53 53.1265 460.301 39.9619 cv
454.061 26.7979 438.29 21.1567 425.131 27.3892 cv
411.971 33.6304 406.341 49.415 412.57 62.5791 cv
418.811 75.7432 434.591 81.375 447.75 75.1426 cv
cp
f
436.44 434.351 mo
434.561 432.65 li
437.37 428.289 436.98 423.487 433.54 420.387 cv
429.95 417.136 425.681 418.016 420.23 420.736 cv
416.221 422.678 413.631 422.848 411.36 420.796 cv
409 418.656 409.011 416.055 411.67 413.113 cv
413.75 410.804 415.48 410.053 417.83 409.463 cv
417.83 409.463 419.801 408.773 419.03 406.572 cv
418.391 404.771 415.771 405.223 415.771 405.223 cv
413.42 405.742 411.431 406.853 409.221 409.223 cv
407.601 407.753 li
407.601 407.753 406.48 406.521 405.08 408.063 cv
403.631 409.674 404.87 410.714 404.87 410.714 cv
406.641 412.324 li
404.181 416.256 404.841 421.877 408.11 424.828 cv
411.79 428.158 416.051 428.078 421.641 425.398 cv
426.381 423.138 428.37 422.697 430.53 424.647 cv
432.181 426.148 432.631 428.578 430.04 431.43 cv
427.641 434.07 425.7 434.4 424.42 434.82 cv
424.42 434.82 422.23 435.701 423.181 437.861 cv
423.94 439.632 426.931 438.801 426.931 438.801 cv
428.71 438.242 430.801 437.142 432.021 435.791 cv
433.73 437.341 li
433.73 437.341 435.061 438.611 436.391 437.142 cv
437.931 435.441 436.44 434.351 436.44 434.351 cv
cp
f
412.67 587.586 mo
410.101 590.167 408.221 587.906 408.221 587.906 cv
405.53 585.205 li
401.45 589.137 397.87 590.927 393.73 591.617 cv
393.73 591.617 389.091 592.178 388.141 588.967 cv
386.98 585.057 390.5 584.025 390.5 584.025 cv
394.641 583.195 397.73 582.035 401.591 578.164 cv
406.5 573.252 406.74 568.701 402.811 564.77 cv
399.011 560.969 394.471 561.028 387.301 564.069 cv
377.49 568.352 369.971 569.531 363.95 563.51 cv
358.221 557.777 357.94 549.355 363.261 541.973 cv
360.12 538.831 li
360.12 538.831 357.601 536.781 360.45 533.93 cv
362.9 531.479 365.101 533.85 365.101 533.85 cv
367.96 536.711 li
370.23 534.45 373.98 532.699 377.16 531.881 cv
377.16 531.881 382.45 530.71 383.631 533.859 cv
385.101 537.722 381.181 539.053 381.181 539.053 cv
378.891 539.682 375.48 540.092 371.051 544.504 cv
366.271 549.266 366.841 553.557 369.601 556.316 cv
373.2 559.918 376.73 559.318 385.221 555.797 cv
395.23 551.585 402.69 551.846 408.83 557.987 cv
414.29 563.449 414.971 573.322 410.311 579.994 cv
413.28 582.976 li
413.28 582.976 415.37 584.896 412.67 587.586 cv
cp
463 568.23 mo
464.011 564.569 457.7 560.549 454.271 552.967 cv
446.061 534.811 428.16 510.264 410.94 503.941 cv
389.25 495.959 364.41 506.643 350.03 503.861 cv
329.94 523.967 li
332.71 538.352 322.03 563.199 330.011 584.896 cv
331.87 589.957 335.311 595.078 339.69 600 cv
430.561 600 li
450.131 580.225 446.091 581.594 451.5 576.184 cv
457.11 570.571 461.69 573.002 463 568.23 cv
cp
f
379.021 28.2485 mo
386.601 31.6792 390.631 37.9819 394.28 36.9712 cv
399.061 35.6709 396.62 31.0796 402.23 25.4785 cv
407.841 19.8662 406.15 24.4175 428.301 2.271 cv
429.091 1.48096 429.83 .730469 430.561 0 cv
339.69 0 li
350.21 11.814 366.21 22.4473 379.021 28.2485 cv
cp
f
413.28 582.976 mo
410.311 579.994 li
414.971 573.322 414.29 563.449 408.83 557.987 cv
402.69 551.846 395.23 551.585 385.221 555.797 cv
376.73 559.318 373.2 559.918 369.601 556.316 cv
366.841 553.557 366.271 549.266 371.051 544.504 cv
375.48 540.092 378.891 539.682 381.181 539.053 cv
381.181 539.053 385.101 537.722 383.631 533.859 cv
382.45 530.71 377.16 531.881 377.16 531.881 cv
373.98 532.699 370.23 534.45 367.96 536.711 cv
365.101 533.85 li
365.101 533.85 362.9 531.479 360.45 533.93 cv
357.601 536.781 360.12 538.831 360.12 538.831 cv
363.261 541.973 li
357.94 549.355 358.221 557.777 363.95 563.51 cv
369.971 569.531 377.49 568.352 387.301 564.069 cv
394.471 561.028 399.011 560.969 402.811 564.77 cv
406.74 568.701 406.5 573.252 401.591 578.164 cv
397.73 582.035 394.641 583.195 390.5 584.025 cv
390.5 584.025 386.98 585.057 388.141 588.967 cv
389.091 592.178 393.73 591.617 393.73 591.617 cv
397.87 590.927 401.45 589.137 405.53 585.205 cv
408.221 587.906 li
408.221 587.906 410.101 590.167 412.67 587.586 cv
415.37 584.896 413.28 582.976 413.28 582.976 cv
cp
.278431 .580392 .729412 rgb
f
349.21 164 mo
350.44 163.459 350.95 164.709 350.95 164.709 cv
351.19 165.45 351.381 166.561 352.9 167.941 cv
354.53 169.421 355.931 169.171 356.79 168.22 cv
357.9 166.98 357.65 165.83 356.36 163.119 cv
354.82 159.908 354.771 157.467 356.681 155.347 cv
358.381 153.477 361.601 153.097 363.86 154.506 cv
364.78 153.486 li
364.78 153.486 365.381 152.776 366.301 153.606 cv
367.181 154.407 366.48 155.057 366.48 155.057 cv
365.631 155.987 li
366.99 157.257 367.631 158.398 367.931 159.748 cv
367.931 159.748 368.19 161.249 367.16 161.619 cv
365.9 162.059 365.5 160.929 365.5 160.929 cv
365.16 159.578 364.73 158.587 363.4 157.397 cv
361.721 155.867 360.221 155.857 359 157.217 cv
357.82 158.518 357.92 159.998 359.03 162.299 cv
360.591 165.44 361.101 167.88 359.23 169.951 cv
357.45 171.922 354.7 172.143 352.2 170.532 cv
351.221 171.612 li
351.221 171.612 350.601 172.462 349.62 171.582 cv
348.771 170.822 349.511 170.062 349.511 170.062 cv
350.391 169.071 li
349.62 168.371 348.99 167.17 348.67 166.15 cv
348.67 166.15 348.19 164.44 349.21 164 cv
cp
369.79 173.752 mo
375.891 167.01 375.36 156.567 368.62 150.476 cv
361.891 144.384 351.45 144.904 345.351 151.646 cv
339.261 158.388 339.79 168.821 346.53 174.913 cv
353.261 181.014 363.7 180.495 369.79 173.752 cv
cp
f
350.391 169.071 mo
349.511 170.062 li
349.511 170.062 348.771 170.822 349.62 171.582 cv
350.601 172.462 351.221 171.612 351.221 171.612 cv
352.2 170.532 li
354.7 172.143 357.45 171.922 359.23 169.951 cv
361.101 167.88 360.591 165.44 359.03 162.299 cv
357.92 159.998 357.82 158.518 359 157.217 cv
360.221 155.857 361.721 155.867 363.4 157.397 cv
364.73 158.587 365.16 159.578 365.5 160.929 cv
365.5 160.929 365.9 162.059 367.16 161.619 cv
368.19 161.249 367.931 159.748 367.931 159.748 cv
367.631 158.398 366.99 157.257 365.631 155.987 cv
366.48 155.057 li
366.48 155.057 367.181 154.407 366.301 153.606 cv
365.381 152.776 364.78 153.486 364.78 153.486 cv
363.86 154.506 li
361.601 153.097 358.381 153.477 356.681 155.347 cv
354.771 157.467 354.82 159.908 356.36 163.119 cv
357.65 165.83 357.9 166.98 356.79 168.22 cv
355.931 169.171 354.53 169.421 352.9 167.941 cv
351.381 166.561 351.19 165.45 350.95 164.709 cv
350.95 164.709 350.44 163.459 349.21 164 cv
348.19 164.44 348.67 166.15 348.67 166.15 cv
348.99 167.17 349.62 168.371 350.391 169.071 cv
cp
.988235 .988235 .988235 rgb
f
337.62 276.833 mo
333.54 279.984 332.78 285.846 335.931 289.928 cv
339.08 294.008 344.94 294.758 349.021 291.618 cv
349.511 291.238 349.95 290.817 350.341 290.367 cv
347.841 291.478 344.811 290.787 343.061 288.527 cv
341.011 285.866 341.5 282.055 344.16 279.994 cv
346.42 278.253 349.53 278.354 351.67 280.064 cv
351.391 279.534 351.08 279.014 350.7 278.524 cv
347.561 274.442 341.69 273.692 337.62 276.833 cv
cp
.278431 .580392 .729412 rgb
f
345.351 151.646 mo
351.45 144.904 361.891 144.384 368.62 150.476 cv
375.36 156.567 375.891 167.01 369.79 173.752 cv
363.7 180.495 353.261 181.014 346.53 174.913 cv
339.79 168.821 339.261 158.388 345.351 151.646 cv
cp
344.631 177.013 mo
352.521 184.166 364.75 183.555 371.891 175.653 cv
379.03 167.75 378.42 155.517 370.521 148.375 cv
362.631 141.233 350.391 141.843 343.25 149.745 cv
336.11 157.648 336.73 169.881 344.631 177.013 cv
cp
.988235 .988235 .988235 rgb
f
343.2 496.369 mo
322.44 517.135 li
321.971 517.605 322.4 519.467 324.12 521.187 cv
325.841 522.918 327.7 523.348 328.17 522.867 cv
348.931 502.101 li
349.41 501.631 348.98 499.77 347.25 498.049 cv
345.53 496.329 343.67 495.898 343.2 496.369 cv
cp
f
267 146.895 mo
268.19 148.095 270.061 148.165 271.17 147.064 cv
319.87 98.3496 li
320.96 97.2598 320.881 95.3789 319.69 94.1885 cv
316.011 90.5078 li
263.32 143.213 li
267 146.895 li
cp
.278431 .580392 .729412 rgb
f
340.15 496.549 mo
339.261 494.658 338.631 492.328 338.311 489.507 cv
334.79 459.258 327.79 455.907 323.45 460.639 cv
319.511 464.939 323.61 464.59 317.771 470.111 cv
311.931 475.633 306.49 468.691 300.881 474.303 cv
295.261 479.934 301.71 485.855 296.19 491.698 cv
290.67 497.539 291.021 493.438 286.721 497.379 cv
281.99 501.721 285.351 508.723 315.591 512.233 cv
318.4 512.554 320.73 513.184 322.62 514.084 cv
340.15 496.549 li
cp
.988235 .988235 .988235 rgb
f
253.841 133.73 mo
306.53 81.0244 li
290.74 65.2295 li
289.551 64.0298 287.67 63.9497 286.58 65.0498 cv
237.881 113.765 li
236.771 114.864 236.851 116.745 238.051 117.936 cv
253.841 133.73 li
cp
.278431 .580392 .729412 rgb
f
295.33 286.347 mo
294.44 286.956 273.5 301.51 266.891 318.896 cv
266.5 319.926 267.021 321.076 268.051 321.477 cv
268.721 321.727 269.45 321.596 269.99 321.188 cv
270.271 320.967 270.5 320.676 270.631 320.326 cv
271.5 318.035 272.66 315.795 274 313.624 cv
278.12 306.942 284.03 300.951 288.91 296.609 cv
293.7 292.348 297.5 289.697 297.601 289.638 cv
298.511 288.987 298.73 287.767 298.101 286.856 cv
297.48 285.946 296.24 285.716 295.33 286.347 cv
cp
f
237.061 251.155 mo
237.061 251.155 236.021 250.075 237.5 248.935 cv
238.771 247.955 239.641 249.166 239.641 249.166 cv
240.78 250.646 li
241.96 249.735 243.78 249.166 245.28 248.975 cv
245.28 248.975 247.78 248.745 248.131 250.266 cv
248.58 252.116 246.7 252.506 246.7 252.506 cv
245.62 252.656 244.03 252.646 241.74 254.406 cv
239.261 256.307 239.271 258.308 240.381 259.738 cv
241.811 261.599 243.471 261.538 247.57 260.419 cv
252.41 259.078 255.82 259.638 258.271 262.819 cv
260.45 265.65 260.181 270.222 257.65 273.001 cv
258.83 274.542 li
258.83 274.542 259.67 275.553 258.29 276.623 cv
256.95 277.653 256.23 276.503 256.23 276.503 cv
255.141 275.103 li
253.051 276.674 251.301 277.273 249.351 277.354 cv
249.351 277.354 247.19 277.333 246.95 275.803 cv
246.65 273.942 248.32 273.673 248.32 273.673 cv
250.28 273.542 251.761 273.192 253.761 271.652 cv
256.301 269.691 256.681 267.61 255.101 265.57 cv
253.591 263.609 251.5 263.369 248.03 264.34 cv
243.28 265.72 239.761 265.82 237.36 262.709 cv
235.061 259.738 235.44 255.857 238.311 252.776 cv
237.061 251.155 li
cp
262.051 280.635 mo
272.2 272.802 274.091 258.157 266.261 248.005 cv
258.42 237.852 243.79 235.971 233.641 243.804 cv
223.49 251.636 221.601 266.28 229.431 276.434 cv
237.271 286.586 251.9 288.467 262.051 280.635 cv
cp
f
233.641 243.804 mo
243.79 235.971 258.42 237.852 266.261 248.005 cv
274.091 258.157 272.2 272.802 262.051 280.635 cv
251.9 288.467 237.271 286.586 229.431 276.434 cv
221.601 266.28 223.49 251.636 233.641 243.804 cv
cp
264.5 283.806 mo
276.4 274.612 278.61 257.458 269.42 245.554 cv
260.24 233.65 243.091 231.45 231.19 240.633 cv
219.29 249.825 217.08 266.971 226.261 278.874 cv
235.44 290.777 252.601 292.988 264.5 283.806 cv
cp
.988235 .988235 .988235 rgb
f
244.75 359.988 mo
244.69 359.959 244.62 359.949 244.57 359.928 cv
244.54 360.027 244.5 360.129 244.48 360.238 cv
244.261 361.259 244.101 362.309 244.12 363.51 cv
244.11 363.91 244.131 364.09 244.15 364.34 cv
244.141 364.56 244.19 364.8 244.221 365.06 cv
244.29 365.55 244.41 365.97 244.53 366.301 cv
244.65 366.641 244.801 366.801 244.881 366.91 cv
244.98 367 245.011 367.041 245.15 367.08 cv
245.42 367.18 246.19 367.07 246.86 366.609 cv
247.551 366.18 248.16 365.52 248.46 364.87 cv
248.61 364.55 248.71 364.24 248.73 363.959 cv
248.74 363.818 248.761 363.68 248.73 363.549 cv
248.73 363.5 li
248.73 363.479 li
248.73 363.459 li
248.71 363.398 li
248.65 363.16 li
248.62 363.039 li
248.61 363.029 li
248.591 363.02 248.58 363 248.58 362.969 cv
248.471 362.769 li
248.391 362.619 248.29 362.469 248.17 362.318 cv
247.931 362.009 247.61 361.709 247.261 361.409 cv
246.551 360.838 245.65 360.369 244.75 359.988 cv
cp
.278431 .580392 .729412 rgb
f
237.36 262.709 mo
239.761 265.82 243.28 265.72 248.03 264.34 cv
251.5 263.369 253.591 263.609 255.101 265.57 cv
256.681 267.61 256.301 269.691 253.761 271.652 cv
251.761 273.192 250.28 273.542 248.32 273.673 cv
248.32 273.673 246.65 273.942 246.95 275.803 cv
247.19 277.333 249.351 277.354 249.351 277.354 cv
251.301 277.273 253.051 276.674 255.141 275.103 cv
256.23 276.503 li
256.23 276.503 256.95 277.653 258.29 276.623 cv
259.67 275.553 258.83 274.542 258.83 274.542 cv
257.65 273.001 li
260.181 270.222 260.45 265.65 258.271 262.819 cv
255.82 259.638 252.41 259.078 247.57 260.419 cv
243.471 261.538 241.811 261.599 240.381 259.738 cv
239.271 258.308 239.261 256.307 241.74 254.406 cv
244.03 252.646 245.62 252.656 246.7 252.506 cv
246.7 252.506 248.58 252.116 248.131 250.266 cv
247.78 248.745 245.28 248.975 245.28 248.975 cv
243.78 249.166 241.96 249.735 240.78 250.646 cv
239.641 249.166 li
239.641 249.166 238.771 247.955 237.5 248.935 cv
236.021 250.075 237.061 251.155 237.061 251.155 cv
238.311 252.776 li
235.44 255.857 235.061 259.738 237.36 262.709 cv
cp
.988235 .988235 .988235 rgb
f
237.881 113.765 mo
286.58 65.0498 li
287.67 63.9497 289.551 64.0298 290.74 65.2295 cv
306.53 81.0244 li
253.841 133.73 li
238.051 117.936 li
236.851 116.745 236.771 114.864 237.881 113.765 cv
cp
319.69 94.1885 mo
320.881 95.3789 320.96 97.2598 319.87 98.3496 cv
271.17 147.064 li
270.061 148.165 268.19 148.095 267 146.895 cv
263.32 143.213 li
316.011 90.5078 li
319.69 94.1885 li
cp
265.301 148.595 mo
267.431 150.726 270.83 150.795 272.87 148.765 cv
321.561 100.05 li
323.601 98.0098 323.521 94.6191 321.391 92.4878 cv
292.44 63.5298 li
290.301 61.3994 286.91 61.3193 284.881 63.3491 cv
236.181 112.064 li
234.141 114.104 234.21 117.495 236.351 119.636 cv
265.301 148.595 li
cp
f
199.221 435.102 mo
196.94 436.171 194.9 437.541 193.091 439.121 cv
203.841 438.752 214.28 444.664 219.181 454.996 cv
224.07 465.34 222.03 477.164 214.931 485.246 cv
217.301 484.846 219.65 484.135 221.931 483.055 cv
235.17 476.783 240.82 460.959 234.551 447.715 cv
228.28 434.471 212.46 428.818 199.221 435.102 cv
cp
f
344.16 279.994 mo
341.5 282.055 341.011 285.866 343.061 288.527 cv
344.811 290.787 347.841 291.478 350.341 290.367 cv
349.95 290.817 349.511 291.238 349.021 291.618 cv
344.94 294.758 339.08 294.008 335.931 289.928 cv
332.78 285.846 333.54 279.984 337.62 276.833 cv
341.69 273.692 347.561 274.442 350.7 278.524 cv
351.08 279.014 351.391 279.534 351.67 280.064 cv
349.53 278.354 346.42 278.253 344.16 279.994 cv
cp
297.601 289.638 mo
297.5 289.697 293.7 292.348 288.91 296.609 cv
284.03 300.951 278.12 306.942 274 313.624 cv
272.66 315.795 271.5 318.035 270.631 320.326 cv
270.5 320.676 270.271 320.967 269.99 321.188 cv
269.45 321.596 268.721 321.727 268.051 321.477 cv
267.021 321.076 266.5 319.926 266.891 318.896 cv
273.5 301.51 294.44 286.956 295.33 286.347 cv
296.24 285.716 297.48 285.946 298.101 286.856 cv
298.73 287.767 298.511 288.987 297.601 289.638 cv
cp
248.17 362.318 mo
248.29 362.469 248.391 362.619 248.471 362.769 cv
248.58 362.969 li
248.58 363 248.591 363.02 248.61 363.029 cv
248.62 363.039 li
248.65 363.16 li
248.71 363.398 li
248.73 363.459 li
248.73 363.479 li
248.73 363.5 li
248.73 363.549 li
248.761 363.68 248.74 363.818 248.73 363.959 cv
248.71 364.24 248.61 364.55 248.46 364.87 cv
248.16 365.52 247.551 366.18 246.86 366.609 cv
246.19 367.07 245.42 367.18 245.15 367.08 cv
245.011 367.041 244.98 367 244.881 366.91 cv
244.801 366.801 244.65 366.641 244.53 366.301 cv
244.41 365.97 244.29 365.55 244.221 365.06 cv
244.19 364.8 244.141 364.56 244.15 364.34 cv
244.131 364.09 244.11 363.91 244.12 363.51 cv
244.101 362.309 244.261 361.259 244.48 360.238 cv
244.5 360.129 244.54 360.027 244.57 359.928 cv
244.62 359.949 244.69 359.959 244.75 359.988 cv
245.65 360.369 246.551 360.838 247.261 361.409 cv
247.61 361.709 247.931 362.009 248.17 362.318 cv
cp
374.86 269.281 mo
370.42 271.371 367.36 272.592 364.62 272.262 cv
363.5 272.122 358.16 267.511 351 264.99 cv
341.62 261.709 330.74 264.1 330.74 264.1 cv
330.74 264.1 327.19 258.898 322.61 254.267 cv
315.83 247.395 306.841 243.903 306.841 243.903 cv
306.841 243.903 302.351 252.426 302.15 259.538 cv
301.851 270.182 303.141 274.452 303.141 274.452 cv
303.141 274.452 277.65 285.776 260.49 315.495 cv
254.53 325.798 252.721 336.141 253.881 345.674 cv
253.011 345.804 252.131 345.954 251.23 346.174 cv
249.891 346.504 248.511 346.945 247.131 347.555 cv
245.74 348.195 244.351 348.975 243.051 350.045 cv
241.771 351.125 240.601 352.436 239.69 353.936 cv
239.681 353.947 239.681 353.957 239.681 353.957 cv
239.48 353.967 239.28 353.957 239.091 353.957 cv
236.75 354.016 234.61 354.486 232.801 355.146 cv
231 355.827 229.521 356.707 228.41 357.547 cv
227.29 358.388 226.54 359.198 226.04 359.748 cv
225.561 360.318 225.311 360.629 225.311 360.629 cv
224.61 361.489 224.681 362.778 225.521 363.539 cv
226.381 364.33 227.721 364.27 228.511 363.398 cv
228.62 363.279 li
228.62 363.279 228.82 363.049 229.19 362.648 cv
229.58 362.259 230.16 361.688 231.011 361.119 cv
231.851 360.549 232.95 359.959 234.32 359.527 cv
235.36 359.198 236.551 358.968 237.851 358.878 cv
237.57 360.498 237.46 362.159 237.54 363.67 cv
237.561 363.959 237.601 364.47 237.65 364.91 cv
237.69 365.37 237.78 365.8 237.86 366.24 cv
238.03 367.109 238.311 368.021 238.74 368.961 cv
239.17 369.881 239.851 370.861 240.811 371.662 cv
241.74 372.472 243.011 373.031 244.23 373.191 cv
245.46 373.352 246.61 373.191 247.601 372.861 cv
248.601 372.552 249.471 372.092 250.25 371.521 cv
251.79 370.412 253.021 368.961 253.761 367.141 cv
254.131 366.24 254.381 365.25 254.41 364.219 cv
254.41 363.699 254.391 363.17 254.29 362.669 cv
254.261 362.479 li
254.24 362.379 li
254.23 362.329 li
254.181 362.099 li
254.101 361.869 li
254.04 361.639 li
254 361.519 li
253.91 361.309 li
253.801 361.018 253.681 360.748 253.551 360.479 cv
253.431 360.258 253.301 360.059 253.181 359.848 cv
252.92 359.438 252.641 359.088 252.351 358.758 cv
251.771 358.088 251.131 357.557 250.5 357.098 cv
249.57 356.418 248.62 355.927 247.67 355.526 cv
248.37 355.037 249.16 354.646 249.99 354.307 cv
250.891 353.957 251.87 353.697 252.841 353.506 cv
253.69 353.346 254.561 353.246 255.41 353.186 cv
258.811 364.68 266.521 374.473 276.141 380.805 cv
313.36 405.303 310.03 412.664 319.631 405.252 cv
322.74 402.852 323.96 401.98 322.78 397.869 cv
319.91 387.917 315.04 381.085 319.98 377.264 cv
330.011 369.521 334.82 365.189 345.811 356.707 cv
355.73 349.055 367.471 368.471 372.75 364.399 cv
375.58 362.209 379.73 360.168 378.761 357.178 cv
374.42 343.863 370.131 338.521 375.271 327.969 cv
379.631 319.016 378.971 311.594 378.561 304.262 cv
378.16 297.199 387.601 297.7 388.091 293.958 cv
388.57 290.218 381.12 266.35 374.86 269.281 cv
cp
f
216.631 586.376 mo
202.87 573.922 181.551 574.992 169.11 588.768 cv
166.061 592.137 163.83 595.959 162.391 600 cv
167.69 600 li
168.91 597.169 170.591 594.479 172.771 592.078 cv
183.381 580.334 201.58 579.414 213.32 590.037 cv
216.48 592.899 218.851 596.31 220.431 600 cv
225.73 600 li
223.931 594.928 220.891 590.228 216.631 586.376 cv
cp
f
213.32 590.037 mo
201.58 579.414 183.381 580.334 172.771 592.078 cv
170.591 594.479 168.91 597.169 167.69 600 cv
179.36 600 li
178.021 598.77 li
178.021 598.77 176.78 597.73 178.23 596.129 cv
179.631 594.578 180.75 595.818 180.75 595.818 cv
182.37 597.279 li
184.58 594.918 186.57 593.798 188.92 593.288 cv
188.92 593.288 191.54 592.828 192.181 594.629 cv
192.95 596.829 190.98 597.52 190.98 597.52 cv
189.091 598 187.61 598.59 186.021 600 cv
220.431 600 li
218.851 596.31 216.48 592.899 213.32 590.037 cv
cp
.278431 .580392 .729412 rgb
f
174.811 32.6504 mo
186.551 43.2627 204.74 42.333 215.351 30.6001 cv
223.11 22.0176 224.7 9.99316 220.431 0 cv
186.021 0 li
185.631 .350586 185.23 .730469 184.82 1.18115 cv
182.16 4.12109 182.15 6.72266 184.511 8.86279 cv
186.78 10.9136 189.37 10.7437 193.37 8.80322 cv
198.83 6.08203 203.101 5.20166 206.69 8.45264 cv
210.131 11.5542 210.521 16.3555 207.71 20.7163 cv
209.58 22.417 li
209.58 22.417 211.08 23.5068 209.54 25.208 cv
208.21 26.6777 206.881 25.4082 206.881 25.4082 cv
205.17 23.8579 li
203.95 25.208 201.86 26.2979 200.08 26.8682 cv
200.08 26.8682 197.091 27.6987 196.33 25.9277 cv
195.381 23.7681 197.57 22.8877 197.57 22.8877 cv
198.851 22.4668 200.79 22.1377 203.19 19.4961 cv
205.78 16.6455 205.33 14.2144 203.681 12.7139 cv
201.521 10.7642 199.53 11.2036 194.79 13.4639 cv
189.2 16.1455 184.94 16.2256 181.261 12.8945 cv
177.99 9.94336 177.33 4.32178 179.79 .390625 cv
179.36 0 li
167.69 0 li
162.99 10.9741 165.471 24.1978 174.811 32.6504 cv
cp
f
181.261 12.8945 mo
184.94 16.2256 189.2 16.1455 194.79 13.4639 cv
199.53 11.2036 201.521 10.7642 203.681 12.7139 cv
205.33 14.2144 205.78 16.6455 203.19 19.4961 cv
200.79 22.1377 198.851 22.4668 197.57 22.8877 cv
197.57 22.8877 195.381 23.7681 196.33 25.9277 cv
197.091 27.6987 200.08 26.8682 200.08 26.8682 cv
201.86 26.2979 203.95 25.208 205.17 23.8579 cv
206.881 25.4082 li
206.881 25.4082 208.21 26.6777 209.54 25.208 cv
211.08 23.5068 209.58 22.417 209.58 22.417 cv
207.71 20.7163 li
210.521 16.3555 210.131 11.5542 206.69 8.45264 cv
203.101 5.20166 198.83 6.08203 193.37 8.80322 cv
189.37 10.7437 186.78 10.9136 184.511 8.86279 cv
182.15 6.72266 182.16 4.12109 184.82 1.18115 cv
185.23 .730469 185.631 .350586 186.021 0 cv
179.36 0 li
179.79 .390625 li
177.33 4.32178 177.99 9.94336 181.261 12.8945 cv
cp
.988235 .988235 .988235 rgb
f
171.5 36.3115 mo
185.261 48.7549 206.57 47.6743 219.011 33.9106 cv
227.601 24.4077 229.75 11.3042 225.73 0 cv
220.431 0 li
224.7 9.99316 223.11 22.0176 215.351 30.6001 cv
204.74 42.333 186.551 43.2627 174.811 32.6504 cv
165.471 24.1978 162.99 10.9741 167.69 0 cv
162.391 0 li
157.96 12.4443 161.11 26.9082 171.5 36.3115 cv
cp
f
201.261 479.394 mo
202.091 481.145 li
202.091 481.145 202.69 482.285 201.12 483.035 cv
199.61 483.746 199.16 482.485 199.16 482.485 cv
198.41 480.904 li
196.03 481.975 194.221 482.195 192.341 481.854 cv
192.341 481.854 190.25 481.385 190.33 479.854 cv
190.44 477.984 192.11 478.084 192.11 478.084 cv
194.03 478.363 195.53 478.344 197.801 477.264 cv
200.66 475.913 201.471 473.973 200.381 471.672 cv
199.33 469.441 197.36 468.791 193.801 468.991 cv
188.91 469.321 185.48 468.67 183.82 465.15 cv
182.23 461.799 183.41 458.117 186.841 455.747 cv
185.971 453.916 li
185.971 453.916 185.19 452.646 186.86 451.855 cv
188.301 451.176 188.881 452.536 188.881 452.536 cv
189.67 454.217 li
191 453.586 192.891 453.416 194.381 453.546 cv
194.381 453.546 196.841 453.856 196.87 455.396 cv
196.9 457.287 195.011 457.257 195.011 457.257 cv
193.931 457.188 192.391 456.827 189.811 458.047 cv
187.011 459.368 186.601 461.309 187.36 462.919 cv
188.36 465.02 189.971 465.309 194.17 465.1 cv
199.15 464.83 202.32 466.08 204.021 469.681 cv
205.53 472.872 204.301 477.244 201.261 479.394 cv
cp
183.96 445.564 mo
172.2 451.135 167.16 465.24 172.73 477.004 cv
178.311 488.767 192.41 493.799 204.16 488.227 cv
215.931 482.655 220.96 468.561 215.391 456.787 cv
209.82 445.023 195.721 439.982 183.96 445.564 cv
cp
.278431 .580392 .729412 rgb
f
194.17 465.1 mo
189.971 465.309 188.36 465.02 187.36 462.919 cv
186.601 461.309 187.011 459.368 189.811 458.047 cv
192.391 456.827 193.931 457.188 195.011 457.257 cv
195.011 457.257 196.9 457.287 196.87 455.396 cv
196.841 453.856 194.381 453.546 194.381 453.546 cv
192.891 453.416 191 453.586 189.67 454.217 cv
188.881 452.536 li
188.881 452.536 188.301 451.176 186.86 451.855 cv
185.19 452.646 185.971 453.916 185.971 453.916 cv
186.841 455.747 li
183.41 458.117 182.23 461.799 183.82 465.15 cv
185.48 468.67 188.91 469.321 193.801 468.991 cv
197.36 468.791 199.33 469.441 200.381 471.672 cv
201.471 473.973 200.66 475.913 197.801 477.264 cv
195.53 478.344 194.03 478.363 192.11 478.084 cv
192.11 478.084 190.44 477.984 190.33 479.854 cv
190.25 481.385 192.341 481.854 192.341 481.854 cv
194.221 482.195 196.03 481.975 198.41 480.904 cv
199.16 482.485 li
199.16 482.485 199.61 483.746 201.12 483.035 cv
202.69 482.285 202.091 481.145 202.091 481.145 cv
201.261 479.394 li
204.301 477.244 205.53 472.872 204.021 469.681 cv
202.32 466.08 199.15 464.83 194.17 465.1 cv
cp
.988235 .988235 .988235 rgb
f
192.181 594.629 mo
191.54 592.828 188.92 593.288 188.92 593.288 cv
186.57 593.798 184.58 594.918 182.37 597.279 cv
180.75 595.818 li
180.75 595.818 179.631 594.578 178.23 596.129 cv
176.78 597.73 178.021 598.77 178.021 598.77 cv
179.36 600 li
186.021 600 li
187.61 598.59 189.091 598 190.98 597.52 cv
190.98 597.52 192.95 596.829 192.181 594.629 cv
cp
f
155.94 167.141 mo
156.681 168.731 157.21 170.682 157.48 173.042 cv
160.431 198.41 166.301 201.22 169.94 197.25 cv
173.24 193.649 169.811 193.939 174.7 189.307 cv
179.601 184.686 184.16 190.498 188.86 185.796 cv
193.58 181.075 188.17 176.104 192.79 171.202 cv
197.42 166.311 197.131 169.751 200.73 166.44 cv
204.7 162.81 201.891 156.938 176.53 153.986 cv
174.17 153.716 172.221 153.187 170.631 152.437 cv
155.94 167.141 li
cp
f
204.16 488.227 mo
192.41 493.799 178.311 488.767 172.73 477.004 cv
167.16 465.24 172.2 451.135 183.96 445.564 cv
195.721 439.982 209.82 445.023 215.391 456.787 cv
220.96 468.561 215.931 482.655 204.16 488.227 cv
cp
217.931 455.586 mo
211.69 442.422 195.92 436.791 182.761 443.033 cv
169.601 449.266 163.96 465.039 170.19 478.203 cv
176.431 491.367 192.21 497.01 205.37 490.768 cv
218.53 484.535 224.16 468.751 217.931 455.586 cv
cp
f
168.391 301.891 mo
168.36 304.492 167.631 307.032 166.301 309.233 cv
166.71 309.483 li
167.15 309.743 li
168.58 307.393 169.36 304.682 169.4 301.9 cv
168.891 301.9 li
168.391 301.891 li
cp
.278431 .580392 .729412 rgb
f
455.61 91.7676 mo
442.381 98.04 426.561 92.3882 420.28 79.1436 cv
419.21 76.8638 418.49 74.5127 418.101 72.1416 cv
426.17 79.2446 438 81.2852 448.341 76.3931 cv
458.67 71.4922 464.57 61.0483 464.21 50.2954 cv
465.78 52.1064 467.15 54.147 468.23 56.4272 cv
474.5 69.6714 468.86 85.4961 455.61 91.7676 cv
cp
436.36 305.172 mo
437.15 304.563 438.061 303.921 439.07 303.301 cv
440.03 302.682 441.04 302.08 442.091 301.49 cv
443.46 300.73 444.841 300.01 446.181 299.36 cv
447.631 298.64 449.23 297.9 450.9 297.169 cv
452.42 296.499 454.061 295.809 455.79 295.139 cv
457.28 294.569 458.601 294.068 459.841 293.618 cv
460.32 293.448 460.79 293.278 461.271 293.118 cv
463.061 292.488 464.881 291.898 466.67 291.368 cv
468.61 290.777 470.5 290.247 472.271 289.797 cv
473.75 289.417 475.181 289.097 476.49 288.827 cv
477.95 288.527 479.4 288.267 480.78 288.067 cv
482.091 287.876 483.341 287.736 484.45 287.666 cv
485.78 287.576 486.971 287.576 488 287.656 cv
490.41 287.867 491.851 288.567 492.271 289.747 cv
493.881 294.229 li
495.48 298.68 480.9 306.622 466.37 311.834 cv
451.83 317.045 435.53 320.176 433.931 315.715 cv
432.29 311.133 li
432.301 311.133 li
431.98 310.053 432.53 308.752 433.98 307.232 cv
434.65 306.563 435.44 305.862 436.36 305.172 cv
cp
445.86 445.844 mo
433.42 459.608 412.11 460.689 398.351 448.244 cv
384.591 435.791 383.521 414.465 395.96 400.7 cv
408.4 386.936 429.721 385.865 443.48 398.31 cv
457.24 410.764 458.311 432.08 445.86 445.844 cv
cp
378.561 304.262 mo
378.971 311.594 379.631 319.016 375.271 327.969 cv
370.131 338.521 374.42 343.863 378.761 357.178 cv
379.73 360.168 375.58 362.209 372.75 364.399 cv
367.471 368.471 355.73 349.055 345.811 356.707 cv
334.82 365.189 330.011 369.521 319.98 377.264 cv
315.04 381.085 319.91 387.917 322.78 397.869 cv
323.96 401.98 322.74 402.852 319.631 405.252 cv
310.03 412.664 313.36 405.303 276.141 380.805 cv
266.521 374.473 258.811 364.68 255.41 353.186 cv
254.561 353.246 253.69 353.346 252.841 353.506 cv
251.87 353.697 250.891 353.957 249.99 354.307 cv
249.16 354.646 248.37 355.037 247.67 355.526 cv
248.62 355.927 249.57 356.418 250.5 357.098 cv
251.131 357.557 251.771 358.088 252.351 358.758 cv
252.641 359.088 252.92 359.438 253.181 359.848 cv
253.301 360.059 253.431 360.258 253.551 360.479 cv
253.681 360.748 253.801 361.018 253.91 361.309 cv
254 361.519 li
254.04 361.639 li
254.101 361.869 li
254.181 362.099 li
254.23 362.329 li
254.24 362.379 li
254.261 362.479 li
254.29 362.669 li
254.391 363.17 254.41 363.699 254.41 364.219 cv
254.381 365.25 254.131 366.24 253.761 367.141 cv
253.021 368.961 251.79 370.412 250.25 371.521 cv
249.471 372.092 248.601 372.552 247.601 372.861 cv
246.61 373.191 245.46 373.352 244.23 373.191 cv
243.011 373.031 241.74 372.472 240.811 371.662 cv
239.851 370.861 239.17 369.881 238.74 368.961 cv
238.311 368.021 238.03 367.109 237.86 366.24 cv
237.78 365.8 237.69 365.37 237.65 364.91 cv
237.601 364.47 237.561 363.959 237.54 363.67 cv
237.46 362.159 237.57 360.498 237.851 358.878 cv
236.551 358.968 235.36 359.198 234.32 359.527 cv
232.95 359.959 231.851 360.549 231.011 361.119 cv
230.16 361.688 229.58 362.259 229.19 362.648 cv
228.82 363.049 228.62 363.279 228.62 363.279 cv
228.511 363.398 li
227.721 364.27 226.381 364.33 225.521 363.539 cv
224.681 362.778 224.61 361.489 225.311 360.629 cv
225.311 360.629 225.561 360.318 226.04 359.748 cv
226.54 359.198 227.29 358.388 228.41 357.547 cv
229.521 356.707 231 355.827 232.801 355.146 cv
234.61 354.486 236.75 354.016 239.091 353.957 cv
239.28 353.957 239.48 353.967 239.681 353.957 cv
239.681 353.957 239.681 353.947 239.69 353.936 cv
240.601 352.436 241.771 351.125 243.051 350.045 cv
244.351 348.975 245.74 348.195 247.131 347.555 cv
248.511 346.945 249.891 346.504 251.23 346.174 cv
252.131 345.954 253.011 345.804 253.881 345.674 cv
252.721 336.141 254.53 325.798 260.49 315.495 cv
277.65 285.776 303.141 274.452 303.141 274.452 cv
303.141 274.452 301.851 270.182 302.15 259.538 cv
302.351 252.426 306.841 243.903 306.841 243.903 cv
306.841 243.903 315.83 247.395 322.61 254.267 cv
327.19 258.898 330.74 264.1 330.74 264.1 cv
330.74 264.1 341.62 261.709 351 264.99 cv
358.16 267.511 363.5 272.122 364.62 272.262 cv
367.36 272.592 370.42 271.371 374.86 269.281 cv
381.12 266.35 388.57 290.218 388.091 293.958 cv
387.601 297.7 378.16 297.199 378.561 304.262 cv
cp
348.931 502.101 mo
328.17 522.867 li
327.7 523.348 325.841 522.918 324.12 521.187 cv
322.4 519.467 321.971 517.605 322.44 517.135 cv
343.2 496.369 li
343.67 495.898 345.53 496.329 347.25 498.049 cv
348.98 499.77 349.41 501.631 348.931 502.101 cv
cp
286.721 497.379 mo
291.021 493.438 290.67 497.539 296.19 491.698 cv
301.71 485.855 295.261 479.934 300.881 474.303 cv
306.49 468.691 311.931 475.633 317.771 470.111 cv
323.61 464.59 319.511 464.939 323.45 460.639 cv
327.79 455.907 334.79 459.258 338.311 489.507 cv
338.631 492.328 339.261 494.658 340.15 496.549 cv
322.62 514.084 li
320.73 513.184 318.4 512.554 315.591 512.233 cv
285.351 508.723 281.99 501.721 286.721 497.379 cv
cp
221.931 483.055 mo
219.65 484.135 217.301 484.846 214.931 485.246 cv
222.03 477.164 224.07 465.34 219.181 454.996 cv
214.28 444.664 203.841 438.752 193.091 439.121 cv
194.9 437.541 196.94 436.171 199.221 435.102 cv
212.46 428.818 228.28 434.471 234.551 447.715 cv
240.82 460.959 235.17 476.783 221.931 483.055 cv
cp
205.37 490.768 mo
192.21 497.01 176.431 491.367 170.19 478.203 cv
163.96 465.039 169.601 449.266 182.761 443.033 cv
195.92 436.791 211.69 442.422 217.931 455.586 cv
224.16 468.751 218.53 484.535 205.37 490.768 cv
cp
123.811 363.18 mo
117.17 369.82 106.36 369.82 99.7207 363.18 cv
49.3408 312.794 li
42.7002 306.152 42.71 295.338 49.3506 288.697 cv
58.9707 279.074 li
58.79 278.784 58.6309 278.444 58.5508 278.074 cv
58.3105 277.063 58.4902 275.813 59.6309 274.673 cv
82.7803 251.516 li
84.0508 250.245 85.3008 250.135 86.25 250.376 cv
86.6406 250.466 86.9707 250.615 87.2402 250.785 cv
98.6807 239.342 li
105.33 232.701 116.141 232.701 122.78 239.342 cv
173.15 289.728 li
179.79 296.369 179.79 307.172 173.141 313.824 cv
123.811 363.18 li
cp
147.78 533.189 mo
99.0801 581.904 li
97.0508 583.945 93.6504 583.875 91.5205 581.734 cv
62.5703 552.775 li
60.4307 550.646 60.3604 547.244 62.4004 545.214 cv
111.101 496.5 li
113.131 494.459 116.521 494.539 118.66 496.68 cv
147.61 525.638 li
149.74 527.769 149.82 531.159 147.78 533.189 cv
cp
34.2803 463.699 mo
21.1201 448.475 22.8105 425.389 38.0303 412.234 cv
53.2402 399.07 76.3105 400.74 89.46 415.965 cv
102.62 431.189 100.96 454.268 85.7402 467.43 cv
70.5303 480.594 47.4404 478.914 34.2803 463.699 cv
cp
52.9102 107.032 mo
54.0107 103.021 57.8506 105.062 62.5605 100.36 cv
67.2607 95.6597 63.4404 97.0693 82.0107 78.4941 cv
100.58 59.9185 99.1699 63.7397 103.87 59.0381 cv
108.58 54.3267 106.54 50.4858 110.54 49.3848 cv
113.601 48.5449 116.98 53.8267 123.33 56.7075 cv
138.551 63.5894 159.131 78.6143 164.44 93.0581 cv
171.131 111.254 162.17 132.09 164.5 144.153 cv
147.65 161.008 li
135.591 158.667 114.761 167.63 96.5703 160.949 cv
82.1309 155.638 67.1201 135.051 60.2305 119.826 cv
57.3604 113.475 52.0703 110.094 52.9102 107.032 cv
cp
170.78 149.875 mo
153.37 167.291 li
152.98 167.691 151.42 167.331 149.98 165.891 cv
148.53 164.44 148.17 162.879 148.57 162.479 cv
165.971 145.064 li
166.37 144.674 167.931 145.034 169.381 146.475 cv
170.82 147.915 171.181 149.485 170.78 149.875 cv
cp
176.53 153.986 mo
201.891 156.938 204.7 162.81 200.73 166.44 cv
197.131 169.751 197.42 166.311 192.79 171.202 cv
188.17 176.104 193.58 181.075 188.86 185.796 cv
184.16 190.498 179.601 184.686 174.7 189.307 cv
169.811 193.939 173.24 193.649 169.94 197.25 cv
166.301 201.22 160.431 198.41 157.48 173.042 cv
157.21 170.682 156.681 168.731 155.94 167.141 cv
170.631 152.437 li
172.221 153.187 174.17 153.716 176.53 153.986 cv
cp
231.19 240.633 mo
243.091 231.45 260.24 233.65 269.42 245.554 cv
278.61 257.458 276.4 274.612 264.5 283.806 cv
252.601 292.988 235.44 290.777 226.261 278.874 cv
217.08 266.971 219.29 249.825 231.19 240.633 cv
cp
236.181 112.064 mo
284.881 63.3491 li
286.91 61.3193 290.301 61.3994 292.44 63.5298 cv
321.391 92.4878 li
323.521 94.6191 323.601 98.0098 321.561 100.05 cv
272.87 148.765 li
270.83 150.795 267.431 150.726 265.301 148.595 cv
236.351 119.636 li
234.21 117.495 234.141 114.104 236.181 112.064 cv
cp
343.25 149.745 mo
350.391 141.843 362.631 141.233 370.521 148.375 cv
378.42 155.517 379.03 167.75 371.891 175.653 cv
364.75 183.555 352.521 184.166 344.631 177.013 cv
336.73 169.881 336.11 157.648 343.25 149.745 cv
cp
425.131 27.3892 mo
438.29 21.1567 454.061 26.7979 460.301 39.9619 cv
466.53 53.1265 460.9 68.9111 447.75 75.1426 cv
434.591 81.375 418.811 75.7432 412.57 62.5791 cv
406.341 49.415 411.971 33.6304 425.131 27.3892 cv
cp
430.561 0 mo
429.83 .730469 429.091 1.48096 428.301 2.271 cv
406.15 24.4175 407.841 19.8662 402.23 25.4785 cv
396.62 31.0796 399.061 35.6709 394.28 36.9712 cv
390.631 37.9819 386.601 31.6792 379.021 28.2485 cv
366.21 22.4473 350.21 11.814 339.69 0 cv
225.73 0 li
229.75 11.3042 227.601 24.4077 219.011 33.9106 cv
206.57 47.6743 185.261 48.7549 171.5 36.3115 cv
161.11 26.9082 157.96 12.4443 162.391 0 cv
0 0 li
0 41.1431 li
37.6504 79.0439 li
38.4902 79.8843 38.54 81.1748 37.7705 81.9443 cv
0 119.496 li
0 168.47 li
0 189.407 li
0 193.899 li
.320313 194.018 .630859 194.128 .950195 194.258 cv
2.5 194.859 4.15039 195.539 5.84082 196.279 cv
7.30078 196.929 8.59082 197.509 9.78027 198.07 cv
10.2402 198.29 10.6904 198.5 11.1504 198.72 cv
12.8604 199.55 14.5605 200.42 16.21 201.31 cv
17.9902 202.261 19.7002 203.221 21.2705 204.162 cv
22.5908 204.942 23.8203 205.722 24.9404 206.462 cv
26.1904 207.283 27.4004 208.123 28.5107 208.953 cv
29.5801 209.744 30.5605 210.534 31.4004 211.264 cv
32.4004 212.144 33.2402 212.995 33.9102 213.774 cv
35.46 215.625 35.9902 217.135 35.4502 218.275 cv
33.4199 222.577 li
31.4004 226.858 15.4805 222.157 1.52051 215.564 cv
1.01074 215.325 .510742 215.085 0 214.835 cv
0 362.629 li
20.79 383.426 li
27.4307 390.057 27.4307 400.87 20.7803 407.522 cv
0 428.309 li
0 505.832 li
2.91016 507.172 5.53027 509.243 7.52051 512.023 cv
13.6006 520.537 11.6201 532.4 3.11035 538.481 cv
2.12012 539.191 1.07031 539.781 0 540.271 cv
0 600 li
162.391 600 li
163.83 595.959 166.061 592.137 169.11 588.768 cv
181.551 574.992 202.87 573.922 216.631 586.376 cv
220.891 590.228 223.931 594.928 225.73 600 cv
339.69 600 li
335.311 595.078 331.87 589.957 330.011 584.896 cv
322.03 563.199 332.71 538.352 329.94 523.967 cv
350.03 503.861 li
364.41 506.643 389.25 495.959 410.94 503.941 cv
428.16 510.264 446.061 534.811 454.271 552.967 cv
457.7 560.549 464.011 564.569 463 568.23 cv
461.69 573.002 457.11 570.571 451.5 576.184 cv
446.091 581.594 450.131 580.225 430.561 600 cv
600 600 li
600 540.271 li
591.91 543.993 582.04 541.582 576.67 534.07 cv
570.601 525.558 572.57 513.705 581.08 507.623 cv
586.801 503.541 594.031 503.102 600 505.832 cv
600 428.309 li
571.45 456.867 li
564.811 463.509 553.99 463.52 547.351 456.877 cv
496.98 406.482 li
490.341 399.84 490.351 389.027 496.99 382.385 cv
506.601 372.771 li
506.431 372.481 506.271 372.142 506.19 371.771 cv
505.95 370.752 506.131 369.512 507.271 368.371 cv
530.42 345.214 li
531.69 343.934 532.94 343.824 533.881 344.063 cv
534.271 344.154 534.61 344.313 534.881 344.484 cv
546.32 333.04 li
552.971 326.388 563.771 326.388 570.41 333.03 cv
600 362.629 li
600 214.835 li
586.58 208.293 573.891 199.5 575.841 195.369 cv
577.92 190.977 li
577.931 190.977 li
578.46 189.988 579.78 189.457 581.87 189.407 cv
582.82 189.397 583.881 189.467 585.011 189.627 cv
586 189.757 587.101 189.957 588.25 190.227 cv
589.361 190.467 590.511 190.757 591.67 191.087 cv
593.181 191.507 594.66 191.978 596.07 192.468 cv
597.311 192.888 598.641 193.378 600 193.899 cv
600 155.888 li
600 119.496 li
501.78 217.135 li
501.011 217.896 499.721 217.836 498.891 216.996 cv
436.881 154.586 li
436.051 153.746 435.98 152.437 436.75 151.676 cv
572.74 16.4854 li
573.511 15.7256 574.811 15.7949 575.65 16.6357 cv
600 41.1431 li
600 0 li
430.561 0 li
cp
f
168.4 297.95 mo
168.91 297.82 li
168.21 295.149 166.811 292.698 164.86 290.737 cv
164.811 290.697 li
164.48 291.068 li
164.15 291.448 li
165.98 293.278 167.301 295.569 167.94 298.07 cv
168.4 297.95 li
cp
f
163.87 312.234 mo
158.221 317.885 li
158.58 318.236 li
158.931 318.596 li
164.58 312.944 li
164.23 312.584 li
163.87 312.234 li
cp
f
161.641 288.227 mo
161.99 287.876 li
156.341 282.225 li
155.99 282.575 li
155.641 282.926 li
161.29 288.577 li
161.641 288.227 li
cp
f
155.4 320.707 mo
149.75 326.358 li
150.11 326.708 li
150.46 327.068 li
156.11 321.416 li
155.761 321.057 li
155.4 320.707 li
cp
f
165.971 145.064 mo
148.57 162.479 li
148.17 162.879 148.53 164.44 149.98 165.891 cv
151.42 167.331 152.98 167.691 153.37 167.291 cv
170.78 149.875 li
171.181 149.485 170.82 147.915 169.381 146.475 cv
167.931 145.034 166.37 144.674 165.971 145.064 cv
cp
.988235 .988235 .988235 rgb
f
153.16 279.744 mo
153.511 279.394 li
147.87 273.752 li
147.521 274.103 li
147.16 274.452 li
152.811 280.104 li
153.16 279.744 li
cp
.278431 .580392 .729412 rgb
f
146.931 329.189 mo
141.28 334.83 li
141.631 335.191 li
141.99 335.541 li
147.641 329.889 li
147.28 329.539 li
146.931 329.189 li
cp
f
142.23 523.646 mo
89.54 576.363 li
93.2207 580.044 li
94.4102 581.234 96.2803 581.314 97.3906 580.214 cv
146.08 531.5 li
147.181 530.398 147.101 528.528 145.91 527.328 cv
142.23 523.646 li
cp
f
144.69 271.271 mo
145.04 270.922 li
139.4 265.27 li
139.051 265.63 li
138.69 265.98 li
144.341 271.632 li
144.69 271.271 li
cp
f
138.46 337.662 mo
132.811 343.303 li
133.16 343.664 li
133.521 344.014 li
139.17 338.362 li
138.811 338.012 li
138.46 337.662 li
cp
f
136.221 262.799 mo
136.57 262.449 li
130.931 256.798 li
130.58 257.157 li
130.221 257.508 li
135.86 263.149 li
136.221 262.799 li
cp
f
129.98 346.144 mo
124.341 351.775 li
124.69 352.136 li
125.051 352.486 li
130.69 346.844 li
130.33 346.494 li
129.98 346.144 li
cp
f
127.75 254.326 mo
128.101 253.977 li
122.45 248.324 li
122.101 248.675 li
121.74 249.025 li
127.391 254.677 li
127.75 254.326 li
cp
f
116.96 498.37 mo
115.761 497.18 113.891 497.1 112.79 498.2 cv
64.1006 546.904 li
62.9902 548.015 63.0703 549.887 64.2705 551.085 cv
80.0605 566.88 li
132.75 514.164 li
116.96 498.37 li
cp
f
121.521 354.586 mo
119.62 356.338 117.271 357.557 114.74 358.098 cv
114.851 358.567 li
114.96 359.067 li
117.66 358.498 120.17 357.197 122.2 355.327 cv
121.841 354.947 li
121.521 354.586 li
cp
f
119.08 246.074 mo
119.351 245.665 li
117.061 244.144 114.381 243.253 111.601 243.113 cv
111.58 243.633 li
111.551 244.113 li
114.15 244.243 116.65 245.063 118.801 246.494 cv
119.08 246.074 li
cp
f
95.1201 90.7979 mo
97.2705 88.6367 98.8506 90.5381 98.8506 90.5381 cv
101.11 92.7983 li
104.53 89.4976 107.53 88.0068 111 87.417 cv
111 87.417 114.891 86.9458 115.681 89.6372 cv
116.66 92.9282 113.71 93.7891 113.71 93.7891 cv
110.24 94.4883 107.65 95.459 104.41 98.6992 cv
100.29 102.821 100.091 106.632 103.391 109.933 cv
106.57 113.125 110.381 113.074 116.4 110.514 cv
124.62 106.923 130.931 105.942 135.971 110.983 cv
140.78 115.795 141.011 122.857 136.551 129.049 cv
139.181 131.69 li
139.181 131.69 141.301 133.4 138.91 135.791 cv
136.851 137.852 135.011 135.861 135.011 135.861 cv
132.61 133.46 li
130.71 135.361 127.561 136.821 124.891 137.512 cv
124.891 137.512 120.46 138.492 119.471 135.851 cv
118.24 132.61 121.53 131.5 121.53 131.5 cv
123.44 130.97 126.311 130.63 130.021 126.929 cv
134.03 122.927 133.551 119.336 131.23 117.016 cv
128.221 114.005 125.25 114.505 118.141 117.455 cv
109.74 120.996 103.49 120.767 98.3301 115.615 cv
93.7607 111.044 93.1904 102.761 97.1006 97.1602 cv
94.6104 94.6592 li
94.6104 94.6592 92.8604 93.0581 95.1201 90.7979 cv
cp
96.5703 160.949 mo
114.761 167.63 135.591 158.667 147.65 161.008 cv
164.5 144.153 li
162.17 132.09 171.131 111.254 164.44 93.0581 cv
159.131 78.6143 138.551 63.5894 123.33 56.7075 cv
116.98 53.8267 113.601 48.5449 110.54 49.3848 cv
106.54 50.4858 108.58 54.3267 103.87 59.0381 cv
99.1699 63.7397 100.58 59.9185 82.0107 78.4941 cv
63.4404 97.0693 67.2607 95.6597 62.5605 100.36 cv
57.8506 105.062 54.0107 103.021 52.9102 107.032 cv
52.0703 110.094 57.3604 113.475 60.2305 119.826 cv
67.1201 135.051 82.1309 155.638 96.5703 160.949 cv
cp
.988235 .988235 .988235 rgb
f
103.391 356.418 mo
103.12 356.838 li
105.41 358.368 108.091 359.248 110.851 359.397 cv
110.891 358.878 li
110.92 358.397 li
108.32 358.268 105.82 357.428 103.67 356.007 cv
103.391 356.418 li
cp
.278431 .580392 .729412 rgb
f
100.95 247.955 mo
102.86 246.194 105.19 244.974 107.721 244.424 cv
107.62 243.954 li
107.511 243.443 li
104.801 244.033 102.311 245.344 100.28 247.215 cv
100.631 247.604 li
100.95 247.955 li
cp
f
94.7207 348.175 mo
94.3701 348.524 li
100.021 354.176 li
100.37 353.826 li
100.73 353.467 li
95.0801 347.814 li
94.7207 348.175 li
cp
f
98.1406 250.756 mo
97.79 250.396 li
97.4307 250.045 li
92.0205 255.458 li
92.7305 256.167 li
98.1406 250.756 li
cp
f
94.6104 94.6592 mo
97.1006 97.1602 li
93.1904 102.761 93.7607 111.044 98.3301 115.615 cv
103.49 120.767 109.74 120.996 118.141 117.455 cv
125.25 114.505 128.221 114.005 131.23 117.016 cv
133.551 119.336 134.03 122.927 130.021 126.929 cv
126.311 130.63 123.44 130.97 121.53 131.5 cv
121.53 131.5 118.24 132.61 119.471 135.851 cv
120.46 138.492 124.891 137.512 124.891 137.512 cv
127.561 136.821 130.71 135.361 132.61 133.46 cv
135.011 135.861 li
135.011 135.861 136.851 137.852 138.91 135.791 cv
141.301 133.4 139.181 131.69 139.181 131.69 cv
136.551 129.049 li
141.011 122.857 140.78 115.795 135.971 110.983 cv
130.931 105.942 124.62 106.923 116.4 110.514 cv
110.381 113.074 106.57 113.125 103.391 109.933 cv
100.091 106.632 100.29 102.821 104.41 98.6992 cv
107.65 95.459 110.24 94.4883 113.71 93.7891 cv
113.71 93.7891 116.66 92.9282 115.681 89.6372 cv
114.891 86.9458 111 87.417 111 87.417 cv
107.53 88.0068 104.53 89.4976 101.11 92.7983 cv
98.8506 90.5381 li
98.8506 90.5381 97.2705 88.6367 95.1201 90.7979 cv
92.8604 93.0581 94.6104 94.6592 94.6104 94.6592 cv
cp
f
86.25 339.702 mo
85.9004 340.053 li
91.5508 345.704 li
91.9004 345.354 li
92.2607 344.994 li
86.6104 339.342 li
86.25 339.702 li
cp
f
38.3604 460.168 mo
27.1504 447.194 28.5801 427.528 41.5508 416.305 cv
54.5205 405.102 74.1807 406.521 85.3906 419.496 cv
96.6006 432.471 95.1807 452.135 82.2207 463.349 cv
69.25 474.572 49.5801 473.142 38.3604 460.168 cv
cp
85.7402 467.43 mo
100.96 454.268 102.62 431.189 89.46 415.965 cv
76.3105 400.74 53.2402 399.07 38.0303 412.234 cv
22.8105 425.389 21.1201 448.475 34.2803 463.699 cv
47.4404 478.914 70.5303 480.594 85.7402 467.43 cv
cp
.988235 .988235 .988235 rgb
f
94.3105 286.286 mo
96.7305 283.865 96.7305 279.935 94.3105 277.523 cv
91.8809 275.093 87.96 275.103 85.54 277.523 cv
83.1104 279.944 83.1104 283.865 85.54 286.286 cv
87.96 288.707 91.8809 288.717 94.3105 286.286 cv
cp
f
83.0205 275.002 mo
86.8301 271.191 93.0205 271.191 96.8301 275.002 cv
100.631 278.804 100.631 285.005 96.8301 288.807 cv
93.0107 292.618 86.8301 292.618 83.0205 288.807 cv
79.2207 285.005 79.21 278.814 83.0205 275.002 cv
cp
79.7705 297.199 mo
84.4404 301.861 92.1406 301.75 96.96 296.939 cv
105.08 288.807 li
109.891 283.995 110.011 276.283 105.351 271.612 cv
86.3008 252.556 li
86.0303 252.326 85.29 251.846 84.2002 252.936 cv
61.0508 276.093 li
60.0205 277.113 60.5703 277.964 60.7803 278.194 cv
79.7705 297.199 li
cp
.278431 .580392 .729412 rgb
f
77.7803 331.23 mo
77.4307 331.58 li
83.0801 337.232 li
83.4307 336.881 li
83.79 336.521 li
78.1406 330.869 li
77.7803 331.23 li
cp
f
85.54 277.523 mo
87.96 275.103 91.8809 275.093 94.3105 277.523 cv
96.7305 279.935 96.7305 283.865 94.3105 286.286 cv
91.8809 288.717 87.96 288.707 85.54 286.286 cv
83.1104 283.865 83.1104 279.944 85.54 277.523 cv
cp
95.4102 287.396 mo
98.4404 284.365 98.4404 279.444 95.4102 276.413 cv
92.3809 273.393 87.46 273.393 84.4404 276.413 cv
81.4102 279.444 81.4102 284.365 84.4404 287.396 cv
87.46 290.417 92.3809 290.417 95.4102 287.396 cv
cp
f
84.4404 276.413 mo
87.46 273.393 92.3809 273.393 95.4102 276.413 cv
98.4404 279.444 98.4404 284.365 95.4102 287.396 cv
92.3809 290.417 87.46 290.417 84.4404 287.396 cv
81.4102 284.365 81.4102 279.444 84.4404 276.413 cv
cp
96.8301 288.807 mo
100.631 285.005 100.631 278.804 96.8301 275.002 cv
93.0205 271.191 86.8301 271.191 83.0205 275.002 cv
79.21 278.814 79.2207 285.005 83.0205 288.807 cv
86.8301 292.618 93.0107 292.618 96.8301 288.807 cv
cp
.988235 .988235 .988235 rgb
f
69.3105 322.747 mo
68.96 323.107 li
74.6006 328.749 li
74.9502 328.398 li
75.3105 328.039 li
69.6602 322.397 li
69.3105 322.747 li
cp
.278431 .580392 .729412 rgb
f
63.8906 284.306 mo
63.54 283.955 li
57.8906 289.598 li
58.25 289.957 li
58.6006 290.308 li
64.25 284.656 li
63.8906 284.306 li
cp
f
146.08 531.5 mo
97.3906 580.214 li
96.2803 581.314 94.4102 581.234 93.2207 580.044 cv
89.54 576.363 li
142.23 523.646 li
145.91 527.328 li
147.101 528.528 147.181 530.398 146.08 531.5 cv
cp
64.2705 551.085 mo
63.0703 549.887 62.9902 548.015 64.1006 546.904 cv
112.79 498.2 li
113.891 497.1 115.761 497.18 116.96 498.37 cv
132.75 514.164 li
80.0605 566.88 li
64.2705 551.085 li
cp
118.66 496.68 mo
116.521 494.539 113.131 494.459 111.101 496.5 cv
62.4004 545.214 li
60.3604 547.244 60.4307 550.646 62.5703 552.775 cv
91.5205 581.734 li
93.6504 583.875 97.0508 583.945 99.0801 581.904 cv
147.78 533.189 li
149.82 531.159 149.74 527.769 147.61 525.638 cv
118.66 496.68 li
cp
.988235 .988235 .988235 rgb
f
60.8408 314.275 mo
60.4902 314.635 li
66.1309 320.276 li
66.4805 319.926 li
66.8408 319.566 li
61.1904 313.924 li
60.8408 314.275 li
cp
.278431 .580392 .729412 rgb
f
167.15 309.743 mo
166.71 309.483 li
166.301 309.233 li
167.631 307.032 168.36 304.492 168.391 301.891 cv
168.891 301.9 li
169.4 301.9 li
169.36 304.682 168.58 307.393 167.15 309.743 cv
cp
158.931 318.596 mo
158.58 318.236 li
158.221 317.885 li
163.87 312.234 li
164.23 312.584 li
164.58 312.944 li
158.931 318.596 li
cp
150.46 327.068 mo
150.11 326.708 li
149.75 326.358 li
155.4 320.707 li
155.761 321.057 li
156.11 321.416 li
150.46 327.068 li
cp
141.99 335.541 mo
141.631 335.191 li
141.28 334.83 li
146.931 329.189 li
147.28 329.539 li
147.641 329.889 li
141.99 335.541 li
cp
133.521 344.014 mo
133.16 343.664 li
132.811 343.303 li
138.46 337.662 li
138.811 338.012 li
139.17 338.362 li
133.521 344.014 li
cp
125.051 352.486 mo
124.69 352.136 li
124.341 351.775 li
129.98 346.144 li
130.33 346.494 li
130.69 346.844 li
125.051 352.486 li
cp
121.74 249.025 mo
122.101 248.675 li
122.45 248.324 li
128.101 253.977 li
127.75 254.326 li
127.391 254.677 li
121.74 249.025 li
cp
114.96 359.067 mo
114.851 358.567 li
114.74 358.098 li
117.271 357.557 119.62 356.338 121.521 354.586 cv
121.841 354.947 li
122.2 355.327 li
120.17 357.197 117.66 358.498 114.96 359.067 cv
cp
111.551 244.113 mo
111.58 243.633 li
111.601 243.113 li
114.381 243.253 117.061 244.144 119.351 245.665 cv
119.08 246.074 li
118.801 246.494 li
116.65 245.063 114.15 244.243 111.551 244.113 cv
cp
110.891 358.878 mo
110.851 359.397 li
108.091 359.248 105.41 358.368 103.12 356.838 cv
103.391 356.418 li
103.67 356.007 li
105.82 357.428 108.32 358.268 110.92 358.397 cv
110.891 358.878 li
cp
100.37 353.826 mo
100.021 354.176 li
94.3701 348.524 li
94.7207 348.175 li
95.0801 347.814 li
100.73 353.467 li
100.37 353.826 li
cp
91.9004 345.354 mo
91.5508 345.704 li
85.9004 340.053 li
86.25 339.702 li
86.6104 339.342 li
92.2607 344.994 li
91.9004 345.354 li
cp
83.4307 336.881 mo
83.0801 337.232 li
77.4307 331.58 li
77.7803 331.23 li
78.1406 330.869 li
83.79 336.521 li
83.4307 336.881 li
cp
74.9502 328.398 mo
74.6006 328.749 li
68.96 323.107 li
69.3105 322.747 li
69.6602 322.397 li
75.3105 328.039 li
74.9502 328.398 li
cp
66.4805 319.926 mo
66.1309 320.276 li
60.4902 314.635 li
60.8408 314.275 li
61.1904 313.924 li
66.8408 319.566 li
66.4805 319.926 li
cp
58.25 289.957 mo
57.8906 289.598 li
63.54 283.955 li
63.8906 284.306 li
64.25 284.656 li
58.6006 290.308 li
58.25 289.957 li
cp
58 311.443 mo
57.6602 311.803 li
57.6406 311.783 li
55.6904 309.833 54.29 307.393 53.6006 304.732 cv
54.1006 304.592 li
54.5703 304.482 li
55.21 306.962 56.5205 309.253 58.3408 311.074 cv
58 311.443 li
cp
55.3301 292.798 mo
55.7705 293.068 li
56.1904 293.318 li
54.8506 295.529 54.1309 298.06 54.1006 300.66 cv
53.6104 300.65 li
53.1006 300.65 li
53.1309 297.87 53.9004 295.159 55.3301 292.798 cv
cp
61.0508 276.093 mo
84.2002 252.936 li
85.29 251.846 86.0303 252.326 86.3008 252.556 cv
105.351 271.612 li
110.011 276.283 109.891 283.995 105.08 288.807 cv
96.96 296.939 li
92.1406 301.75 84.4404 301.861 79.7705 297.199 cv
60.7803 278.194 li
60.5703 277.964 60.0205 277.113 61.0508 276.093 cv
cp
97.4307 250.045 mo
97.79 250.396 li
98.1406 250.756 li
92.7305 256.167 li
92.0205 255.458 li
97.4307 250.045 li
cp
107.511 243.443 mo
107.62 243.954 li
107.721 244.424 li
105.19 244.974 102.86 246.194 100.95 247.955 cv
100.631 247.604 li
100.28 247.215 li
102.311 245.344 104.801 244.033 107.511 243.443 cv
cp
130.58 257.157 mo
130.931 256.798 li
136.57 262.449 li
136.221 262.799 li
135.86 263.149 li
130.221 257.508 li
130.58 257.157 li
cp
139.051 265.63 mo
139.4 265.27 li
145.04 270.922 li
144.69 271.271 li
144.341 271.632 li
138.69 265.98 li
139.051 265.63 li
cp
147.521 274.103 mo
147.87 273.752 li
153.511 279.394 li
153.16 279.744 li
152.811 280.104 li
147.16 274.452 li
147.521 274.103 li
cp
155.99 282.575 mo
156.341 282.225 li
161.99 287.876 li
161.641 288.227 li
161.29 288.577 li
155.641 282.926 li
155.99 282.575 li
cp
164.48 291.068 mo
164.811 290.697 li
164.86 290.737 li
166.811 292.698 168.21 295.149 168.91 297.82 cv
168.4 297.95 li
167.94 298.07 li
167.301 295.569 165.98 293.278 164.15 291.448 cv
164.48 291.068 li
cp
173.15 289.728 mo
122.78 239.342 li
116.141 232.701 105.33 232.701 98.6807 239.342 cv
87.2402 250.785 li
86.9707 250.615 86.6406 250.466 86.25 250.376 cv
85.3008 250.135 84.0508 250.245 82.7803 251.516 cv
59.6309 274.673 li
58.4902 275.813 58.3105 277.063 58.5508 278.074 cv
58.6309 278.444 58.79 278.784 58.9707 279.074 cv
49.3506 288.697 li
42.71 295.338 42.7002 306.152 49.3408 312.794 cv
99.7207 363.18 li
106.36 369.82 117.17 369.82 123.811 363.18 cv
173.141 313.824 li
179.79 307.172 179.79 296.369 173.15 289.728 cv
cp
.988235 .988235 .988235 rgb
f
54.1006 300.66 mo
54.1309 298.06 54.8506 295.529 56.1904 293.318 cv
55.7705 293.068 li
55.3301 292.798 li
53.9004 295.159 53.1309 297.87 53.1006 300.65 cv
53.6104 300.65 li
54.1006 300.66 li
cp
.278431 .580392 .729412 rgb
f
54.1006 304.592 mo
53.6006 304.732 li
54.29 307.393 55.6904 309.833 57.6406 311.783 cv
57.6602 311.803 li
58 311.443 li
58.3408 311.074 li
56.5205 309.253 55.21 306.962 54.5703 304.482 cv
54.1006 304.592 li
cp
f
79.9805 436.501 mo
78.4502 437.161 77.5605 435.551 77.5605 435.551 cv
77.3203 434.38 76.6504 432.75 75.0703 430.93 cv
72.1406 427.528 68.54 428.199 65.4902 430.839 cv
63.6104 432.459 62.4004 433.88 61.2705 435.391 cv
66.7002 441.662 li
66.7002 441.662 68.1201 443.253 66.4502 444.693 cv
64.8203 446.114 63.46 444.584 63.4004 444.514 cv
58.2803 438.592 li
56.7305 440.152 55.71 441.203 53.8008 442.162 cv
51.5 443.303 49.04 443.623 46.4805 443.224 cv
46.4004 443.303 li
57.6406 456.287 li
57.6406 456.287 59.0107 457.777 57.4102 459.168 cv
55.8203 460.538 54.4502 459.048 54.4502 459.048 cv
38.7705 440.912 li
38.7705 440.912 38.0303 439.992 39.1104 439.031 cv
40.0801 438.172 41.6904 438.881 41.6904 438.881 cv
45.79 440.532 49.7002 440.322 52.9307 437.531 cv
53.9805 436.621 54.25 436.321 55.3301 435.17 cv
51.3506 430.569 li
51.3506 430.569 50.4307 429.238 52 427.878 cv
53.46 426.618 54.6406 427.719 54.6406 427.719 cv
58.1406 431.77 li
59.2705 430.43 60.7402 428.689 62.4307 427.229 cv
67.5801 422.768 73.9902 423.407 78.1406 428.209 cv
80.1309 430.51 80.9707 432.529 81.1904 433.94 cv
81.1904 433.94 81.5303 435.84 79.9805 436.501 cv
cp
85.3906 419.496 mo
74.1807 406.521 54.5205 405.102 41.5508 416.305 cv
28.5801 427.528 27.1504 447.194 38.3604 460.168 cv
49.5801 473.142 69.25 474.572 82.2207 463.349 cv
95.1807 452.135 96.6006 432.471 85.3906 419.496 cv
cp
f
78.1406 428.209 mo
73.9902 423.407 67.5801 422.768 62.4307 427.229 cv
60.7402 428.689 59.2705 430.43 58.1406 431.77 cv
54.6406 427.719 li
54.6406 427.719 53.46 426.618 52 427.878 cv
50.4307 429.238 51.3506 430.569 51.3506 430.569 cv
55.3301 435.17 li
54.25 436.321 53.9805 436.621 52.9307 437.531 cv
49.7002 440.322 45.79 440.532 41.6904 438.881 cv
41.6904 438.881 40.0801 438.172 39.1104 439.031 cv
38.0303 439.992 38.7705 440.912 38.7705 440.912 cv
54.4502 459.048 li
54.4502 459.048 55.8203 460.538 57.4102 459.168 cv
59.0107 457.777 57.6406 456.287 57.6406 456.287 cv
46.4004 443.303 li
46.4805 443.224 li
49.04 443.623 51.5 443.303 53.8008 442.162 cv
55.71 441.203 56.7305 440.152 58.2803 438.592 cv
63.4004 444.514 li
63.46 444.584 64.8203 446.114 66.4502 444.693 cv
68.1201 443.253 66.7002 441.662 66.7002 441.662 cv
61.2705 435.391 li
62.4004 433.88 63.6104 432.459 65.4902 430.839 cv
68.54 428.199 72.1406 427.528 75.0703 430.93 cv
76.6504 432.75 77.3203 434.38 77.5605 435.551 cv
77.5605 435.551 78.4502 437.161 79.9805 436.501 cv
81.5303 435.84 81.1904 433.94 81.1904 433.94 cv
80.9707 432.529 80.1309 430.51 78.1406 428.209 cv
cp
.988235 .988235 .988235 rgb
f
37.6504 79.0439 mo
0 41.1431 li
0 46.6948 li
15.79 62.5889 li
15.5703 62.8486 15.3809 63.1196 15.1699 63.3892 cv
14.5908 64.2095 14.0703 65.0703 13.6201 65.96 cv
13.4404 66.3208 13.2705 66.6802 13.1201 67.0503 cv
13.0205 67.3003 12.9102 67.5405 12.8203 67.8008 cv
12.71 68.1113 12.6006 68.4209 12.4902 68.751 cv
12.3906 69.0713 12.29 69.3906 12.21 69.7114 cv
12.1201 70.0415 12.04 70.3618 11.9707 70.6812 cv
11.7607 71.6719 11.6201 72.6919 11.54 73.7427 cv
11.5205 74.0825 11.5 74.4424 11.5 74.7832 cv
11.4805 75.123 11.4805 75.4531 11.4805 75.793 cv
11.5107 76.9829 11.6104 78.1934 11.8105 79.4048 cv
11.8906 79.894 11.9707 80.3647 12.0801 80.8447 cv
12.3008 81.835 12.5703 82.8354 12.9004 83.8354 cv
13 84.1357 13.1104 84.4258 13.2305 84.7354 cv
13.3203 84.9658 13.3906 85.1953 13.4902 85.4258 cv
13.6201 85.7759 13.7705 86.1265 13.9307 86.4761 cv
14.3604 87.4463 14.8506 88.3965 15.3906 89.3276 cv
15.5508 89.6274 15.7305 89.9175 15.9102 90.2075 cv
16.1006 90.5078 16.29 90.8076 16.4805 91.0977 cv
16.6807 91.3877 16.8701 91.6777 17.0801 91.958 cv
17.7002 92.8179 18.3506 93.6587 19.0703 94.4785 cv
0 113.435 li
0 119.496 li
37.7705 81.9443 li
38.54 81.1748 38.4902 79.8843 37.6504 79.0439 cv
cp
f
14.79 403.441 mo
14.3506 403.172 li
13.9307 402.922 li
15.2705 400.721 16 398.18 16.0303 395.578 cv
16.5205 395.59 li
17.0303 395.59 li
17 398.369 16.2207 401.091 14.79 403.441 cv
cp
6.57031 412.283 mo
6.20996 411.934 li
5.86035 411.573 li
11.5107 405.932 li
11.8604 406.281 li
12.2207 406.633 li
6.57031 412.283 li
cp
3.27051 376.623 mo
3.63086 376.273 li
3.98047 375.914 li
9.63086 381.564 li
9.28027 381.925 li
8.91992 382.274 li
3.27051 376.623 li
cp
12.1201 384.766 mo
12.4502 384.386 li
12.4902 384.436 li
14.4502 386.387 15.8506 388.837 16.54 391.508 cv
16.0303 391.638 li
15.5801 391.758 li
14.9307 389.268 13.6201 386.977 11.79 385.136 cv
12.1201 384.766 li
cp
20.79 383.426 mo
0 362.629 li
0 371.932 li
1.15039 373.082 li
.800781 373.441 li
.44043 373.793 li
0 373.352 li
0 417.445 li
3.04004 414.404 li
3.39063 414.755 li
3.75 415.105 li
0 418.855 li
0 428.309 li
20.7803 407.522 li
27.4307 400.87 27.4307 390.057 20.79 383.426 cv
cp
f
17.0801 91.958 mo
16.8701 91.6777 16.6807 91.3877 16.4805 91.0977 cv
16.29 90.8076 16.1006 90.5078 15.9102 90.2075 cv
15.7305 89.9175 15.5508 89.6274 15.3906 89.3276 cv
14.8506 88.3965 14.3604 87.4463 13.9307 86.4761 cv
13.7705 86.1265 13.6201 85.7759 13.4902 85.4258 cv
13.3906 85.1953 13.3203 84.9658 13.2305 84.7354 cv
13.1104 84.4258 13 84.1357 12.9004 83.8354 cv
12.5703 82.8354 12.3008 81.835 12.0801 80.8447 cv
11.9707 80.3647 11.8906 79.894 11.8105 79.4048 cv
11.6104 78.1934 11.5107 76.9829 11.4805 75.793 cv
11.4805 75.4531 11.4805 75.123 11.5 74.7832 cv
11.5 74.4424 11.5205 74.0825 11.54 73.7427 cv
11.6201 72.6919 11.7607 71.6719 11.9707 70.6812 cv
12.04 70.3618 12.1201 70.0415 12.21 69.7114 cv
12.29 69.3906 12.3906 69.0713 12.4902 68.751 cv
12.6006 68.4209 12.71 68.1113 12.8203 67.8008 cv
12.9102 67.5405 13.0205 67.3003 13.1201 67.0503 cv
13.2705 66.6802 13.4404 66.3208 13.6201 65.96 cv
14.0703 65.0703 14.5908 64.2095 15.1699 63.3892 cv
15.3809 63.1196 15.5703 62.8486 15.79 62.5889 cv
0 46.6948 li
0 52.916 li
11.1201 64.1196 li
5.20996 71.4414 6.53027 85.3555 14.4102 94.3184 cv
0 108.653 li
0 113.435 li
19.0703 94.4785 li
18.3506 93.6587 17.7002 92.8179 17.0801 91.958 cv
cp
.278431 .580392 .729412 rgb
f
16.0303 395.578 mo
16 398.18 15.2705 400.721 13.9307 402.922 cv
14.3506 403.172 li
14.79 403.441 li
16.2207 401.091 17 398.369 17.0303 395.59 cv
16.5205 395.59 li
16.0303 395.578 li
cp
f
9.29004 64.1499 mo
0 54.8066 li
0 106.583 li
12.5205 94.1289 li
5.34082 85.1162 3.93066 71.9717 9.29004 64.1499 cv
cp
f
16.0303 391.638 mo
16.54 391.508 li
15.8506 388.837 14.4502 386.387 12.4902 384.436 cv
12.4502 384.386 li
12.1201 384.766 li
11.79 385.136 li
13.6201 386.977 14.9307 389.268 15.5801 391.758 cv
16.0303 391.638 li
cp
f
11.5107 405.932 mo
5.86035 411.573 li
6.20996 411.934 li
6.57031 412.283 li
12.2207 406.633 li
11.8604 406.281 li
11.5107 405.932 li
cp
f
11.1201 64.1196 mo
0 52.916 li
0 54.8066 li
9.29004 64.1499 li
3.93066 71.9717 5.34082 85.1162 12.5205 94.1289 cv
0 106.583 li
0 108.653 li
14.4102 94.3184 li
6.53027 85.3555 5.20996 71.4414 11.1201 64.1196 cv
cp
.988235 .988235 .988235 rgb
f
9.28027 381.925 mo
9.63086 381.564 li
3.98047 375.914 li
3.63086 376.273 li
3.27051 376.623 li
8.91992 382.274 li
9.28027 381.925 li
cp
.278431 .580392 .729412 rgb
f
5.24023 513.654 mo
3.81055 511.664 2.01074 510.104 0 508.982 cv
0 526.328 li
.410156 526.039 li
.410156 526.039 1.24023 525.397 1.88086 526.299 cv
2.52051 527.188 1.68066 527.818 1.68066 527.818 cv
0 529.019 li
0 537.141 li
.5 536.852 1 536.541 1.48047 536.201 cv
8.73047 531.02 10.4199 520.906 5.24023 513.654 cv
cp
f
3.39063 414.755 mo
3.04004 414.404 li
0 417.445 li
0 418.855 li
3.75 415.105 li
3.39063 414.755 li
cp
f
1.88086 526.299 mo
1.24023 525.397 .410156 526.039 .410156 526.039 cv
0 526.328 li
0 529.019 li
1.68066 527.818 li
1.68066 527.818 2.52051 527.188 1.88086 526.299 cv
cp
.988235 .988235 .988235 rgb
f
7.52051 512.023 mo
5.53027 509.243 2.91016 507.172 0 505.832 cv
0 508.982 li
2.01074 510.104 3.81055 511.664 5.24023 513.654 cv
10.4199 520.906 8.73047 531.02 1.48047 536.201 cv
1 536.541 .5 536.852 0 537.141 cv
0 540.271 li
1.07031 539.781 2.12012 539.191 3.11035 538.481 cv
11.6201 532.4 13.6006 520.537 7.52051 512.023 cv
cp
f
.800781 373.441 mo
1.15039 373.082 li
0 371.932 li
0 373.352 li
.44043 373.793 li
.800781 373.441 li
cp
.278431 .580392 .729412 rgb
f
33.4199 222.577 mo
35.4502 218.275 li
35.9902 217.135 35.46 215.625 33.9102 213.774 cv
33.2402 212.995 32.4004 212.144 31.4004 211.264 cv
30.5605 210.534 29.5801 209.744 28.5107 208.953 cv
27.4004 208.123 26.1904 207.283 24.9404 206.462 cv
23.8203 205.722 22.5908 204.942 21.2705 204.162 cv
19.7002 203.221 17.9902 202.261 16.21 201.31 cv
14.5605 200.42 12.8604 199.55 11.1504 198.72 cv
10.6904 198.5 10.2402 198.29 9.78027 198.07 cv
8.59082 197.509 7.30078 196.929 5.84082 196.279 cv
4.15039 195.539 2.5 194.859 .950195 194.258 cv
.630859 194.128 .320313 194.018 0 193.899 cv
0 197.58 li
0 199 li
0 200.92 li
1.04004 201.351 2.09082 201.781 3.15039 202.251 cv
4.57031 202.871 5.82031 203.452 6.98047 204.001 cv
7.43066 204.211 7.87012 204.412 8.31055 204.622 cv
9.93066 205.412 11.5801 206.252 13.2402 207.142 cv
14.8809 208.013 16.54 208.953 18.1406 209.914 cv
19.3604 210.633 20.54 211.364 21.6699 212.114 cv
22.8701 212.884 24 213.684 25.0605 214.465 cv
26.0303 215.195 26.9307 215.915 27.71 216.585 cv
28.5801 217.345 29.3008 218.065 29.8604 218.706 cv
30.9307 219.947 31.3701 220.927 31.1104 221.486 cv
30.1309 223.567 18.6904 221.707 2.28027 213.955 cv
1.5 213.584 .75 213.214 0 212.844 cv
0 214.835 li
.510742 215.085 1.01074 215.325 1.52051 215.564 cv
15.4805 222.157 31.4004 226.858 33.4199 222.577 cv
cp
.988235 .988235 .988235 rgb
f
1.73047 211.784 mo
1.81055 211.674 2.02051 211.214 2.05078 211.144 cv
3.49023 211.844 4.95996 212.534 6.43066 213.214 cv
6.34082 213.405 6.15039 213.804 6.06055 214.004 cv
5.89063 214.354 9.19043 215.845 9.32031 215.555 cv
9.43066 215.345 9.63086 214.915 9.70996 214.745 cv
9.7207 214.725 11.3906 215.395 12.7803 215.945 cv
13.6201 216.265 14.3506 216.555 14.5703 216.635 cv
18.6006 218.065 21.1406 218.326 21.8301 217.536 cv
22.1504 217.145 21.9404 215.905 20.7607 214.795 cv
19.8809 213.964 18.6807 213.044 17.2607 212.563 cv
15.71 212.044 16.3408 212.754 16.7803 213.174 cv
17.6006 213.964 18.3604 214.945 18.3105 215.435 cv
18.3105 215.495 18.3008 215.545 18.2607 215.595 cv
18.1104 215.805 17.8008 215.895 17.3506 215.905 cv
17.0801 215.905 16.7705 215.885 16.4199 215.814 cv
15.29 215.635 13.7607 215.145 11.9902 214.445 cv
11.4102 214.224 10.8105 213.984 10.2002 213.714 cv
10.2002 213.705 li
10.3906 213.314 10.5801 212.915 10.7607 212.523 cv
10.8301 212.364 10.9102 212.204 10.9902 212.044 cv
11.21 211.563 7.91016 210.063 7.73047 210.433 cv
7.63086 210.643 7.64063 210.654 7.59082 210.773 cv
7.48047 210.994 7.37012 211.224 7.26074 211.454 cv
7.16016 211.674 7.06055 211.884 6.9502 212.104 cv
6.93066 212.154 6.91016 212.184 6.89063 212.233 cv
6.88086 212.254 4.55078 211.154 4.32031 211.043 cv
3.99023 210.883 2.5 210.204 2.52051 210.143 cv
2.53027 210.124 2.54004 210.103 2.55078 210.093 cv
2.57031 210.043 2.59082 210.003 2.61035 209.963 cv
2.70996 209.753 3.15039 208.813 3.25 208.593 cv
3.30078 208.482 3.39063 208.363 3.18066 208.143 cv
3.01074 207.963 2.64063 207.722 1.88086 207.363 cv
.330078 206.623 .0800781 206.802 0 206.993 cv
0 211.454 li
1.29004 212.063 1.56055 212.054 1.73047 211.784 cv
cp
f
31.1104 221.486 mo
31.3701 220.927 30.9307 219.947 29.8604 218.706 cv
29.3008 218.065 28.5801 217.345 27.71 216.585 cv
26.9307 215.915 26.0303 215.195 25.0605 214.465 cv
24 213.684 22.8701 212.884 21.6699 212.114 cv
20.54 211.364 19.3604 210.633 18.1406 209.914 cv
16.54 208.953 14.8809 208.013 13.2402 207.142 cv
11.5801 206.252 9.93066 205.412 8.31055 204.622 cv
7.87012 204.412 7.43066 204.211 6.98047 204.001 cv
5.82031 203.452 4.57031 202.871 3.15039 202.251 cv
2.09082 201.781 1.04004 201.351 0 200.92 cv
0 206.993 li
.0800781 206.802 .330078 206.623 1.88086 207.363 cv
2.64063 207.722 3.01074 207.963 3.18066 208.143 cv
3.39063 208.363 3.30078 208.482 3.25 208.593 cv
3.15039 208.813 2.70996 209.753 2.61035 209.963 cv
2.59082 210.003 2.57031 210.043 2.55078 210.093 cv
2.54004 210.103 2.53027 210.124 2.52051 210.143 cv
2.5 210.204 3.99023 210.883 4.32031 211.043 cv
4.55078 211.154 6.88086 212.254 6.89063 212.233 cv
6.91016 212.184 6.93066 212.154 6.9502 212.104 cv
7.06055 211.884 7.16016 211.674 7.26074 211.454 cv
7.37012 211.224 7.48047 210.994 7.59082 210.773 cv
7.64063 210.654 7.63086 210.643 7.73047 210.433 cv
7.91016 210.063 11.21 211.563 10.9902 212.044 cv
10.9102 212.204 10.8301 212.364 10.7607 212.523 cv
10.5801 212.915 10.3906 213.314 10.2002 213.705 cv
10.2002 213.714 li
10.8105 213.984 11.4102 214.224 11.9902 214.445 cv
13.7607 215.145 15.29 215.635 16.4199 215.814 cv
16.7705 215.885 17.0801 215.905 17.3506 215.905 cv
17.8008 215.895 18.1104 215.805 18.2607 215.595 cv
18.3008 215.545 18.3105 215.495 18.3105 215.435 cv
18.3604 214.945 17.6006 213.964 16.7803 213.174 cv
16.3408 212.754 15.71 212.044 17.2607 212.563 cv
18.6807 213.044 19.8809 213.964 20.7607 214.795 cv
21.9404 215.905 22.1504 217.145 21.8301 217.536 cv
21.1406 218.326 18.6006 218.065 14.5703 216.635 cv
14.3506 216.555 13.6201 216.265 12.7803 215.945 cv
11.3906 215.395 9.7207 214.725 9.70996 214.745 cv
9.63086 214.915 9.43066 215.345 9.32031 215.555 cv
9.19043 215.845 5.89063 214.354 6.06055 214.004 cv
6.15039 213.804 6.34082 213.405 6.43066 213.214 cv
4.95996 212.534 3.49023 211.844 2.05078 211.144 cv
2.02051 211.214 1.81055 211.674 1.73047 211.784 cv
1.56055 212.054 1.29004 212.063 0 211.454 cv
0 212.844 li
.75 213.214 1.5 213.584 2.28027 213.955 cv
18.6904 221.707 30.1309 223.567 31.1104 221.486 cv
cp
.278431 .580392 .729412 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Jakub) ()
%%Title: (bg_1.eps)
%%CreationDate: 12/26/2013 11:21 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CQBH,E[CRq!WIlN,%,$O%MdqD*oT;,Ys?kb[Bn4i0Jcns6<H(CDU&YlCpLlh90<%:YFTaY4<h):Wj50U<Zdd`?!1SN%hEl*
%F*eu.MnccNs5U_0hn8j(p&"dfbH'Ue(\9=ciW%lU=+B`Vs6\'L?N9NY)7T(Lq=2)KmlpaI_u"@Ys7!qNqmZ#Yr:%n1Rm4T4GP*nu
%ra:5$FnPdJIf&j;^Kk-[IJ(k"fJSFkQ*66ehS)1fs7"jFO&tqrJ].ID0E1hjlmfUJIOBR>qH)Pll*mi\I^DSs^%pI@r71K6O_>Rq
%5PqA9]`,g<+$P-up$p<(GQ79t3;)dA=h"CtlgJ3F%sG9d?B+[SRJl[@p@[l]rV6)]Sp@`8A\W]lq%[f;s'5NYpRqH"X(H_*aNrcd
%*K@H?iq&'?s/i3Trsc`@X*ceh3PYRd/Y8)H_E;'t`VuD*K(7\"5ku9:M&uTNlgMQ;qs*3W%TOR)Qf[KKqV!"/aYj>cEGR<"db<5)
%QD)#t`jT-;MR,f7CpTbI%eT(:IIm<mIX1VD?GH@1o`lSb_hX;fIIhr)gmgBpr0nec^AdWrn(rH!NmiuVL>m..J,B)E4aFa=q">F-
%GOqF(l"Bq^eV?B%rb1*^rp>a`M-jT>rfk1rn[lPbor$F"]?q_kGMg/apUg2"K+7cJ?F%9&Ho4[`AZe\;)IC_\]NgFFcW<al0lVEF
%?TG]GI/OA]*GuXR=YNsm2Qlti%r_I:k1q\?0b0WhcEVlliQ\h^_qGd)Idi>'f$44HrqD.O2gkPuqH^bUR(g<1RgnZo0E:1Drf#b5
%n]1+tq;&)1kf-TtImp]HD$%A^IJ*,qEIe"g2GjGNlM=9u?iOM`*UI.Ypc6[qfc#=rg]S?ni$\Mm1]EiLrd$]tEa:TL36aL(`_W*_
%cT#d5O2nbECH/4LSC?gH05h;t[>*0")h-eRRi@l@F+[,(DXa!^)k:t3iigD_4S/.(&LSQZ\k%f]PLUj?;h)c_nb8R@EdZh&]GH%V
%1qZo&Xo='A_G?\SQblP4HZY#q`d?YlNposAM-HscFDJN'Ie)=b$cmQG4B6g0(>q$^)Lg\9it8X8,rT'mXhIb9iMS<YgZo$mI'l_q
%BB*L#iY;@/Bm</G`2tkXH?9&0#7eN,1q[=W[(8^CiuRY'7sI>i!If@T6,HEfL3LR3%AqcHSZ<OaRDB8IHuMslSXQLka(ahOkSq4K
%?@\#:e+@2,4,-J-`'9cE(CVA($hA>O\c.P3`(umM?H5.-?Z\#OiZ,V(>om5l1J-E#B8G#hSV(X.n(;liN0ke98W9ct?gUeLlcJES
%2Eh<lhG;D:C%6T,?8p6gp!4S\M(6g%fW0XHM^/7YQ.O]mC[CVZ^$@e=c<BC^3'HE>b)*cYjeeF@lY&dqYG6Y,7<e=n[7d7)dH#PX
%DQHLOESs'/];Q_J?V:1DqQ57rUuV,Ps6T;S6s@@uDcq1pId:@C3j,kT^&#L]6%<(Qp$_`\a6U56g#]]P,-Bc!GB]tFoiqHNrm0[g
%`Xk?l^,h9!IH)?sF>K2&aKtjFb\r<U/ZB`DU#PilXAdL<pVX8%dp(c$8"VOILZ@oJ*08-\\:;efQTt,EG4BVOqY]g#eRUkn3[JP]
%hDa-fLO*VpmEk-OmtYe#p?B*;TcS,,3b[ltXh__8X2//AlgUWok-uMO6H93.a#!)\><4rrX#!Q7>Mo9]5QC;<n_MtE\omu6ja5G)
%hfYqF*IZ`/[+pqaE/X5jl+g')lrGK07ml[gX^B``p0HB^\*2lOfMclrI4%a[#:AfD^(8_3O%pm;eY9>#%!\qb=9jZa_VTdYm8hO4
%/>ffb4^rej%mFdCmq1?pf0kf'HpXBaa(N]lqstm\Ac6#G_GgjC;C?K*phh-@^9$!I([^3SHL,JEgl^4#T,BQB]D'8aS9HHc^$D99
%GEO[sHp#A/aF9`dr.[f=oW?]BLR`?5QHLRQQ:uX^J5@1pc7O6$[`b9nCX,+LCW^ZFQEV0>5p("9]\Hro\UTMBSdn'"m>5J9qr?St
%M$%<5`PqAWB9CO&]$9ts33H&b*guO]%i98W/^_/6qEed-)+VC+/tZ_Ll+;KKX$RuV"M*TZc[Ioc6gt;X%,S"kGn?l<ILEND")!e;
%AmP#2A$bJ^H(H(&Bg[pflJ<m!hs.N`.<Z`!!%WrV0F9$&rmZikS`@=t/]7>Z^K>&Q<M*Bd-+buc0;%p0UmsQI*iS<nc2*lVR77_C
%J!'_PXW+inX/tN7@k-9N3cs8-B?,GNE4SX1WI!C\hbUHc(5pOB[6.%H#_hDlVe^DcR<&.JFg'VsmKW+71<a'TIT+iN?-dkP4te?d
%%U25>Tm!+;e`^#B+O?Z=3+S,,%j&;>]+0%Y$uPaNE5r1gSFb)/rT#ABa<8(SkZNhn3e>h+8;C$$b!"][@e:bS-+Qch*t%30Bt;N?
%FfeMZEIiS!J;DrorV*51BO6,q.Sl:O9p,s3e[e`KT,,TPcJ>r&6oDhb@g7Lkf6V<=b-Lu!q+bATeJ+#B1RAE,&73dYFP9pfOLWTE
%57qCcG7H4rr:k?k\@-?]@qs$%!.>j(0YTbg*h;[RZ7Gn/b^=NHF4)u0a.pXA$hK3q,)14J^1(Nd)kR^<Zh1:0T'OjRalUSrl<jFj
%of7JE4AP$c]^p<RNuMCfe+4*0niXF@^%ZVa4PRip]DUGW(16P+gpWgWd@M:k<`0Gr^,^#mF%H%\BAQ*$0.h;@515l\DF^5/_1V$h
%.Y%.1LO58uq(D!ak!E_9YOUlk#f]eUN";F9P4$$BFrk<a>_b30fGsMeHI^XEJcOr/2Y$/,?+2dP4i<bB@>:iFjRTGdSh/6!hHB+E
%DfN+PiK#P:gIW@aa/g4tC[h8N/,T9ZHno,?3>S)*O.i;QiC+2/)oWqS;%n-%6(G/Z(Mql&M^rM&.;%inp3n*;G[!.\U;&@MY`F01
%')MaD\f0fVBkjXNFL3KOFK_ifKoID#V+QrZ*p-R=]-Y!Ol*%EN^;LGT(3,;\J4jk=L5YtP%t.BW7,qd#qg)aB2okD#@K"enS2t/g
%4[3_pA)QF[!M,`WSf[XcMU3iIqmmECmOp?`LPFQW2&Q')RYG/"F%kjU4^6JeB0a(I<Vr"h6i#m6Oi51h-55ir?>9-k:6Xd=7*F8u
%SS8TsrNa!%^8smijlNWq-fOEElD<T'X;ASETq.O^5&d%@GM?:"Pb:Jrr7s"Di<oh^aTtgqaeGLE)%KH7JVlJ9[2]s9N3%d^$N?)X
%IW(4`,LEX[GX#V&bFNg*XIkri:Up;/<,8R:mD;RF=%\CPLfMHulcWddO#6p(++0;c#fh'jG\YUP5L+CRMJG4"&0Ck#E5'N#[^Dgj
%&.;J>I;q6L"4pRrs7+4kp>dqH?]P^7i2>K%cGoD`*G?[rmk;SZ;to6Tp15GXHg@MP00os]SVQ<e%Tjf\^3eZ$Z!MUc,!Wu]cDV_!
%\2+NaIc,T7505?E)J/+RpR][hCJkQU)\W)^Q2$q/^&Ph:hm]r^$3,DJ8fiD,9Zd7O4MN.7kLZ`lHJOlIFIQ!W?+0.TFB5a%If%"+
%fg$lea/,m#I?LKB1J]YQ>NX>$^.+k/H9+.FCJjgt.6Dg78*8dM6V]pilP<13-UJ*EZp%uReQeoLEnpN9c7%c<-kCRlp,V@>H_QEj
%O#iO(M3j0P/**2P6]:^Arn#mtEVY8&G5[^MXMpCkRHY<dj86H[rLh??CtM5#nnJMRRIfW/\P\3mOu;T<"LL">:1q>#p.t=B9Ac!l
%d6].(9JD!2Uhtqn+#1PglW6j6rdE[PTB,!<r@@6GkK`i#ds\MGp8.T``22NaYg-2+qkeMum,,u"(A-)5A/i+(ju&+rS=A<'mn2TT
%mg<8^IL@bAlA"[=Z(@\T`n'gh%R5I>V[hNXZO.M-YH8V$qh(ffot+;Op>;e.?DQP]).'?o5]U;FlCW@uo-WpYo6i,1K$,d(Lct[L
%8u*i,^0]7$j#p_YEe@V'%g]!'^iXk3k9$4iiOaTZ\3KrjC"bufDq*cD+^Z^V]G(#m@;=^G[YjQ@n+l.)$7V,(q5:<La1ae.l1)IG
%3X*pe\`?MA_nC;GrXWSf9qb92eE;XGkDoHric.aXrLSH]d8eMl%@q4NW@@"235.RL>[1mSJ#:!K@c^"H7I\7L]!G0CZQoVHmM%W*
%q`ef3mX"li?!NVH1^nU*lrT3ght.I\3G>@8*9Epj;A8d(Y.+IgcE%6QLSs#@))%5;MA?'IcCZaF@K5eRMpC;-H$X_P0<sVE1&J>G
%IZa6\$U=U>F8;Wtj7,"b5Ou=6l)2RTg%>20F)#V#4PTZCQTo(ZHpT[Z_P^c3rJ[le:[,<Ziu%q(kIr](8loR&_m.HtZVO&8pWl'h
%#.S4j/6L`uK)Rl>/b!jTrk-\AiiWZ-`5B,lVr+'S*#o*q\fYp>4Ic6*LM\Z2EBQgA\Y&EbaGeSZ+N,R:NT1qgjD'-+\+5%JI"0Ef
%:Ni;B9(@Qhch4iAk>a%O0Q)k_SQ6.fnlY.ninn+@I6sQm4a5ca&`<K`^GG`!7NK5g])hmTh/9nXre;9Z0Y'f'h^e6cV49Zr=d8;n
%9ZPr)3T9M"8+_^nI?e5&^AZnu`7RrWGN\hM%dgg@Zd3*M8'HO,TJjs(-Q!ha:Y$##hPtVuB#JZ#$*I5+BpH4mDS.1>o436#G4G'L
%00L(+/(#5WE*NDRn\,OZ3379!1CH4(ZJP:KjII)cBT3)61I$57J*?dG,r,ZOf'ZZ/ccl*kf*1Te\<(Y[ZUDd2HN+PcU>0g.Th!r$
%]l2iT1>a/npT9onRs,K:EKADTg-]N^id#..9=<@"Qs).,\jTA5k.l'#q`/P$_gGdsX.iAh_tDLE\q`@n7?=cLU_p:,W0CjNnnoNA
%*^lk9;?NL,i-6@o,Y_cCbu:oQKU(/BSoZCOronKR2:&!s`eC5FUQS[5Yg2\63PA4KqgGp'XP5!.h0:WfLG/*LbWSPp6>rR1eV_'/
%DR4/c&K"2(5I^9sBD*;[%8\hF1P,ueRSWe!,nH;ud7]t#P'?kYN_1CER!DM-b,KRVarpq1(a"(,7X]1EA:S$T:1JXP@!4?\R`(%?
%I1!tWlYr'F9ZdFD.oiaBRn?Jfqp)m84oZFoKaY:\"n_2V?6alYk=]a_;>pFbE'>c;c:jRg\a\U-K&$A&k4"IhHA6,K*e*<RpV6Or
%LCE*XZ/'\bpHf,^6e3eA[inm,a][5>bkt<D6DqdqpVu-RRspY8\tUfnVSORISXnZh,k)%6H[<*1a@#srC[pY*I(HuZ[=F:f$X,4J
%]LSR--Uj=qfe#aUo"8aS]57'88LjJfp-HZ6/\u^Kd_&C2mn-b@aNmfn]`n.L-ak&j^bQL*`)D)6_Xh6Vb@;5^7L*C"??pJ4Nt6P3
%3/fdlV39WoGrPWBP4#l*A4Bg3Lq,J/(eS;JK:[O98t%0C3VW7Q#*,jRVR>d>HbOtS0p.HVMAfiU/dS9@(T./2o;%nCN*#Z?^>AVB
%)Act$L\crem\0*r0(s&>VTe<K:#arPPi"TuYYji]:t6gp4ZuSqVj,Nj$-X'k$'.Mp@6AXRO7V.VZH?uPjs<[O7TcWJm<B>J8l(4*
%XrO+$I--CBJ+('$[,W?Sq=9[R-.LbOMnIu[\:2i<lVt'-Waf:Wdg).9<M4'NMbL>B]<+pfFhr`:s8Ra$,BG9m@Ll5dRjT^CSi'sL
%eBfi496@)Ll-oO0:)o7+knfs'P?K'EJ^_7mT@NJ]pESZaQD-M8[$mI<0qrOe[.)CK4Cuf5fZPq1QQo`\S!_^S9BD@5pZ8s_D\R(K
%CctjIk>2rn*J4a=ldj5K.E%'A!O:sGF5nn5^=UM-oru4&Xg5(s.ub?L;WkeJ&/QLaf=>2t(Hl&,?a/FqqODuFUe!%eX-ZlQhH:ZA
%,Sq/)OjBTYg[@pu7EY/qifZt_+4M4./;KuE-YJiJ=uEnWr]%se%kQ)RrI-"I,,lJCpo&MCU8=umapPhh^I3Zh28H%k\J1<e3M$RZ
%o+s*rT,@<)4Zm6NJ`4L,\HA.6]$B4)j:^=T\[RA\LZk;eK,4R>EMth:LU)dZrdK$4@)'k!30u`MjgQ5(O^#$62Uo,fp'EJKPcna@
%B^0^f?uu2$9(P:A\3G-DUcXueKcKI.pr+<K@)jJ`jhtimJ)\IbEWTLsa\kVkk_i0fbJ*H0oB>eR26pOu<:3Q?FilPSle2SJ%9q:,
%')&mJqnJLL"P_)VIBABa*-PbK4ZMnEM!`Qr[_P7<PbZ.CT\'RWrL#2&@uC%/Xm^M.'eL-=;1/6!(dZ?c(@-%j=)2%o*aH=4WSbun
%L[GL1G,;jtpIb\sKa+Uk/?<%Nm.l)iDP#/Dk8T`)BqiKCDe`O$Z+b-uC5)9o"d6\<Iq/3o[hV>mY-;2i3"$,d8b7@3hCl<'$rS_M
%Vf7I2mjh5WY32L?KQe\.*8BTF^6eiu\8.$dg)?Q9rFiClcV_d0aIj=M`cXig[D2O2X)_d\7)l=B5J+CncD(bhA2)'&YCY2EoC2)J
%rPYdU.gh0KHYJgu)=JA^nU-+nh+\2_T_I\:X"8L)_?sgVM'Jau:fP8+?XfF*]`V0I/r@O>V`Q]YHbFkiEA\OX0$@[/hdue*8EXWS
%K-[hNEE.tM-1*!$T,7@iZigM>_rIj[.rA<pR[(JO1).J/9RA^;lS@t>KU(:46-!gJ];TDUqp$6%Yi9?g%nFFE9_pGHklq'3,tacU
%:Zm)lh6g8eL(3hF%"+b=;P@0:ah6pVa=<,plOe1\T!m8,0,#@u+DnOfh2SKt*?=oINe.:8S_FtQr/)XEn5m/']OuDNkNo^Z5ebF,
%5J%YUQ=WhR=?o"V#YQI>(O4/)=)/+nGndB5Bg6\IpRk*B[?^J.&/W[kro>3mr?_#$/O$IU>uVSRETF9X"bhkU7r/'6m:-+o/8*uj
%3o&#14,V`uQRM7kl6o9XmM'mFr-"3IcM&]C$[k5oAM3dBRBXnKEfKW&Q[:\6R.,9f#5.W_QXH<Gbd=V5*gq#^`]oP)[JfMo,i?Am
%=&eUWKD."u!oi51mZIYhf)%T%B]*Oq]RF/(AW$-!H5=!i@c0@]fS9?QiIm?gme1uUpWoIY)egOh7>DoU"gUmcfBB)'gS2g,j]/e"
%.F7n*B*u`i6g1*$V=$Omo'k$nX*>K?inf'4lkK36Dk,,$[3?jX9;r0S3d]oH-p(3uQEVi7,jflanV=k$#j8>&*i!]4)e3Z\D-6hk
%d6O>\9dkL2q0ZOb55D'Y\95U!UNMR!I3HR'`eMJLRBmE:4C'l5FT6XR9\Ga14QrD-G3'd!+8p\1#c1i!cWFWE.HHikk@<9hD>ZcY
%Z=lns))&i8H#2%PNr'-q"r:PKd`<5%%m#I\`LNMT8KV6q4h$dSAngFcqYLo9:=lW$^\2f;^7V&qTDsp#j.dW<&m+q!V]:2Wld"<F
%RMtt=k<%#adQ/s,=iZeBpjEhG;F19.;^2d57B32Zg`-nWrsWn@<s_"Ca-PoVE8-/hI?ZD5ZCa/;[S_9F<>*O0\u)*SaregEGp9bK
%f?ckSk`iV2_9\)<j,2O]^K"T1UdC:tC3.5SgudC>0+UjA/M(.6V"Sa&`@Yd$IouGh.M4Ck9W.4"4GHWorS]@A%,1YGjlN+<g@s[<
%DdBRs3:'[p0A\oU*'C`Ug`P_VfEs@!BY1XFbkkQ5\7_91qrt^B"fc"L2^N<"kKdP!55ou=nW.g\=F6ORhG1TZbDlC:r&;+g>^,5m
%Rel3UT6]`!7*\"S8KnBdKK1YL"&HY_XrkC>',n9*BnVi<1EJ1-0\9[1Yjj_#^rcHP<;6/YT,lbn1ojVI4`c=rGO2Ej#i,u*J+;V2
%]Yk]55GM(+$MF#mh03[?h6rs60ftlBk'M$JF\1n*Oe8<gU_>?G;-To9MY$VYGnk:<N;!]p7F"#DXj[QT[b[b>)/Sp6\=_aUqpXNg
%#om1LD?;=0nUC,YZSQK)U1Mn;i^hb"#!I5,,u;+Fk:c,73Nrq"(W!!30CdM]hPr(RI,"AM`T!$"J!/:FoK+iiY-F!LgNB/r4DuUN
%./o)1mV:]pNUc767$!.^$VpMU]6E/h^A@WIJ%^.-h06'[IJa,$f<>5Dk2!4*]RThX&,t2RJ:II`l]48Z&#o3%nhg_\s6Y0Fi6Alp
%Dr0/MJ#g?7YCHNE8,M=RI<bePpV2%KqtDbXqUsi^p](0fl@6JGk2Z=LDuS)KDm00.TDt5ur;>hm^\[BK+'r=Qm_c)DllL?*c[#?O
%c1aGPieGL_Y<KV5dU2BF*npAWnU8OP\$(;]rkisG%7ImVpTLdX^AiY'j%ammmb=dlGkL%m95aap\$+Z%qJaD<oR$W2Rt%i\]Ws.o
%n%R4&]'\eo5C@C?`/AlcaWhie@IpCT*qegY+0Vj)^4,hD&,koW4DDHaQe_/@J,8T*hnOU2_fu'6>>"qo_Ua-_rScSi]i-^Or:n/O
%YC?6FrS+_)FFsO,*TR_QFj5E'L\-eV4i%'l+8=nVYMR!Ao7mj[^Am5_DpI2=bhr;M*k:nf0)C=9IdW'i5P9ff^Z%K+F+T8:^3sM.
%mt#3OkW-EV[oXZdq4ie5J,\s&_jf7RbXDs/n)(eTef+D>+5_Hn]oL_An%O;OUC"KgrpeP5+QL]+k03M4j_J'C[L9l(Ie!3]d&sP/
%D9r!X&$N]q@r'CDYC:Znp.+GrJ,,;aH2[\V\4TiShnJmNT3cn&]I[o9Ml?p`%S$5M7mBPTV/aLnFW!fRpoUANNTnD`e(%fQIJmSu
%$bL92JA:C?X18!U0"-P%iG'>:gu>fon?5(T%bEpmlLR77l$E'rm5ee*m10WE?bLsdmFCTb5CCCOX9WpD.0ehI]_Et9Bs@WXPk]`#
%ffo6mnc($Qs/F?2T;@%;I9M$bNX,Shmli]0\a?"Nq]Ja]kb$6eM?!J9`E,)!:"f=(^T-,!]FsBFeb#jf[sX`bnnl+1L1pd1.apL3
%;mXgCF>M`JGLNf*p(Fo0V3JO?d`Q^C.C\F,`E2.\O7o"(1,!^>gO*k1g\G_N/q^iL?D_:?QDH3N3@re*m;c9`3nhbi,,3Bursn_5
%hU];bCrXs_b1RhBg>$GMq`++EqIer'l(?*oj6+5(FoU7lkLMh@qUch'nA"oBUYRgj;u]rI%WhY$ri*M*o?Vu[C]E2Bk8#/O,JNXE
%F,\F)p]pik1\(K5esQ4]p6klc`95*@UCG7WSN\+7(@Agdp9B1`bOtt[NVqERd>>>Vp<gVoqcqn=@%V&'b)[#'XYIYoZ,l<cc\nuE
%NQ&uSUODnM*0`P^i$S;ED4cH/RXM2a(4Klm(q\T@1YuYkCdPf0l=RDaFUX!ag<HtnpQ>)0CYI&+p%@:T?.\D]=L27.f@_M%GWcn-
%gf^t%%bCsIQS"!Gm'Z)>D&SE>1VT=JM7qD5]5Fb$[MVLMj%L+Gem3n_gmu.FNUcG12WNenC*TBfgc\[o@?s"@L`>CNK5lCK=YML@
%U"PCG2D`@l9R+!m=QQp'Je(Q2I@:\.51fac5.KEr1eu*]B]9>j0fm<$B!hqKCn`6qs1u_LegBq'-M)&;g<@Gig'kTu.GqA;KaE;m
%NVR8JJ!1DRR\2&U8l?^(ptYRWH.[Muk-t,!>%3*/]8n</j?NULR5>G&VItCa](i+]d#]48hsRSFK6:_1Tq7A=BL@habCd(:NNpEm
%8WU]T,TF'(A"(B(V\p.R)`-:g;]Ukb7Ur`?bZ5cuFaEO554I8(j'=TK0moC=UHK^4!d.ppJTJ%UjMHS%,BmS$`4I%ShD9.lkeejD
%8Re;rRj-JOYaHi,-tAktQmUFT-8YA7Y\A\\1)aq9MJ.Uc2Dl,EKuoA@\I50oEP#$+-hGeIkha`!Mo(cU&*2Ko`;uTRal$>%oh5"+
%s*&M(;_AWBjSnTDkK=X-YhNH!fD2kGBecg<46S'aR.]F/#opPdr]u:rg_hp*)7sAan*6IcX#jOrmlF76TZUNVVkr$Yk#.5Y>g#,C
%F@bV">\KZk:fqFGfAaNsGT0:pJ\S022n6q=Kc<aB`\P<].F#Bcg-k<[K^M8ls3Nkhf:Vun*RE!N',e-GH.8>NUmgih'[UQnj-Al"
%0*c:^ZIgh--k4;4-PN1jU<[XkB59u8Bqr=i`_E6lO/Yl6B=.Xk%;Kdc<<@@a``t"]-Q.^:/ZDDqmSi;8[d_mC@m9p!C6K+f:iVXM
%(!D-nRkXn]D-]B(m="-%RDe&k7U([j]2Dt(T!E(`Qb"ErLN=e(\_oAEC<\ADa%p8[<NjnY(=UF7G/gkkHDYiTp[?tPqX4$c=+>2;
%eHdtk%!?@``Dd\b!#>q07]l0GRbpXfDkb\,W#j_Z$(tjmBnItD2>/52,jXcFM_>3gY%um:/M_B%R/QHteIPS?*k5G09C9@G[;`h*
%Tdqd?<*%!l.rI<*o8WnDRUWR#4;J8n#fVA3n:j8+!cY$nS#Pofe9"F*r==CeS[cQ/]l1K#WF/mo>YjU;cXuG'4ARUp[op(LC,:VQ
%c/h>lH8&C027>1p`0b'nAsm>F^lTFMn[aFWDlcru@:;crDC;P83n+qU4)2SjI[>BS5'OXQmR7<!(j>VbV>^@+j:?^k)o&HA)0\ff
%A)-[EpT"h\n&qs/H9\`JD4VY-A=@8P(rWLkA!Va%c&JjoG>K0U3@/E3KmHU=IH[+Hn_Ir]RN6Qe9XVS"fm>o%a8>VC^>P$<hJ^Ho
%UQ,9TT8sGs4AP[jG_%B5ooE.Z\kIecfpqCfr).9(P:s$r+&#2\/r<s#QG2qZ1\,VEO`p`MT0)Skfm/oZf+ON.0PG"FaJaYm,K",d
%?(GZcAD5gm(:\1#=QPN#3c&s:ZNcot%Qb`l2:)heSI^&h[Qf->n--TT!8ddh"FVRO/&MckR\/9W;#$@m1J"3V_TRVVd2VqNY2O6'
%s,T(Ii,K\%s(nQK2M3p:XG-\rbSp>Nl?o6PlGe6L\#'hV,;m&..TBSRj>CamrV'[SjM0ppNGKM82)>3n!(bqSOW+:\!4`0l%"LE)
%%KT]oR;N$d#2D'9kCD=iEY((meI/eOnuP:>p<dI2Q7eU.SMOm*d4I0%))K\IF%>uJ2;KmMmZnM6b*aO[/jdd<Bt!bPcHadu3$4g?
%;HGp>6@SX)dPPh)loP#b[]s13^WZhcNHWO?m=R%)ij39'4[8?!l#K;I^";3Q)]`gs+%\QZ\e2?[3OH;<%52ZY?DS`&1SJ53rb?&3
%YFaN+j_8aBDDeR[m(Bm(qf?DBBrAQ$<hl.qL=eDq?2,\EiU+"bm@2=ABSFI8H*@3baZ\f#^#[B)4V.18hpUP5#LE(b;QAR^]lWH;
%dq^SU2sr,#gR#Mn=uL7VCR_^eghA]PmdJqb[Vap_Sp^Hs(0:I7<aL,7O6QH.j>o9p:Et)7r8!dPdkH29&TbDn17oh$*qn'SZuXpH
%D+h?Th6qL]hJJ0fN&Ie]iRg<EhXXt,\#nPrT5UrLAb>-!SL6!PBl!?X%2XtNmk;CQMnPIP`?ENBpTmZ`?XI#cg2:^%4[FO(%s_,G
%$"7Yn2$7]*>nT#jd57RcO2a/e$DBPjBcQHY[B[M\59!T"&pO4X+eI$&n9h5sKeW'/)FA5?nF\K(WNcsA?\mQ=pt?Em5Rep)69)hs
%:if=H8OS5^C,:3UXaRKg):/5h3OV$/48#6ChaUd*oV_S<0Q5Gfkka$_oI3`=AE)?_?5TF,!)6h9<aR4=iTnE=dmRD'Sh]38hm8*O
%f"dW[,XPk-i7D6FI]_S4*WT\C`Y4WZQGl7]_:B;=)H'&?`cPrib@&PDc<,>jV=$$B7ek7+FORiYFdhs'1E+_r(OYXU47=4m50;nd
%Sp#F6$=U8b%=N.pVKL`ZXZ!;&fB03[hISWa3HP)Q9g3dQfk\f)UI;rg_=Wf<9bD^&?[T9QXP`cQ.qfF=\pWhEGFe_U"jo7MG2lnT
%fdB7"B%eu)2U-gHc&FjRLkt_k=@C+P/uH],@Uk@W^%eTta9Dhl'dlqU/7N1+[#FN1O-oU-)9p:G0^mu_`XKpM)NK[:,0[uXc)Wpq
%ES9L7En?oC\9.^pe9)Yo*IU%Sj`BONRn0sV"H0Ch(ZtqiLjPYACt>L)&$9(^5.[S83Hc]r9rlnb^";<nns".Ib#P?TK!,NPZYjIE
%hD#!G*4Fr`VICC/2,D8Kkfo5pVSnG#iNhCHK1BluaC0tbN'2o*le$s(l@uoga^%DK1FV)u&QeJQ\YuQMP_kcEjHX^dndtR$h")(Q
%S9I2)i.,uGYU?(%L>,Pm?%Ukp#4R3i8]VN9'B98VM95R%Pq%PP5IbNlFJ3UA/=otSiaKR2I>fh<-R,it4*O4"\J4<K&j3J]Ou%LV
%i[a2W43u.h2E\=28TX&5aX-IP8>dDn;>-\rB)fErJ,W,rf1>;m+gYpQRBWR`XJn@\#sFMO9]WbUe=D#^:@SIXq_Dr&1>h+h-?n9_
%[+!K(DI):'knNI<Rc:_Hn.M(M^EUAW5_iO=Fqo%Vd^m47aZ*`V+!@-?k_WQNNU=R%d,]_Z*MZ1+XXok82hsK@Zm`q3c.7hX>:VDN
%$g'G)N46M^A?HA9CW#P%*p&6X9(F@=n5.T+$u[nKamIDbk*d"_$uP`T6B_#e1\BKr;Nbi+?Bg\]9hD(k'TUXpk7#UWY@cl*+lSKB
%fGeE52<0sU)+9[/Ls.h<)E6J-PN]eeU4q8gPAsk`hA_h\FDI'1g:4G"CSUDJ$9TZt(QHWm\hd[,T`YQ1Q=Uj]=sGfsUHFM*f\ANI
%aIL1nIc?3VGiC*Bpk^@Niea3Dho7K)$rbZp*i:KQRZYP;lie.`T?gX0cb8n#38t)O\n;lCs7"&f+(,'2X6[6u^A/S4jh'QF%.^#!
%nt-?]T+(:_%.^#!nt-?]T+(:_%.^#)m@T?@T6T?CT(n-iIPT!ZN'[G:$j$60f&%GW_//oHroRQp_fk5;e[2t?eu@6[p2\Gq^)BXi
%fnNqH8n33^XH_8bK>.?ThsgT>%Rtr!J,GLjs1A7/^Pr#-G.4Ne\b`6(3F%"0JlhmT-cDe>``M'&No9PT=+@n.pP/Y>p)`Crqca%`
%iTn6@I/%s`k*qEMhS4F1iD3Oi<9_8,?GD!ip?H:G?[9,./X2'pY?u_L0@kDUs6e.df3eQ4LcbVS=8]i.dGOjdrM[?`lF$Z;b9:1E
%bF$?].@L1V8gDgAMBE1&,cja5:AW"4]I]D9K2&;FAO>BEoEhI.#[AtTD3O5l"IkV^"ACrkpnf=4I.[rPRjuj\$E0pV``D]h\$%H_
%Yr*b.&!bX@Qt:H\eI=1$7r*-KY3Pf13nE^_bqJZJfR94EIEqPrjlMZJHr]d]@B.j"B2n3j6u#)PX:YfnD1jb"BdD17a#VI_HeCZa
%=\5CVN[cb.Pe;f[1TQ@oe,"6!>]f^SZI?teE\pFF<G'hI3PVYm>$n[JSQu-Lb5AOGqn\)J4](KVVg?mZQcW3B*Ll+GQ:`f)FN(k/
%acjtkSsZE&9&Z]cAX]aWUmN-.0.j]?;;")T/Amis?C;R+MXG=*2m,e,D9t`do!O(5B"gd92H2KQdNg4>C0`st2=k@,@RFc@a802`
%#VS;W*3q^/M*A6TFj=[^r,OM*-*EbtV3:N2:g][h!jbQRa0sWs,H;W_O2)TR*G89mBI!FLn;CTTA.I6SH7+]RL7=]bH]4=/CO8Q`
%Eg,:5.J#s6:$daWHoWm%#Z%i_'.)>Ep.NlX`U"b29bqNWd>L+nn>8*LfGV2<CiSEC:Df652\!bL`^DK)qO6%_[bOh[)IHkh?e/p"
%m]dX<D:8dR>4'nKf\^=`\BS-_[T\/V6Y/K&\Fi[[.n1-,S+=c:bM`?Da]U>/js8+)RqlOE'?Ps+R44QsJ:`4N`Uj..9"&+)_YQ"s
%(e>(KSm_#tN1&J+$mn3_p.#k?"SSJT4lS?db/re6n^bRFeY\\AKJ"BHn9hM\N$GjYVOSNfH6T;Xk=-IgRS(G+/C^a_=m?%i\BkMY
%A#.@lAcdUr=HE"?fqr).<2r&%N;[l]`VVNVFkO@_W2@U;O#@s0B!&Djg>\1&ZhLEL"8kLpU@j@h#u?0b1ZdV-`^I/<b\]&N3(k+4
%g\rJK9Q<nN,TmN*XV#Aqi&Y)<ba'Sa*ckRfe7kRZ?f616g[[PdI1joOG[)%(Bq0!=B?KL%A9;E@@;E!8D!W8kXd<l6WG"0mK"mf^
%6h$*B78nUAYMr].S%1Eg:`!r_/El.LSd)4f,,h#S+CpFmXUl4]ZlhV1icsm>@`1"O7V_Y?#36H#QW95Uf%de*2_bMA8JXi;HRTBn
%>\qW#M+J)N[gh>+)D2;[ir48!T!t)sSe>/ER%W.!=KlBHkTsH6An*$K#+XKIH15a'C8)m;1b<?1i(D--iC4r+0,p462]MNI7E[G]
%b&nj.[5tthe6ahrSB;LO\`OJKAJ5XQD/VL0i(Ik?KO[*k7OdD]c,G@%0@jW8*fM2F%%?H;0+^bL#<p]1RuKB0ea@!a1cl\tHo_N8
%Up<R8W_Q$6h6>'!AMG52[6f,^RV]JBP<nMfZ)nTV;FS4Ijgo0`ZPaB&.0h:0`a>Ub9ROAR!>!:c1.2`Yj)"!?fM\H$$o;sLb5rPt
%O%U=->65TSF1tg2c9/O/@-t6G0qjD@G1eoO`hgp\,kO<5XD8#0bo5>!1nKt+PMn4$HJSo0el8.?1"I(s<h1T\e4@BLKY&&Li(+\>
%;b_hJ?<\L11_W9chO$'_H2D?b&LP=LW7_W0Yh,7:ht*2@NYS$#'uOcUP$K`L-s-hMj^H<#1,rcXrh_2uG_lTET^jY:Ef8,!HTEE*
%qn86CgTDhJ.`a8OVR`",<1?bpe1tb::REVTLi4>E4i(,s9<6&5gC.'($PJ1+da0j$&3.Wua_SYo0Fcq7`Q!eY4Ot@^OF=#P9u,:T
%&\\Q=5V$cCAt@-591@9R/>a_^b'93=rPr$g3/Ol*1c5K=70P,K-,Q*1&,IU2KuW?DGn:3!2:Rfj14""X*'a%pYqNf;TX!p]:n`i0
%0c:X.?)8^4rQ+j;?p.h6ed@Z3$:WM^PtY\I_H+]seHg>p[Z4sP:=)BB1f=.VNR:b7[flg6FJHrOHM!'!=]aCac8Y#bTI:[d`q^`f
%:/dXcK68ZH1J,)_f*7^&TIu/*CQjSl,>bE23fHt.Zr[%h=gMpUL.E1966J+KF]\;(675?^@"Lb6>D3P7-<)9bHP"E>"/.Wse/>i<
%jdOocDNKC+f%W=Zf1B-K5q#^,XiFVr)8iJZ0B+^M8J4,Y>1n/U=EK*firk-<B^MD-.lX0cZaYkI:M-'K<&G_P5tW:Z6,oAcS88P#
%"W5i7*T&oE(.FOV.;$[eT]CbdP,h4[.'cJS?^="Zie"YGA!89$X'd7k@H=.DaQVlT%G!+9Sk:V:,!Zp=lk)iCY/?-,KR'*qen@e^
%/ell\P:Iirm#qdWd+FE8KGiH`(N[S'V+k,\+eJ$UDe0qs-/'%]`OI)tHCE)sY(HU/;^<\@@h_R9$9!1+Cir<o![_E?.iT\X(s!#b
%r)<.YEQ$R>b\PJL?',/18L=cl+)2@c[=LTo*$P3]'9+\3am7P99IurRLd@D&MR%H1MW70!'*2:H?fua(NBNamNf!/"jFFU3YVYZ1
%OO]Fkl:b,:Z/Z)cSFmV5pO^rPD._7Wj8m%W^.M+pno:=CJu5O_%"sKq.`!F8S?2E,@`[s),9Enl&d^"<$#gtjECd%A2bg5KgjtSr
%S77FiR#o>Ie9G#GEQ?j9i(gCl8D<Gk;.8fXNon1.2B=kH]6`"'Jsg,t-N!lp+k["C+iT$?mfj6s4R2&B$q)X<_3lWu(TdX#FJb9f
%fp`2Jh_6\q9S<+WURTUF9,TboKArD(A]Pb>oPPOgZr]MC\j.%7$fqQ(Y@!V4oe=So*ntGO6%LX^!c1]sKrYb(7k)<P%ci1.Aa73u
%C^k@LMG>D?7!N9nM/s>?c:OY%Y`$Cs1(I$]d:7pYa$=94IiRTV1>r7P%R_9BF?4t<obFo%)tZ,&G/%pF"9p_loK\e'UPt;h,i9Yu
%0e^+HJ%Z$,4uR)=r+K_LTSO<V_B_+?XI[@iX!N9nQNaUH:,g=DAA'_6[kU1h['dlefeAb%=A&)23CGm'VlcN3I9b^I#rBWOS2P50
%du5lY>*Zag2(Ed^9^#ef#),*($QRlH))X3"?f3Y$(S-l/@03;2D^B]c6:=I@86N6.S;Q$0?-j3"l3XVI69S^YV+OPt/5!E2YYLnT
%7NX\b&R&s'S%DJ6W+7<O:,DS0;<me`\.AfE6a=]ll^)=2`:S`F23$U&,A:)sni29P(F`R;*V;A%>\'%X`pONV,>8Bpl=Xk'8N(*d
%>r=.7/PE)8UVXg:i0C(sRG]a`a5&k0/[h5RPJU@qQO)]^IV_oO!n&`B,2B;";li3oTJu&A;oO)`c''`?oIPu)D"jL!2P@k<K&DE2
%.2=8iiq<\:DPAt=Lh150]`kEp!N>*6s3p$](l3`8e[2h.+k;PW&`ahq#NYs^$PZM\6s6fM,:LWL&7p[L#<BW9gg-@X<@W(?V.9b4
%,^l-N)0Bn&=3WE5'3H,9,V4mZnrh8iAT;?I<sQER`l!%qgFEpeIPKFeeqF-+)M=&X?Si2cdR,0dTZ-.QN($!'j5^oK!9_VL7k^ZF
%lH:HpnA(7).>Cn-(Q\\[8W2`DGpr%qXHAV@3)=92gH4D$p*LXq'dd=*]tNGq2mF+6-BS`i-4XQC/k?P&:b9j:1R@@p(((2Y<t]9q
%>M:LUd1#kGdc.<ZanaK1R\3D4$D9\fI^9S[U1)X96/$;#@+*!dP6RbjG&XoBa:P;CaCC,EJP&H?R[$BGrV]?'L`dKNf";enjGXSb
%@YAC2#==;&Fu4D`P<UDu2@oso>]G=14^jdeYsWG2.+d;0VKmm7L-A/<al$/=MjOaP2/6a`XJ!`qiGb!>"F6Sa>+pg@pL%,l@9_\4
%`#S,F:3@,9/iB5fi;B<>0^4u]f6F'0??ErHL=rAVXU6;B>Bn4,QptGA0I_5KGFpHN2=,DuA(I>=$&"KBY4"thC82.:oYAi6"7W!Z
%:5(_1Jpc\L'QTmbUYMGGqV0HL.pZRB10*>rMAFfiG^N*Ae"P:#^7HJt"",39,C!Yn(RJ:0'E/;EfW!9C:#R')&3U$0Bg#"r!XFr'
%1q_$$e'Xk)I6bR$lFd;,%&aK(_NC"j_1is.\/KS"9)$1]iKn?g*98G*.&V&$3gh-L+<QOr+qi=/?oZmMElPO3[3@o/T+pA&jM?MH
%J]dM6ih3bR8P:(1L-@!S2(dqps2]_>)70OR,VuVgE.KMJe<)6n+uD3KRi?2i^a3cLJp"M/2oEsm?lD^1h?_i&&MbJS&gK@nM(ii0
%<@oH!95sX`"j&@@@tKe:1cDJp/Vh(FdhYDb)r/c/##3-!8B@Q5m&>oh5+hdBVO^R-ODp/+3?BDe#""ks8qMSmfe8PgRFN$afuQC_
%+D(g!_\m'%K!96DS$8lh@NeK=1ES@dNN;JiJ\^Dge$A=c+$3t#4:Vj!(l!lVDNP;a(Tgb-cfuYdORNZTU!9L^ZdHe46\b@)pQRU<
%;#p^*bS*dI8(.bB;/hsUV@TQ<)T-Cp&O8Q<\.G)DR4H`58?gD_d9;i:XNTN2R5D8c2B`>?@n*-GP_=Y`b`M/#?:EnS9aX/V2UEM(
%5W+QtK6o)B:jsGaC^b*,PFr\aO`]M9Efd9j0X^sV>JaHRL7<=IZ$!sq#KImE64Qn99rSu]0T+Bp?hVOVSR!WZ8jPFk)$uQo1'X^s
%!ZAVlTtXifl%gH7<tX6$H45fA&L]G@OplE6ml,Q/hoNkLjU35CL8&@s,@PP[TN)+GU3Fu_'Fi:#rfjKs6b"mj?t-qfi'k'o4_oB)
%SAH.p[UF3n5GlD9OFNIY#kg#EfIp7;fuWdfo4AD@5fU'an5MG56!9fe(C6L#P7Ee)EeV@U\l^03O0-Q5l'buLOS7W+%P@kg[+i[O
%2]$[T6N+)n?6cm2Did[83&89[NPXOm;YW5rDM(dgD6XY(>Um.cUl\TNf9CjW,[H)G4L?b<QHfl#O8pb?EhnZN%#3$pR/n67!<RZV
%9A0)C('50PY_hoCJ1M?F1)soF'g$b^0%_u8*HRS1UU3!?o-F$"bn@sKB"s?6f'HYnY8a./J3*N^e$+G_p+fGLO-.[+)[G!BaFM#1
%WtF?CA>j4*)TE%*U+XgUk8p[H#Og^T-cla4P#hD`VfE?E1Xq(P4n<pQ19!Y'JL2DsCioRi"Mq]O'N?kZ5UGkB&7nO&#9A$t5oE3a
%EpLAE`"f$UmNaUjh/RlZ@sX4T\EfTpYTOck$4"q4ktf=!2TZJ)%p"B1A[9.5>oCd_@,dsdM+"Oe)s6f1#%?tZTT)PH)OiD.Aoge<
%61+``4UBo"=^'!p>*=fr#)A>C:70sCDJRj^Ld`EF`SP+'*'Js&&<E_p5IEAg$6mo.5V!n_T4dI_"RQtJ#*p!.qPUdpj+*#kB61No
%DM+/f/61UY&<%&d=In)e;G$qfN:BnugD2eGRGbEe)$5;<#=[]B5fQd0TpijB,Jg/kHm]>D/SL_)+3<Q[ZK4GJ'^c$;V:B)ZqP-ad
%d?QpKrgk6SI1'#oIZrMB92eZJX4=.\2E4u]g!E4hZ,C'[,\WJkVQfApCspR4#=WC#?X\-8"@Gpl$e*(,4`6A=$"alQ.tdt?d:'6N
%$k*b='"QH]1;p;ROCl5^+SQZXD0$R2G.?,f\j._HZ2noFd30Js\EtVN3(*FRnA*.;L%'=UQVNDqZ"qb-(uisgIn9"D>/l@4]hE<T
%5m="=K(bkFPNhSEHahWU@lK'Bo;kJAFX0&nF./PL:#P^tX%C9NAm1"l4qOBu:1VR_H_\H3c_'A46j+?8*92/YA/\Ko0LUN<+N(_%
%e5RCq,Hng:f;:6C&6ooC1)9\#AmE`6X%:>uKE[5G9WCc(2Q^GD5+F/=ON4dn==;6IeNB#227U]F)cHU\a'$DmoAmUomg%ERkepR7
%19H6_j5A'4$Tf@K+kt[LB1N8B90kgJBB_<Y&=_i?dXIntmQMk"/$rWn&G>-r:i%*I4ba53iaPA&:@jkGUspPI/"r2NX+hcO\_M/F
%bR-Bb&`lIN8ss7[YUNUbA[I.p1IaRkU32!>bVdO&\b>?P4Oil>a>[PM!PE,,\W;[U:=a8"+nJU_\#TmHYR52VU.dV+6\iT-l%<-L
%2K%*)$D`<3oaq=pC2RiB@1&kXc:D5LKi8Wh>S@)+1l=hK>*rBV4@'UrEt"pQ2b6`hK-YYu+ID>:A<D5-cV7JurmTcrk:QiQg>np_
%]`qCmOa4P?[r1,jgG0uTYKU4&aR0\.kmW5[M"i1dL[R9h;:!qeWTYKFH()ClnG>M`%72uh.Gg3+$!/*:Q+,@=iLkca-E`cqZ%9WS
%V6&%PlGdR1)KP&]oS-+&?`[,8^.iQ*^c]paXe!%MEg#=%g3G%n3IcuYT+17L9EGbBDMX*4$$G99A-s:DcLe@R_'U^$n,Pg57r/QZ
%@W'<g]SS('h$eT5)F]ZcmKOI?0S^WQmH#fJ[o=n/4GJn=fcBXB%cV0!H_bYpN(H[a*BkUm]E&$O4:)QEE,rh>r[+-I9$8(MY40cR
%PF8b)72R@T@Q#IOT!n]DS,H*k-nJ)gLuP5;aHo+*q<!dLZ?fc<F%/SZ]0[%/%8m8Q@*O`u('l^4VN!*?U#%C<2CAqS?S3":!hFsr
%6ItI69Si;acI(IVkWoOr4H6[dO>l!"fpI_W*p"ofi54bO!q^Sff5s`*+gOiNRDZ+%kV0-[Zq/.F6TD:%k,.[uC=hshQ%R32)=glA
%X%ou6.A>6KAhN2),7d`eJ#!QJ?pa#:4>B%L(a5uJ,\._%o_N\VVka>a4:>^O4JoIh+\s($G'1QY)"8AJqV%'ufh=iZURRnk)Id./
%%)qs8^CFjM:9ci2<2oKQ):=@h%P]ntZH3m#?TDPgr@dT)`'!4?\%#lQnR&mD"Y)P88Rd=r*!VP39-"T-XXBft_j6!k,U18#JQFf;
%D/Ct0a!Cm)6X,X[0PJ>fh2p]O"TgWXQ<jbI"c0]6m#PNoKBPk2K:L<K5_Vg^4?H"p&@7"uMclU7Y/AK(#uLHoA^!mLQ.g,,m^FV3
%P7]edTQN'XZg4l-;%cpOb%tRf)jD=e&*VPo%I**iSFHN(<Damk2`)j*0<ei8:7ddTP92gOS#!>8a5K.,IPhC*"Jt0%=U&mXK\BRf
%$&tp98q5R9`'e.jDQ]biign\sbul7+m*1.5b=k/>8N;*`74WG!3Hc(e"J8aB=0I]i$83[AP)OM.7J8`^RnG\u6!]i^/I0GbCDIPQ
%WD#UEkC)VRk`'1@Gg>j[i0a4(ch7KM;-J-E+/lk/=W:Rh+uHo2.<Y:CdH6#'cP3&#jQgbbdfUJoq_01bl#K(U0&k!s/VY'`;L40-
%Yp(%fl,)rG;"T,@+YXE4FF]"jIEVe66Z%.$86=@"Nd]]<rd(^OH5\We/nPuq7"-'7!teUb""S3Q`gi0cf6<?;;_su+Wfe*W@/L/i
%,J7DhA\_]MD.;VR&B-ilAKPHYp3c&a2(9@DXO#cl1kJ3em&;4+#6lI!J09h+1H:-LSpgqhND!*Y65b>l8MCY0m3GB:EVF2>Hd/S3
%_:'bk5\<R*8Kg<EL@$SVflae$h"a?A1ul];Clr6H/F)<%9fo"sLWB_!]RAqj<nn:+:JG(WG3=b-IeF-p(QUKH5JR'<hgYLmk1q,^
%IWg-fpu\%f^\c:QO0<NnBpG*am8BK_(<5QL(#K0t3=6m%f32^PP/7p#_=OVhT'`LGFM]bb"(]Ij;J(C_ZY2oJ]]b.@[5A*/HiaH)
%khP?")+0*dg"_9PlRsZhEm2[[=jLkoIDiX-=^<'PRoT3*':6i#7+i7`'\H\"fA"fOGD4=;PmJWp,^"HNoGf9$i?3PCGoRrc:/Pp(
%ad%LE<KNX36OF3HQ7)hQ<Lj0uj]/e`<5)AOGA'4+)T5"2!T_9lR"p(R)DThd"HdA)N1T6cG[0dDUmhEC45Fo]Pnn:BP]mB7IH;T1
%5."#4_0&T!qfRk:[mf7>&m.&)mt^O-&f)O0/bZZ+/SH/,4iEYRctK._$/[X/(EC%hb1?3J_+QPG_9:i)_)6'\JXH<[i!-.KlJ<BC
%RqOp_ic-Uk5Y<\0pH`d9SBt>$R_2`WMPma5MD:hNJkq0g(_oL"8pA`9@!!FE/<'D%UuIJnKP,6T_m7:6D3-(!YG8@&4eb6KLota;
%/e`96+E?OPlVc'#.m4Cq/@,TAE#OLpiK)3a8#l4;<hh4d_T.O:VILFB#Op.25$75c?cN&M_)o<>m1L:Q$dolc^d@of0>ZfW/^.S)
%b5KK5\Od:R,MqMN:Qs,$+F'hr;6[g-L'8CZUF?i`,suAIVkAX8.m&UJD`S+#q1p=Le0tqcjg&*r*1/:YlRu>PA@0A;KM'9V[Wkmo
%ju*X=\qgsqF]8q2%d3Zo!Y""uBI2\]XL=R/4S7PX28D7fa[r>N``WLAi1#[U)pJcHB'N$Br0Wjgml"g4kSV<p0`VGTK'sAl&'u,5
%2p\DgO.2C1%"`60-4(V(TTDO#=S%"hNuGpo@C?eECF!j-H"W#*8aZo"Y#*];KJI>?E.m0gL\B&eOWU(d8?L`%Eh`F?nLCnqQVknF
%@Nr?\]@SMNjDe%6l_ij=YhS//_(25$CA7%a>)W/30dL2:BC5c^61?1P+)U;*=_)h'cXZSuZ!#&u=&9]9b6DGY15?'BQUHZ0AZ9mB
%eHl2kj=p_,G)YBGVkW/&2V6=d_qfPIB*1UKBi6(C"N.Z?0?eWRf8/n8%$Q`s#[[RR((=TGlhi)!Rp$TQJot;5<7'2nbf\%[\Q'>`
%n,37fN7UO@So9_sAAD]T_lTG%I+2>0SnL\E=O/rVNk#WodcF#-<kosoUV@^!%oedFrt#uWI)L+,AZ-cISjaUFVp"A!nf0-\q98_e
%*_.O,H7:)i"pr<R)1HP''/%$<"*q$F$qJU2U>dTL618Eh]1#]3Y"B=S;ljd:=e$@@-_khq'nrW?j05L(iZ20I$UmagLfMYc$K!Xd
%XUZeL<'LPJL[#p5fL!f:p+e;`o\obZi:l#i*6D$K4i3_Vm"O%0a6[Be9UP22kobnn7`B+5@%:_KQQNDA1(q7ZH-J*a+!m,q^j$]I
%7[7t6B+e,=Qif6aCY>)j8G</8#qi:mKa0s*UF_07fb%QCd?e#_mDEGSf0]HWEs.WI36M?"Z?7OrmPQ<bqe:[1;2i^>S@0+K'!6&o
%3h8B[i@\5O<0UakGY^^,o#:[1#$<ufeM/Q1)b24!5UC#;"Oa+1F`P/(Y=FG%&QlW<)"hN8gV=XQGO[A*L#k>$e,ufRiI4C<DE!5e
%#,SZA)$^Yt$n7!/@Clgi,-TVG418JYAl[Vm"9s`a[?6M[%>.%[ZT]7HCsJfsr*ZTLaX=!q6e4C!\gW;o^^!!$'bc+CVk0HF4h@GE
%Z#Hq@8HZXrXJgdk.!)ht`0.t%9WP00Pa$uWNA:c9HGL_+;Y2!MFJE:+WS>J01L@S=#g<C^jk@kWS.!R!3CF#,R$n&=8XS3r$2u&>
%#>s0<aU(QCorG*_^s.c_O>_]Y>UY7<9*XSk9QYUQbM6Y8jGLeuc(n%C!K&]T4,o]F`1:"'pEn5`5[f8G2^J--,@ie%U&]fSc)C+=
%?N;i^2TCK85Cn/h&$o/7-[0S?Lq9]gJ+1IoWUu)Ld8@hR+JOL\:dW:eaqTZ:.kt=+9o<U;4a4!Wo^(omf13\PcQOB5ZO`C+\COKO
%a<XhgnOPnq&MmP/c#r%GZ:;07'9"*,kSllUp+2eB?#(G1-/^nKr'dBIC>hmoMTKGqT#sWpT9?5V0[oObaC1</I1Q`Y8m>(t*L%o[
%.RWl"QcNQq,dWU>"iq<O]1N?*Om/!k.]>ldFQn%Y5&Nbu6]i)Wj\8XUiTXG,LZ[:&'!lhZMTb:S(d,@uWi)@aQ_ET5r[:7k@EIT;
%0prp<`u5%0PH:/XO;Z#?<2&;\4=<-5<f\I\r,P\<AZp[2iV$Os*[>;8DE`6=SABK:'tI?pB/NKXTo>%1<RfbtY/]OQTRf0?VL"Oi
%PTVH;iOR)Blq_-Ck:"QH?"_B!f's.O1m%.9Zt4;!(=_-P*ddTi'bHaFJRW59S$Rmh<[Ts#WSBT@YIFq&4lXODH-?kaDbTut_=Ko=
%`P<lU*6u4V7K5o*7&7)4h5\fl=nZ4%m`Cl/V6#o]XDSR\fIU>3gFnaJ>,1k+-?;IN9TFm1/rP?tpf360<JkETZPJCs+-@!m3IV-H
%E&$*qk`X(?-e7#A/1b#thEm`Ep\'nalfUc7#:9lu77ih/$NUAGG(G2%%LCmq#3r"jUn22M_*Nmt;4*V;=c_IY.S3icWX?b?8jj(g
%M9!IY8\A#GA-uTHS^$Kk\:0F4f/_p[OS#o=ln55c*>dJ/+!^k["3P_MI[]Mt_sul/Ma.ts3$.>Y<K`gKN_%nO5?F\J\qZF1k=7E2
%$<WrUC@TSHffM!V*4\i#.mkTn*cj_k=[J1'J6\^/;?d3uH^%.OYG7inFbu=6Ks3F2kpIK-/KfBDTIW!sp^pP`[*dl99$-%ZP)@F,
%"P;0_,0mD$WN'-cig[>DP@sY#bg50!5KInC`ed3Y5bP;poMp["7HK6X,#A"IHauTZK-TYT6YGn!VrS>MrcV9R?T"2H)tj/#Y@4F,
%,`)iYGPu@oS"kA!+=66Y9&mk?<iE'XT#_l7A'd?L=?Z"1Am_YU7]0>3V7+pQi'OP\jj5!J8]Y44Gs*E,,ck_404SSrWj65l@05fS
%eJLh\V^hS9_('ts*bC)DQg@h#`bJn]R_9kqI^YJ+#9,dZ[Kt!kQ[hA?!Z*#d^YrXTG!/W-p,78o-R#pa%1j@h&?$)!6!#i0?@otK
%?J1]9\3$f\"MX-5#@[tU'(E;+`C7EP0cSUao\:8f4(mNsnYHhh9TZ,me5=$oMsSV0GiTD2GLNpjee[]ie^>Wu87r&44%f9P8#GcW
%U>g1/_-(/\q#1g<8)cb1>TMp.l;quUX^6h*\0G:-IMrNS1q6=WYWr=%VT[u-k1De'FR]q684R2p3l,s&9$O9+L$K>J@PT*O3XBl^
%?05+^>*.dl\h^O\BOSSd7GQ@0&-UVVN3a<CKuIa83gHES9!Ic;@?Y3PWHIp2$BA2`7+Wi3X,];?dl'UQ58-Q.EB?]V_J;jI3$A>"
%^Xg(>Rg!D'4m?_BPUJXgAWM)mP#d0AB:OOi6r9#ea/V(3!m#R.kQUMoi?bAn'OLq0M&9KKaO<6Z&\s40bug1[kfI(.ECe&Z`)ol?
%248WG1DZ!b+W=cqB5@*:J]4Bt8BA_2ig9lpbtHu6T,"0E'c+`UkUZk$)_E0,gUJjoT>#EeoX$r(VNMB")>"7r`dkkG>Vk</SE4jj
%j40b]9);OppN[dt&tJW>/J+j8<\Glif<MAB`BqjJ3])TtH:c/%dCO-*pYb7D"Y='0<*_LUJ&D[fbR+!HS0":$i%O9oD'7"]C13W`
%!]QXL!a,RfDpl>L1^kD\+]SPi->AUZV2LUsmN?4Z*7"A&A;DlgAYLYuF.5VGC*3<Yi$*Ge(2#&uQ6*uOMMWJN.us$n;40N/j"RP)
%<9atU*RP.FidtWZ,G^rfW"%i*I?2o7diEsI/M:K:48k\boUmME`3S*TN0h,A<H%HIlWRID$Ns@FE;1$E98aT[nshQ^BTZM)_a3Tl
%+H":!b2[a%(/4o`d<icYEG5m]5"r^\%2d9I0OrY4#bZ/X)Vi+O]TD0$&=G#P1#P9%l6cJNMr,o^4)?@>APS-J&sA&+JNhYaXI!u*
%HC?TC:K3850JttH+qMd9AMlq?[0*"0eQ1!jUO^3_Y1?;;;Sh_.<a\n,!5nl=58eo"77CO;&64q:[sA)a_3'BY;H66t$FPQ'm5cFK
%AB-uEP+#_aQbtLpqS*Gi"L.Yp0#"nNT&4[1A@p'CK1O'RgoYk!dAbiAo>MG#,q+8B]01DF1Dn-HqVgbTH1g=Uf/N05s3oTgInrbu
%^\[I!a7&u(k:cYUlgJ2qqY9pAYO*L2:N'<!qt\c,rW@V_%t+;3LrZEtd;\`d3U[!10mcF#lo\VrOu!9q0mm"e=o^\9(B$3[j/I))
%5;&_gfs-U3dir^A$[iGq]]Rq1O($brP<87gCbWlu[^a@K671Wa_]IhTXUWci*)kD?U)rnMW<@=4iQb(]*&#HYDC:7\aK9P).=&3V
%+WQ2[>``BKl+;L.7eZR9jc4MCK$ckU,0WVe!N@:ZY@,CT.Ud]PkUhlB!HgM9LY1E+*DZ^S*(\*`'_IVkT]7K%W,@Z<4F+fG"!,:/
%>L5nA*>`'sG<j3i#8O2!iuBid5E.2=1#,$W#[<[+GX>;'/'9U3Eu?0XBG'h<;E_iU7QS=el3_N9";BJiNd3aZ^`/Kig59d,gCSKP
%^l@lk1/B:M`WZB%MLRo2,B#BUILBh!(j5tOfHM8);JQLqSfRjCiu0^>0;"mU_cFjM=2j9D=d1c_R)W7+]mP(TYIL+KD$;b&g'0e\
%'.sXHp3=SSUucR8W/m]I%lE;mONhrV`__L,K68a*V7Onf:r^]>-0\VZj2IQ2!G$"9$sb`AA)+^tD[0d2ZI5a8.Ct`0R/X2f0ui`c
%pCP?SL;i%:0Q(2FhuLdD[\0hmn;HV6OD)EG@ogKl%J4,:*L=\T]GSb$0JijCR!$7W&:n-27?T?M4"TU32;,btjuV`L`5F:rBl?*"
%@V3:cM9p$5#HdY^(4p&Y?Ig,4fIR[pTSq4rE6/<+Z.U**H#Jh'RjYcME3X"5&7HThR&`1dB05$\;;9UjKgDC&0R(185m;NqjC7Zh
%>T=5Y9I4>S];t/Ogu0#-GGGFZ0sE9t\`?o#-ql&4*j`AU"?[6R_g2[*ioWG)*F:IVQs9Yn$jQr`l@DupFqdHVmFNmeE?2(so)KPA
%V!]GAO"%UYUuDSo\s*\(9I;MIG+<"mVbiP#0Z?;6Kf'Vo`MEmg2c,Bi,G=BgMMnA`#"UHk*\^.fUDO7IfWeii;-_n[('qmXHcD6N
%Tbth&cpUsV6Gu>C&sOE/QjNDqG'IK[(!uT^ker/=)J]R*Se[q-BO^bh_*:"p@[7nX.?KCK53;B$/"bF@lu7e/Y?D9<@R/!d.T^"i
%#%7`!\jn&9aC#Xt0gue\&`tik9O\tp_Rj.Q3<<5!Lr>7S+QlON`7(L`d2a9JG/5&8`,L+!m+TjCTlUq^0KUstRT1pE(3/nV.A2Jm
%Q+>H6kpakZ`bV%;5f>)M5Q[*VL]Oiu^u<qPqN]^=73N.;N;t,6Qr!d+m!`3(o_5bf\9NU@+;!R)`;FgiiIY6^/59@H@9/&g'r@:O
%blhWWd3QTl0L3))_l1Y3KcJa_W,,OR0b4ltY_3_2/b!_!o@n8>d?YN$(i&=]1uT0k(a.;sFU$t^Nb<sJad7Nf<i^*MLCsLj<,;OE
%F4R)T76lJ'E!nU`JjCqiJMq>Q(Lb&[Cq.8ZW4LFmCD]omBF+\s$m=S5Lr$*(."^s@!=_EbJ[u^Y_iQS]SN+hIrf4hITaVaR49WYX
%6?Z2]"(Jd5MCOlS_D$e[Y#.sQ(rAN,KcsHn4h*1f1ubi&[P6,90g>_C)"9At%b`'6,6E`,40UEe/)-FPY41L6;s[nGR;"BL*E<qZ
%%h9gVnH9P6#k&e20L.0dmM_2(1`aqH7hc.3-n"a):`+J!GtK)RR#%B2F?EtOA*8[hS8`40apU&b,U[)0$0.IZp.3%\Mmj]t(h%4o
%.31o<BD'CW7MsOb,]%WZnLRprNXe1@IVt5$@0e+SO`I?CEJ3I_+:&M=K\T<6KT1<b3?eH3/;4ulf*cC`Su*1ni'EiZFRW\*%`>S]
%#7l]im\,8aBt#WDEpt2:MnfcC./nCg_-">-p'T/SjDSKNl(Gj+c%R0K0S"YXDKNhT6,ea&0XqFjBoa'h.,M1M\7!ee9cY`DGp_Kf
%iC-]\K,RS&4=R0C.C^gtF:T(u84I`l?rZg8GRKns38U>3#;JJqS%Jh5rsSa)f^)gu?ket0$RAJunY#Y<o==_f(*>Ml!=t,5-eu2+
%"$=]n^k!FLfi,oq#20%kRXbS`BM`L<Y.9l^(Fl)/Ob^egnULfbR-'_#*Z>me<ERh4%K$Sr<p6q$%QptOGg(MR?rY'"d3Z#JTnha+
%6Nbdp?-43+(m'o2B6%Bfiu?.\NXJO=4J0CjgMFif#dc@[O"eQcW5+K5FKOn+J^L;n>b]5G+?HuP!iVh'FFB[0!Xl/I>VUd7a6X1)
%@(:,qh'3!=9+=:R!!Gbl&$'f+#7P<'(m"%AJ?e#T]d_<Y!Q;c_W@/C2,:_k>(3&hM]Gq9G<Sp2':`]UsTt0TAJ<NLZ!XBS$DP8k3
%$>P^XBSup#`=95cJHCe5<^sRRkX^tlHY8*7*5m@-7NP4)@tt%rY7S?WP7*GY.'QDG!$bPG_D1P0nTR<^D=N+^qq(uL2g_*BT`62<
%J2pSu,!827,9Gjs^AnjZ"<S3rOM]NA[`H51:EY2ip_OPRLs^e<>Mr,h`EV8-.f4K;1@i*Zrf,qYn8B[8n8H.k0t!&=H`H52H8%J0
%%Xtk*rRF@b[DW!(P8BF*gg;=#1aU=]E.>pp_<$^SMt7c=#i&d'VP]>6G.>:41Vl2hHU1M.-?+H)(.ca8"SW^8)B=_/b1Yrb_#BM6
%k3QK*`uH5W!W+D&<_#n`KSHHIaLU$@rXoND8Oe=1`Kc=B"RIe(CmTZ-?ISC/(':STro0:0nKmHUr.S"N*U9iDI]'iQrpg5\_\B&a
%r6skCaX^1iWa8.3W5":C%Ag2*^Dn@'dN.U+6</o"3U/9o8cb/Ar=o\o"LghuAVc?qXUb2#TNO=4*;#T0#LH&R"9$1PP`$QT^M&cs
%FTM?^S'p!%6iA$(+:AD=0@R:a<?%mOUlab`YeRhMBkn4U9+"T/"83NF<c@>5Iu0NX4@%D'pdJ?ZeT$*'?Y%)o$iA+<S`Z3trmH4j
%@%>Qe<]mX1L\hITMX4JRYcNCBact1<rPe28g+.(LqV+UVgcFRN:KtsKq262sQ=:6s$\&]m3:MC]p/2of6iQ(F'Xla^rjLs[*f.RJ
%oLsu>r'a^sFI`:EmhahOU4W^-DtVVL%eg>4U$6c7^GU9l?@`!++@nuBqMj.L*pOPQlt'=NId*KJ^29T+ni`+V&+n'>As.'TrGi1E
%qt.7V>aG,*#P?bQS*;?9n:]2ojs[u(L=X!@q#r>XS!P0Kgjm+@L\N1^ktq'Z^Z47&D1V1Lk</Pi,1]j:"_5)spn_4?>'<1/ZKLJ[
%G)0LK(B1Ulpn\pZaW9?,a&!WUiKj[;#$qmj'`ojX8,-)CVPT=Bb:!is)g2M%BJjq)5knoa&Jjq&pr/^.3d$AMbP`mJQO&CS8:8]&
%L\PGqY\nE<nOk?tGfTSj&NTdFJaj*LUDH"N?VghCGh*"&ZrdLO0+$EsDN"&.lqM$S"NE+hG:E)k/,oVu#$<C!+MZ(^[-%V602H(d
%W.Y#.!DTr=q$!%'NPP@LZqnO9NeB]uH^%kKR3`_!^Ed2u&!UE6\E2$Pjqk=.pr*a7X,RtM*&,-`W`+Z>@"(D<d1A"H+:sb`@"([T
%V>D%l=&eLC!;bf:=Fo^%^EBc?AI%kN9e>cL!VEG8&4AQ,QhnGL_%,[1];a&c"8u[R+ti-]oS]g=m+As$cnBIRL%h\hO3*NN*Trd0
%AFD+q0<#:8$#5eEj&p@)BcBtNs6j?EPp2e6mpIaS[rm9D&2:j^qg/S>9*J/`e8]rb;=7"pS6o5&ka*=80?D<3$CkI"I/.fQ?W-)0
%f\uagIK'V/q;o;G1`8!^aSTo#Mr7X'?bE>EZ%2Z3C9;`c"6)TM@\dsuo?6JOjL,380.p48?blT61P>n9KD@s)^;CaKbV*'l$'#&X
%3u6^CF:[ud18,7P9!*ik;COR8o1S29O>C+.?W*lh"jF.uh@(i]pXK2%8H:J,-lmcUq%^D-.NR[gEgO>dNq4bZB_*;.QW,ANJb+f3
%1I4*AIR2nt[DVfO#ep_Y5Ti+?,L-P>Y6`=Ya8*^G(uYsp?d99mGuF%Hg>RR#CVh)YIAf[CP[DF%e(>gk+e\+jpHZJ)DBA!e&KjG3
%FE<i,)7!nrH^%kK#D_?A3en:g@Jh>:(g?&;ig77ib)K(rhX&m%ILZkB1@F[\\`L*u$A<P,*21u8Ha1&!=i#Q`r]&Vtdu`i#2(u1^
%j*6LLgM)]8>CCW(b[05[Z:\hhm(7KoF[&H:dfJe#LKdU4+??7$24f(,%d@1&IVf+6X-_WITPki5;W?p@eIcJ<E5'l'T``RVpI4j0
%d!Y.%2Vs#\0#"qp@/2FH!ut.O^gJ9ai>0P%Yc^pm5e]?%ViKdFB/]t3%`T;Q0R]VhiYWXK+MR?$'BOFri<t]k&l]O^IIMe4)AWmu
%oSKJcO5N+32A#r'R")n%%KPB42La<<pB$XrDRm[Z@RhYrncHLK:.d+jK(kETQt(lVE=F\/"1f:^8js]Roh8';Nodfni*HOfa(9;H
%?=8dFWU+&?RIZ/S?:XBO\6+(t$M9"VKtQb,Hb&Yu$ZH:&Mu%u3BQ-K.76;,?_VG:eZ8'-OF1gA_D8q+l,m50-TXJOI/9ZYjEj/l9
%`.?5SX*;8!#-,.N?0XtoZ(^s>VmbXX!oAS/+5b@p99mE`f%:(9$dsr<1_l#H8PMZU5kI+5fFFR@clYOBPJG0]eCVM!%02M24E#?n
%i.0uZE^*4-*1[mj_iWk>E8DpKEl[<rl,nuI]QcJt\&c4Qk.nXFb97YgRLr>Nr"bR,3S7)Wo"pu>quOj8@VWCG#?sK>5ul@?*+I,Y
%.4Zf"%2DCfh<\\[bUJj!KFWT]Yp=9qJ[=AFVUTKLH*P^n1^>E^PgM$!7i#**O3d8;H!t\9=;[.4Ct#&`I%RU<)PeB!0D,^cE'Wtd
%[1Jk5-\D.0_`LEGY$D/U0*hu;"XG`-/GJ!fnkqndiuO;L0GN;$c67K%.4I2]J,(leo$UA?WNh*:-'_>WLZF`t/h\5rQVKR#oPYmu
%l#M?p'9Kj0c/@smakIda@>Dp^2lG=NLqMQNN'^Qif4Z)j&:(Z2VN`'E,'s4Ge6Rj9oS.)C3HX2?5i`C3>laH$l4L/Q!V4Zc"ni?i
%?9/m1[07[+SKeQ?DZP-q<p>.Ij@;nK!9@F0^"<DWDQ325\SE>gGmTU1Q9?9B1[HImQ3H)19]WR&4PgeWA;eLOX@Fi*J]B8l[Sf1.
%01M*OdghETodMRf"-=<F<lC,!m;LIf.6B@m,ZQiG3+X2]fq]IF:Q4?R'Q(+"kt>I0M1b=JP?*$GO32?5'M^_@?4i#.XRnp;8"aNm
%VO;ffc7Km:S:Rbpn`$Mk2JWsE0>1J%gr&[!cNE2Rd!2UL[fGH"iCI^1/7&SAEZj58"uMF[e"W;=*=OT7=V[E"b?MW^2F)L'T,'Ks
%?KB]M?qQH8`UQS'JTlsAe[>IjMf7>`pq+`/ot&F"nDFjsIZ(puSN%a0"+5<IIQ<?-I$`caD;Jdk!oJhG-'#YH!2ul]%_YM#W+?LP
%43*@"_VLdIc3_kRfjft&b['A*#`+h`I;D`C<;!FXXGXf:G)3cc\JjEf#M`m=qH,i9mc6rG41JRn!jnf!m:,ZXA<[5L/l4r/3W[uh
%*K'&a@-tfRQtu"a]/W9cq@73Uq(LO4^k$[>4474mc7X'EV`i*RMF.tJ%?0+pg<pJ8M_#hn^$kH56!VRfiH:9r;p*NcEfo/[Rq;o.
%>Neaq*F$!d\'`GXf'p6UejUH>;q)icK??976\j2\71I_R\#?k<m,6_Q%]W`\>N!<H75YWqUj%p3+Ms<XOLe8h7qHoM0S"&H"k5uH
%4*#Zg:UbR#A)o$>:EaNNS/(r+n(ZRGd<&e<JStWa(DX?6B'caDS!unKV;$B-VEiQu[PH8'[Rdu#KS@$%J96o[%=:9XFHM"]0AdO7
%2tF<X7CThn4@"".*"V<W\r6mP"Tq.O*;>#X><Rak#GI(07@LIkU"^P\0bAGrqi>q$\d1bZ7;NGU[b&&[(2cXfg&^E#MMWDT\g*>3
%;sOFpoV!We^l"f.:"&!3$j9ieqfMT:K'jJ&:2CMaf:1#^bi^`9+EUbj!2&Qe6C/5lFLaAa/n;6CK&%Sl'e5fP4bPF&2"'Y6X<iC%
%;p&_$e=C'X]#269Li.:;_]D1S`FeY#TF5+FFuLc`'!1u*,O2H-2pH@%3dbg\Z,;p'kMeN,EH^9NXP03*%jZ=9o?uG[`0F9HQ-0n&
%=#CR9D,/$X?&\.TG4$8Ug4JKcJTjONKn?Op\/XQE^j?)gZNJ">^G&Ra(O$#5/3r"Y)&2;f]aM6c;BY/&/?"P0*BKN$U&jYSF*Rp9
%8O2J0]qJ1^FDa>"60H[U9Xk1[c;c03D&k[(TsRBn[Mp3Z_2Zlnc345O<#n#d]!<Gu2mnuKZCiTME\;b>g__m=MK(ru;"':3b=:Tm
%"6Y]L.msC#Z<dPUFpFO1.]7S7O248E"6WS+@<V$gF/^)c-?kU+mttl<k(:D"m=97lR%iu.SBKt$=H\6*99E*#*]TL0.QT24F2?d>
%4p*cG_9Uj0^q%DH_!hSJY(H+Vm*N;!%'WZSd('9N@8VYEkCPr40VEJ%;(2#W3gZf]n3R;#/dYZW\\mKZLp@9277^2p?6U6DA8qcl
%0$YkOM8',T+t8-c`;n1pj:@4Y6sO9ij:.3Ra"F@nkPZrF);H^XEH;_<+f"CCF$X@o:T?H@Q`,B=E%[kQF?Jr@Es_^JRl,_;6(f_a
%J9+;4^9Rjd,nSKMO1!CVLl;I*_1?ZQ*K,?S^pt]=ZDZK/F&<B/\\b%7"1SY"S=(>S>QrN0gjsP"mNSc!4""Tp=k`u?JuZjOE:0*O
%QQS;-/d\cOG/1Y]1=%S'F*S[N_1?ZQkL&6r<tle<gsL'-pgk:OVS*1UDC=eTF'#AokMl4-D$2?VaQ2TUpY`RfjjIem:J5U("F0?,
%fRi:0C4PK-JWLZ*\\Xasm+cTL4)?O-XC289Cb>g)g;m[H'I9qTS(!$[1_&S@T]S!TQK>ne$TlH%P6R\YIN,FO8'U.&Tj[:rF,;<"
%kngS7N"0UKeM,aA(R8iFF,A1%E0VP^/m(aQ)?H>NWTA-emHu,2Pm>@S`?>fr"#h#!l9m_h>Yph+)o0!0q"D,<TE9[ap+:59],M*M
%"6VH')t$F7!dXKV[WfNt(i&lI!]ZMh#`H-P<A%5@3lN+Y/lNXNJF#/4P61i0jBSo2\,P)+kCQrJoh[t_p./O\c6\27nJuX&mmoR`
%5gErX+62C4S-t4[fN-p8C8;9[3cH]o<W^/AE%]W!#Qh42cL&O[SBI1tq2Vm%8G!_GhfcfG+H*iO3#;]e<',%O:D#)B(-%XkN`6#A
%$@/a7PcjL,P/Q9"3L<<f$j-`T/i$F[OVL'd0kusHd(+6*Zg.]SQdqeRS8q;.c2bTU(-7ctcaXTl?qphA@jgV^F'#A/)0'R-h`t6K
%`htlnT0`?e<>Mi$2Q4/9a<*KW/sL`eBn;Z[G;6bd4362[5)bMh4"Gfn"6NXLs6oJuNOT67=1j,)%n:+M/[r_HQ!:It=G-5=RY>lb
%JX#KbX*^XI'M5#I_QthuK8L4HHkWKTE9@]Y(Koib-ub\]\CFD\*!!?2!(OiJ%ODoZUoO_k/pr1:m1?h,+@*'U%NuW+ka?cf$6U/*
%NLN6A+;`(s/DK.D&o$"\7_n%.`u`><]lcjdVOb!.Eaof<q8V+iEV9H[0674^?m@;u"re?b6eHQedPf"ZJQb,?`m$=6=l5t56IeW2
%1E7*q47NcjA)[PtE#S!J,]:oM=6PIM89bBr6*C=j!WK&]+>0Su70XecmXoWTNea+12PAmDiF_F@O9C;ra=O@,Jn#>o2beB)Kfa8i
%[#Tf4(L,''#T(KF5n17^\F=]9.gdooCpZGX/-*'OJN,5#&4-qZg(=n+\>U"(`Ea732Efjsi1anK,Nnj2KM$c#j7'P!b5dH;d;P-j
%PIOPQC?:Sb!Cp7"ha3al%e<iF0Xt=)@<:L6PehOmgVlf-GG)DNc&5&\A8r0>5eP&n7/#7WhBFO!WAIRCRb4?U?39R2=_(*SYUeK\
%?BNmONcp=5i%/mj-sW"3p**b$>kmsp?HEHR,Nr(n8@OQEf<PXm"VI1ti7pdRFhlcfi/]JQ[OAW?aWaM$jL,lC3lZ%1.de=s/J8SX
%cnC[_JA%Do'F;2;p-Rj.!,`+b0t**\b:Pi<s5M$7N_?L$FB];RYT2T05j1I]9jl`88Y]eOG-)`jCEs2hZ7T%Y<-&;Q70V=c!c,uD
%#c(BYW\'<.0T-q#(;57*clJu8L^5mAUb+8TiN*PX>Mt#bbIC'L%>^GQ[)FaB?6%<-LId]_iRsquTW89eD4WmJ_I6VE8jVFL"g^YB
%'C4OT7tPe[8KGqh2-$$"4!\$242=S*`83/icOV""6qZWRO(+#l-KKNHf]!`-/-04<@hdP]0Po46>3uf.4#mBL_7!2<S,h1cY2Ua<
%Nk[bUh[]Eb0J8P3[ck+gU`gRTDHJn:06QVbGatGTmBCB6+7m!/f1mkc?'/nGb\B9AXt>5=lF=6sYG_q8$`9<24_eiqrp+&!Xf^[H
%'seZk-=;$+=UV;;_VI:_/Y&#U:WqRfB+MCfct\j1e%oc8cd-U4g>qp'H`UC\1;J'TW*2uLm7=Y'2)kc>jjopMMGpQuV5)Po+gWJ<
%.(/Pd[gbk[pm)jc3(>JuI.@S3D3g1q#dqe+mJs1sm;n]hppA-@R$Wh.$eqFi^LMiDU'tcR:Vg`K4rW(\KtDhp!DSJ0OTgn0B\EKS
%7)[MnBNdADIFE(F[gXekQMS.$e&$GbXR@'HrSo$4b41P\.E5_$pP)A\K\g.d,$P(!'[X4<<#*K]#b_8ZC^3WA_]B.ci6n>d*6N*5
%dMB#NgnE._5W.YY3d*i"`6c\=E4kD\X6icI@$q(Y(3)rWJHd5KEEVF<O%3EeTJN+dJ>@cb%%(25W-FPC"f&2p+BX4$di2JC6dYu5
%a0W`c,[(baBESrbo*lBRL_d4c&=bg%>'S>$6j*oMb(/\7)uD6YFDC5/BPUTW=+JXu[l"7nG4B8+%Y>H+]V_tD&n_IrSEpNgEP)CH
%%:\8A/rl/7\?_"p_sG`_OYf\NMA,;(jX%-DqsbGJ2McoH]=?TFJ7fZ'U=eGM,&MK9(p+dj7=%S!c7Y^Q]*"U0Ho'fuS6\6'-P0n+
%l<+q*?=n_rEdLXgS?7gr*dG$4e-fs?N]7F8?.SF@FE-ePOAad<Bi:,F%W8^9OADOo<o7gEct9?I+MIrIX_oRLeng<s:5>9t\EjuF
%2DC9qBXUt!$7Kk*X(QnJ@:lPF8-<G3A_$SZa=KSnPPil[`[lrqGDKC.<)Z;S7?%eSa:;UdXZOYP!D3(CAI`rfQFWfs8!aB%'AQ7^
%0&+$bY@Gb]2gp1F'jA%,<+Z-R+pt'-:WJ_h>I^6q%TYLWK0-(ag;Hn2!0p";%>tpETX&N&&pHIC^JpI1OL"18[YV4H6CJB4>8?9,
%o[oQ$4#C(cE=/gKBX0MT+b:6;9TB7b_ib1n$=O-kMI94aJRk/j]sJFm=TF?go=2ZY&o"/k'h*<9N0,-:m,EAJG77W1.3s"W#[&AX
%MJn7m42\tKN%9K2XB%Y)#)$e?Cb]I%U-N7%LVN'jVFufjYUtMZ1Mh<)gCgHfR7E$o-b`Cjg<1O((:j*LNpX6IaZ"u"FSo7.0ZdU`
%CBtRsVD7tmGkW+iLlPF9!_];4i3@g\6uGf@N^\&LB]0FA]**TQ%QY@+9l@f0aK`+Q(7g-t>,"r-U!31o&(F*\mfDRX9hF#>*B+a7
%M]?bAf[pMU`A+JX%RNo/!_uT(at3:"QWD`UOoD]&N$T`>b8iA3<1CGoiqh)!OKm,aN90b<N;Z'+RQ1#Ji9Y\-,@Lgi`V>Z_%SB[(
%0Zg`ffj>fW$J\=VB8P9^6Th*cF9>^P9$NhQ0Y3D,-qutV?A`p";4^#(4btoHPK?\[R1m(:):DG&q%Ph%-^mCfO]!2**nKK98dB[/
%CH?ZYT<'S+ejsPb!I$0i2eD4u*ruYB0edT:1-?=&A9B3UHQ:C'@@m=%&rE9ckRmq]=7.ZCRb-Qe*,LbM-?j@K8WKRNGi:)"";>0&
%Qs1_bP/khDKt@dA(O.@WdCpn\H*MB*D0cKnGjW*s']6BigBPQq7e<OT?'4_D?U(Pf[?#:lM#r3*U61>s'G1UQgnjt0h-12tQMWqn
%CHWL.ZA5$+XfO<)kj5fqf^5+=Z.tFtegmtg]'Z>RRt0pm*:K4BeNfu6"Y@](oQ2!R);22,-4K68<^,G:1X_&@#@(^K-uR*3arFu4
%g-dLXOTN84TVEGtJ<-0X<Ef=C*iFqM(N'sPAaMHSKPNBu<'aY?WaaV.\D(dAH=;^<VI=MD@+JbI$$eb?8qGHqs+8I6"Ah]$\M5Oa
%YW,XNa<Qs-Fn`fl96G+&?K,4Iqisj>9G)gVKmjb#JjD%dkb9%?#I\tbO>eodret"16f8I.#=-Ps!fENk2u,$^Up/Yb2n-d`M\9Z?
%Cu)U.\*k2hksJ\o3OY$-`3e[CYnfo6(7b`L0G4_Va_+&)egiQV5"hqIJVQJt4H4(EX\qUPeagt#@R4%l+&Q]s`T218GUHOh0r$-d
%Q#0pCpYb-Bgo=<M8O-#um<l(LY%?A(,dY&cH0*s(Z4LN$0Z:N8,LA7QCQEOkn8iQTF_8iNEd@1CD;p(YE+:sRCeVG=.T3cF39.k5
%S<VM[7ZA#4&R/`n2%.J5&/P8F=o1@&`spP#i(BPB*L)W&bKYTG&p8++aV/HIRV!m,K5kNLB]tfiHT3!l(Ca+#3[8X.rAp2Xa*!D<
%d-pm,$k'Bu36*`"I01%f'q*>lbNTVWWD*BtJ'64]$&b58=[:bUUMg?-G9"XAC]_4sl6/KU\[gZ#7.EP_Wmq[6DV3g"%HG\KaIoIV
%ju0>459cN3)l2%?Rfa?aqE_+7%O)LC/1sX,9S.(96BAp2,$6Z%LDdoUj8g^)JuC<H!*I57=?M&R;T)2tQf7ssr)\go[7%&8"IZMG
%@^4riD87nor0c6eRn:_Mm7)LO0\f)$A'`#Nk+1^uj9!f;A9"I117O[!,F**o0sM02GNHY(X1P@H[tO+41dX2+_3SIMF#"=2H.L=i
%#60c'9O:9,"7S0tETSH14u[s^&NY(9NJ'(o<cf\<!7s&8\7jgb3sIu2_k8,Y`Vfg?5QscJ2VOP,IGhoYWW7`W8)P!#<[WUJ'4AV_
%@LdXr_$DH!"tca'2?FA6nMak;gdq0B]I@S,`'gB<RS9=Kc7VCbL?^&U9WJtdJ(+'cJX&sD7re71F(CG9lmTJE=]`)5-Rr'fi&8j8
%R!F^OIcgu]JdbJ\E=Mt"\-(-P+@tBY?N*ul),]-T1/T,Y@=9,W5cCr=64Gp_?nX-lMH?8+UUKA!fT$j8h!(#,JdmaT7>bke`V435
%-c0Z"/;qVi`F9o_i\cssCRBX:SqUTB@DSL4#Wg:kiKA+e`_+CD"o7Hn*h6)i0#tes!u,EA)(>u=Bj^!/VRboNh!1-9QH:M;I4lV2
%"+cM7TF(KiW5JaGa8Q?UEQe]o5]OTi%AaE/YA;U=!PsHKl;M/!E7j(^2r`&q`ta\0C/9&C@t,E`qqej->4u63-JpG6l5Y-^QhHid
%\g&'IY^4?e/"+T_$>Y*8--)'N!;AY+coSCs[T$[]C/m"o\&=Qi8tKk0Gg(@H>aiu=d;;cpM(_k?0&46Bqj1=92Z6Oe#!q2Q4[V*!
%g]49fmoO?8#"i#MLF)X(RR;0#>3cgU/O29lNLN)rFV@6"TROsuPI?qm)A"gYTtKI3X`!_=d(0,'5m`H[8=6fj\?Ob/Y?Rf$1$Y+4
%?Ho<Z5%]T*`tl<]F$hdMJ[..g1_?pRDr'!O]@]rX\gq)$b4e2>*+$c50f[S4Gr(GR4j7dZ9odmkZ8<%,jHR=7k!Y@"!]0_NAR)H"
%XZZ%a,*[(%,`;D8^eXEUfVGJ4H6RN/jC5Y&57W)XgT?Lj1Y]ptI"&n/7@f(!UVpqW(5/o2qCG/7$^p9JX$KjWn9UOjP=t3rgge:4
%=T`p!1C=GN_ph,9\WN_qGt8AXG`o2eQ\NN$,T>![iu8(dK"sFh.n.8rZoHUL9L[.q4)jor^4A&;Oi(Db\7C1?Fbs*"_[XbDJm990
%:KbQ]0`X?hYeoL$`CPDQkukX[l+A96SZD5iZV[;W\]ZXs?"Pj;5tQZ#6tU0t>L=m&E1)/d-[Q"?4h^K??n[7SdX("iUf3fR6dJt4
%S-=d:4UWG,%7M-hIUu?66ZNjBOH73DVsW9M(K`B<3daU;V:'%LB'nukbZ1*#h^2%mQ0>W]63qht+1lE6+0R2@NCcm4#L)`BAQloq
%<6W>92;^)\gN-kt(>hkU[L5QHQ%B!AUS?&HrMfo*ha+D*GUo:nS@?9FT),mF.;I=n)5jH7I5dWhdt9M%S2c$D?@=`!UJ/e+.s:di
%fmC%H]9Om@qqcl'6f&O8!_P@\B%4AsAQQd/oRJu&?Q3Z8%an5rT.Hn)V_r^t?f1a/f+>b<,jM_s*5&o;[^<tI1.XmQ)P8<4.Z))B
%U-E4W+b,rok:_c5Y3!2cFX\UOT,UBlRF6k_dU>S=bF!$1BWj`1U[*8<DMI@lMah!JcSof&DRM6M>/4UteB=N<n0hls>Sa*o/`CS>
%?N17K206jd$V<5\\Ag8BLf7k5,tZN.3LB&&iD5%^VcZ,hm;L-cE=JYSG]uB,ci'b>1BA5P"O3`L&p6]j%[22A+i2p^oj0WXdK2I&
%dQ<X;3$To@il4<]1>rV(Mb/G,Ot:\-FQO9aC)1i)m^rS)LgM.?9,+%g0Z9=YMKK1;KcACUoO!K,_h)q\OsJUYOi[7BZ4Wrec@)>[
%]eei^Bs\/2cr(\]4%.=(Tg^(c`^,&e8gbn37:8'A;:>:i93NM46.mnji0KqAk0q5$j<l6M<52F`]Yn,^s"nH@n/0oD,`,LBkBOm$
%(tM'U_J>$"1W4L:%Fc0PMo;R6A5nXp`2:?Z`2k803.r6\R/^=JH80-n9$Guo.C']n^6ZZ,6QI>IFne]TXhl!ml3'$k''I?r:9oC9
%_"pP.Z988Fl&"0mOr=#,6BJrPVWhdRJH(]:NlZT?>T4bEO9%)9To*hDQjQ&/pD4\pJ7OWEJhk8A/Q*`.R;mq]->dbK]?$<4$*dkh
%3""YGRRHluJO9\U_;_e,K6Ml>MU:N(48r;3@NuUESt\h?1l#6cX+_AO#ZHl1!XJ#@%B>U<2%2jL2bJS!"b1dilj=D'"b]Pur*^mH
%*9D?1C$<G4QCed=cC513EQ4@\8:g-J]ZS@7a[j@>[u%?QCh.!4r,GRqJOQlbGuhbe6*Oro3Ik(Vee#$42N,/Id:NV.JH.(U6INdH
%+Vdh0l#5X^@!Y-`cN';"_6c`aKe,"<(=OLD@kW/qMgfRIXu@dZa4$o,hS"b(Xk:fe*.W"B')t^f=!G'cJnE_#KWJR7FG8]`#n+.c
%*8`+h]N8&m`]S^l">370.HGKi-%\O0pPUB-:uYb%io2ML,eYTC*oU@d<\ctM._b%WR>Gm#<srTDEgAkikrT'Z$G!G.0[&-F>da<k
%#guBP6:=](:RQ#H8@Y9:I>Nb.B[t3ZfLTC:g.8$2:1pYCBTQo79/HPiWM;m!_(N8kTRlVEZA9A<:neiqS$aZl<bE:!*^GipZGRqp
%B@J:tFbuZ7QR'j`3_>&BOrk%ChdJZVb@$/d<Fk&]A)f+(gG3A!`/UIA<GGic0(GpEg`%)ebH(OrqDZ@D*r%pb,0C._9\(=&(*.iK
%?%Z-gZ*]`4Pq'g.(]7fg$nPPs\JB?9$B&d)T[\'jr6Xped']q0i5h4?R+I8KLD6CdNfPY,YD_Bta`.]i=.X2EEZgq,Oc:%+W00-b
%1=G1WX9<"=$C)M71009N>0oQ.OZidA7_:QNmcr%d%#l!YCY+7^%k3G6P_tDP#t5:pGZCNaBIVnH2(=cRQX/11"6b^d5V`uT=)0^'
%eF#`;#.'h>%#GF,q)KGo8<YD,TNac(V!G8@]Xig$(0Bb1P,.Ds^=+\PaDh,V>DV@?2t[]j-6$-N.upi2;VnPNaRSW!Gm>XPE&+Q0
%TYqM#+Vmd`Pmj8*A9<6aIROH_OD\-JhaTqYdGEu,<(&-EX#BjP[1S>66+Pob>>ZMT64:bc-NU/4,SS`pE*k#U,H=fHLp5"\aQ-*f
%$:k[uTE+PG--D,!Vb:Vn*(DK<%KbE;]o\=d;'*)3+RYlBW&D%UMg*/n)!W["qW4fY?PNY\_6S'1&B(AX;p>1O[]3#]Y2MJ_,I=%9
%1h$;])Y\?i!C^po[WGpo5uNC[eYQ5KJ#[dg&8O?^9n_Le`^P^^@_5&:/a*Mc;51!dpFj$[W'4X060KRpj',qm`mId]q)K-^KAWVs
%+gtf;5cIqf!6JJb&B.#\GVhU!Sdb4@iH4=:U=i,&N2m_J%j57/HW!mm`7j6>lV>HB(LC:q*L1i$m=Jpa<>r%!lu5ASRLgrREfdnC
%d7dOk<XJ1.Hu^78OH;0c*ig3'=JV.Go0CG<@-Y/T<p91pA*.b\O[SuCWDELlalbpc'#1rVCeF*t\]I9!<lANV?m!I-P97MTYqT;F
%[>6o%9a)]&N:^kb+l`ND>dPt<P.I(eD$essDAYZ2hb>'_5f*tkLU>XQ0:/Ud"tVUiL*?*<.ZOX(,]6^3@gPBMQ;^A`1V?XV?V@s6
%Ze&S\B<BBTogcX2M$oqQhSP?t;aI+28-Zh#6jl:!0]Mie^m=?gTnQC-OI=[a,,)dm\e*n?&5*ob:q+Y%,bSc^M#[jDWoV;*`59-i
%>&GJa\<P$bN2!TV].WYDoqt6br/b5\%i<X-lJ`W[g01RIDk.ng?$W%%^g;[4K9VVE4<tYl#o&n[k>GmS@b]o]a(kMf,s+K0h'UOi
%X+7VB^o1#sCt5+0Tj-BI$U^F1!L5M(_L!Nb$QGs&(!8Q@WBJOA4\m6Z_T#tS@*j:$B3FK*M[<jIMnAhnR-qW0EU<25'S;oMiZ@qR
%9A0QgN.rM`:O`ae,8[3gX:bnnF.3abEFg9L,&N4][mLHns&tK']E3h@OA4d=/P$P]T+8%XA][g]2`idPYXo":pWWJ$Vm<T[ZlCH5
%?bfMUqBSZbamD\<'[Du7;M@T9oLU2O`YK#BiYHOcd;?QL)BL#FdY:mMko3C".$n1lSAOb"K;VF.!'[)6qJ9<a"U'5K_GKm!C$=3^
%Q7ebTn^Bdek+?B%"%:F8*[_gA30scd(FdaaA.GbC;/P9"'2KPDG1/gU'ue#$AtoB#FDuQT?jO\sT\=jZTK\i(-J@$SfS4jiU2iQD
%!$7Zm>X9K@fmE)gp/CmUeTr2XeA<jQP%7r'I_>9__Xr5`@4Bs,a!P/GK\WM^KR$-DM%#XmXt"jFJfGUba@b;=F'GHeDFekH;;1P"
%YT)[N1aroD$4i>-Lu^$q*Rc>@8KsOdO?%ml`C&i)d]pLCJ!h"\.nq"0Z8P$Hj5;=Ti"!\8Hm(k($JH&=0hq>n&?K0d/-**0HdkjN
%Y">Y[1"4\9bYT(Z/^1e6&[0aI@Aac:#CLhgm&,89K661;9V(+SLFSll\&G/JP.D)G:j@Z%s+Q+u%?JV0cB`S=Ni$,K6:*J4eM/r.
%ng#F+EV;b<4k7cuP([14[lcTPk,Ya9#$aOH2%8MU11nh#[KoNh:Rf(0Aip:bR=T":X=69N?%)4tN$I;aX%EHl/O>R!`,kB.2"XAf
%;3H<2'QeK0(M:TS9m:/l68!`7`EIU>f([MMJFJ(E1%Mn:p=rZU01]QLLQg@/[^%c`#/q3,Y*o>\a(M?>;3]SLanWVBgsVIH0;QlG
%9H]=<%AZ'%nVP@8"/\i#?JJK^PH%??PNWc@0_a]<Q#<:,j(_=mjhs,i-iCg_hShX^=XeK)l[d=?iF5h%4%S?L9\D\5ZB0$b!!>eu
%-9nN+,-mFpLpAR&5S*of(4/k5#@TF^0ilc'XUVUaYaR_m"YiJ`1`fa,+4fs>WHa]!M\64QOC:Ld/S_DXjP6OhIO^SMUeWNh)7-^X
%8^XS@>dF:3,(F`(]3A0,OSQg_9S%CV!GKgha$O7F><PmfIR\pV(:BD:Q,ei-7PU4'`+-H=iG;!WTZ"U>)C)Jh\[2o&Y_]WB(6g(/
%fh9<(Zq1!+HRWr`8Imjf89bEl2q$+*anmDN_aP5bKDM\fXd3eb79=k-RN%hl!L>7_a\$at/!hEqief)qQ%:diKSu4AO@oDlY!@%j
%%7sOa`B*3s4!WEP]2_3ElS5bI8H;<8=BS6<[+W`DCBj@XRYWK#c,a)5qQ(Q8A`Y%@*,-(/r/tid]TXU`)0Fs/&mVhGFe<X%.>)>u
%eP]g+e#J7pSX&i*juaf$FX`Ksj@pig6Q0StBEC:/M2MKH,tG\K.i#CG3F-M]d;d/!(Dq'hB.YC7Pr<b_E\iQTc9][V1hRgV0#<T*
%B@D/XH47n$;Ds)l0NcG-OB&XZ&R1Mg!7ZS.0'SRiT/'4gkV4iMMpe8K"iY1WPaB0M:^`#k='S[TQmL`d)]UZL8Uk*rJh9NhO)#A=
%Yl@Ua6'ua3,pAsQ0A!/=94kGtOZ=&u@B)kTI$,14-7r-%,/kY47a%*oU7<5ElDje:@@bdGW`j,\1'Zmd+]"'XWto=%W>\bOQoq8)
%6desYWD^5LY,8.6M#I]]j]k\gMPS`ngV3K]dS6.-+,RR$0+TT8luFgTk)#N2e?hh)=@887Acg(SOdF1Y7O/bu456QO?b@o]7PI?h
%fjYN%VWmQr8ZHWa9Rfj$8u:]SkA5aMQ#9:MK@baF3R^V`agXmE$d\8+$;CuOlc2>Yj:n=i,(H%q&ASE(>Id?mYU[?B4@ADh`EFpo
%*rr,AH5D8caL$?H4s=GlC"H*R%"@[m#Td1q!2*2h/B'jQ;sDbb4qI;>/K,YgJIHjDJ!"*d/G96Oaus-G1XKSCRQtd9h>#&pDTXB/
%SgHu&R=)Z$,nAf$')>(\_&\FCe90gq5Z-'4h&`FqKQ8aZihKO7n[4VDRT3>0Ea,Y?E`+kE?EpH3M'\NO`)B;PQ23Ir\bX'=8NJ"I
%_9UOUAa%g&-YJsR#htqG8<gm\lX-^fEeXHp];1d-i52K]+JsJ2O?L@Q<K_&?3tY!-lPd/N:c=`iMk#'!,K[r.e`1XJD]PFocV0e)
%p;4i+@#D`;oZG)T%a]2IRU-X`S!'5J!_$:HpF5Qh*m1R1S+I2GKO0#8ZATL%:u>le=;f(CMOor3ch`\L?5Ea/(9(aMg)S*XWn:;8
%=$DY.idV`VM.L@/7^Rd5Y,PIH3FN49+YHng3]&.fO3f,aYW)l)4gS@;5sBIJRAJ5VCS@dSMU!Wp-a*Did@b7$Hn.gH\Djor-tq!A
%d![,Y=fb#q8a[r*=k[I=ih(?"b9\a^(V^Z]$:8biH@fa50i6WtN=sAbR[i-JM]1f\(X#ZB[=T0HV!'leXFNN@CD]8^Mi?Xl1s.>&
%R\6k-7?\LEEG*mS-KR3R3L#(5mr5[j!*6V>BX*P0oIt2:Lm2&q&p^MBOR<`iP3/2E`&dip.$eg`(QD6_ZV!c%5:kMrPN9.4Y9aS>
%'^=%Np4CZVkg,Tb?pEm.*acqJT=`(f]_K2Hp'q="XV'1jfRtLkNg1URDH(6C:SgPlH<r=6(>19!YbM5*,P(*/,f(K\!YWV\jWWd'
%R^D0+-%*T=+sh5%Z3\Rs8ZB2<k)$VL5uUQ'I?Zi1ajXW=N))Vhp(F[b;pd(MO\lRk-1cBVe51n4(u#d>.Y?O<7M'+He2Td]b*88&
%oPP;$>r?D*Ad9N=`-q?PM+BlR)A,1Y&kE32127JBKM(/@`Q>'\TMUKWGYokZ?lK@n.Oml#`HRfqi6BB.Cmq;QmS-C97Rr=!3<M\h
%P<^Z</L2U(T\h#r$3!m2rMnL**\%qj'@@(JUsdfc6D$SFR=^mKF1!L6/pY1-=HOUBaqP/68iLCU4rW+'=USl8FYriJTE7J5R\f-a
%)>8)l<g4"aenWX\\sm/X%q$+0jn#u7!eqY=E`o]R3*Z$A7CmGJGln3Nn%NNo4!Sh?GEgi/<tehReZZ3G(9J7F!>\g?TK3"H5RZgU
%U*'5_i+Yi(@@#o\8V5*$\!gUXMaUSigK$)iTh@,PJ%CU"V;h%7/C5W;O%<ki?*ms.?a[$L@6q%uGXA"7b.)4b>uF])G5I+o0"T+7
%8T*ME^&!VMK/Pm<#QJpWX\FpVZ#'mq6!i$I!i"t5.3_RsD+;s5c9NhL):4/5k(n"H4h!(q>[[rD#"e\;$'./$B,W+,d4>QQ6ElBH
%U``g"jd5VUAb!Tn5$es+XU/im$oFnYQ5'H8FELg^0'boeP`74+GorqPrL$099/1H"V3k?4%C8BYkYcS6LH1IGD@g\n+rdgf6dr><
%_EO0L3ofP!g7g**f1'"><s:kV,YK:P;'\>'$,rZtiR#T-[[i&\aLA4$@ED_EP3C'XL?'r)2L[-4:=/b][<.\;L`0XM9NO7gH&O\U
%V_0NB]4Of#m1>&hZau64RS7=g<oJt!Mh<AS0W-@2]fj)/B)0kFSYf;=Qo)'GZ=CE]BgePA>HYoG2GB8I3Y2r=o9CJSE+Q3<_Ts2'
%a\%2$NOaIW/u3#]C,Q_m[d3j$Z!W*94INEM<QCs_mJFB^,iCrJ\.4rHm6l2kg!P_WDFkLX.2f;+V,(Q4n1_P0H[a5'"FY*lHZb+R
%C<8KaJV'[paCfe9-M[N$#KoYkqR"D#/qp':79$&q8&uE1&@*kp$q/)nO`Seo$-*0->%:TO%8BSWBqgb2&WP6HU8f\5d(MdTHd\Ck
%Bsq":1,#9m(f>qIM#YhR$l^;rJj=.q3.>W@KBsL#d@cr?S9[tdUk5>"OWml5e1W[.b0U,^&3lqK'B'e1$^%4lAB\'>nOQ/Td`b'm
%q<bS9=_k9&Jga&Elt@`:&X,W6UfbssL[.`o`=J_u_c+t0Ti5<U[/T29RqK\!U'qS9[RA#A_HHV[>r=\JZ[3S7)\uEWOoN=h"#P5A
%#8+(S2-8$.!W.ArK;%EpOSB0EKk-=?#&Vc2L)b;YJpc+Gnd>cN"Y84jV+fE9Yg@0+0Ts,T<qN;UVund1ap97Xq#Wi==c![(GU08B
%WKpC<=bJQp_o3@TLG(ocXPMYKCE<Ldn:*th6`M/:bp_\:&?L=oljmHl4RSoN8Vfq#<+KE%I?C>#'eKGTF"W3tNP#2,*1MUo;bTD!
%=o__B)^]i-_AbsrIRqp`"VD8l`_m'f'S%K9cnDFT;j"L,4;4P,He$Ak2Gk^6W4QQ\^$#[A\VllPT%L-N,:U`g:0osg&IFZ2K"YGh
%$k2SMMHW$:+YIf*'O.mWUL^d:n:6*f*<S$kk="*?eSM/(c)ATD=-Fa.6NZPCbgLuqi@1bcSsm!!8T:r/-=,o/gImg30$G`[6>.%6
%XSucX4OB"Xj(.&*Q^6%P.'Xdaa3``\A&ONj_H%^TgaC"-b'ji]Rq9-bPWq/0XXQ&\P3GUHlM_!g3GQQj<nKnss.j%JPrFETKo@j(
%k790XbU#T"'8C'a6jQsT0=q6WRIc/:`-sq>'NM9e8lgk6LG8`fWt0IQZ5M5E:_$_rH2r(6"/,jiFj$#.:+oe4"*"TLPAQ+QaVqkS
%036=6@p5M=;sW#X%+cc_.%.$ai"ek+AV@gm:iIs:<GbZ6B!M%e=%tAXXVTb.!]H!`2b=JM?`MB+XFRD[k+uf\P60u3dDQir^MF79
%6"XN3$;R`J`Q2-6Lb>XZK)MA2eCp$!Xk2Q`<T>?-/%%CtCR\fTLoJh>JsZjba\kBC]?JOZ6tbpqPJDnP2!]-Zd%@D?%D#W_-!@<;
%SlQlDU#Jh$1pTO:Lm$kR9"#>%CKptJ6<`HJE,/#cB[b2'T_1'fGbe@CbE0j2>k=R[%iQs'Q0bIo&hVU.df'`E][K<=_F'FRNDGmI
%mR=0"(KHD0qs'SdX?'A0L^-"[0o'UC"X,6D5d+(AJ>g!TR+Oo_&HdgqL4CLLAk12J@o2q5\%H8\Zs#8h+F%IhCt/f*!^fI-bsPKf
%(XYJ]@.G4NY+"f:7?VNkE>Gs(dGgLq4USKO2/Z\lf87U\Sd`>Um+VrXdeNBM%Jr!\7*4G2gpsgTRnd=Qa@6fb>]VHeqe4<WZKKC^
%JFu3Sf4%lu8\@)J:/UN-=+p+@A9nRJl(#AIA_C@ki'NeV70%h=KI8%19/r*:KHaT%*lc"pfRm<rPm"97d9G\$Of!YD&*gHYRZ(3S
%LGB)>nu=:eR:T1e?]q?gd:k"3Uf>*h$oQ?a@2[uIAa4rN$R<'9A8=eb!HWsOVWogJ>-H'k0Y]O,dIC6G2i)^OP5#g9Zd(ljdHtH^
%l.#hR!.0@P5+A5lM7(I>$->GM!:)tJ$"@D_8.-`6X=I4FA"e1Ri,B,sp4-e7=\Mu!SC(o\1!MRh6P))uo].;fNN7(A='Zso=(Cl'
%K_bk2#IA>KTHVcQ61T19R)JQK[)AG_0P6=<7EcAT[YiCXdHq=^nXG;`PPH##+jcG^SHO@5KBB\e`=]TpGGZEP$(!$0hNM4>(ml;;
%[P<LeiQG5`9n=;dHQ*StKN?L.r&D+rB,sq&X9b0b]_Q-H@_G3e8ALc4%J<>K)LP;=A"#gYbZ3NR306u?NTlZis*^=+"C94PF6c31
%3qMQt.S:_#2&]8OF5VI(=qAQM\tF`2C^5]1PmT8^b2<`QqK,X.!?Up6#7@c3CR5fC[Db_35Lm3h'Z7FM8L@FHGc7Am6OUX^"u,,E
%m96,Kh_U[$:8nHLP\)2TBWbg?gA<3mmkX%Hg6ktm?bX2!UbG]g[=M`0CuS0W'%"U+asY>F/gO`.E@'KK^RUC)VA]&,a@R5-&.X>t
%\[kQ/aBfOO6A0#<@8TW9Fdt#[@j+mG"#QAQ=G)f`eY(',=1*WEA_mqM+6?b%Y'+A"pb,3cB2G@G.3k$%'"5U,W_$6'na*)IJ_irt
%+I_Ld3H,`R&DU1EX9_V1>B6V"R@-6>=OQ!SHL#<7ZLY[Wm#bk:E0#9mJD;/SO_i\!,p@jO&K[9`)j,9$d<]g.0<#:Db\V2i=Ik/+
%>@(`Rk?@iSL2PE.]I9hZCES_Xgsd'U8TBTI1seP,U3.N4=j*=6e6>hK!rnmT*L#]MdZe&'#@dF90EJb#;?eF!9bpLD!>k+^]jgX[
%J#U+C=?!541.hX^S'ln20EK*3_NN"83*QGuJqau]Vfbb^C(aC*pX5j4LX,BK.X@Hc%&YQp'*_%?APiJ<dQn,VD#BHt^9+I]?\nb(
%L;XD-Wbe.>/ENgD.4Lh(Thjo\b&,4WLk0+bLtaH`=MZ!MXFB4K`_U*l$?`t6E-A!SRs7ILk9()*bdVBp&HqJ@7CEgH"]2Y;gG8k+
%1,h^O8W_@:6(Ma;RXD\PCA3F8*2V)'A/s"HXB&V$SKG3mf#+P>8_aT1CECn>Vs#_\/TeXVZ5CTUl)ZM+]#tco?i+LX<q1CW5%$*:
%et=e#n!XUWr3Io!8#5sY+jI-0@S8P5pC1,d%Q&t$4?C3H9c(d"ZGDs,/eMfqR02>"B31H\'P,WJ2_9"aVliT*3M=Tue!Q?C@I?]X
%F8"@`'MG*oatY8OVl_>,0o&"nP8RlUhZYIJTu.D=DiQAUV(#`[^H8[W+PB4<LV&D'<s+hbZ1+2m*uXusCH1DMnuP+ga-UG`@GTAT
%LK"YjBrs1b>hS4h5E_tO6'hZZKp7'WQfhnmXOM`P(3(M=&Hc=12/V'hj_uFYhPZO[Mf$Ql\K!WBU`Ys[SN.*]Jq*FaZJZm!RZjKR
%MFBf?>E7-OL@gI/cKpFu?A"QM).-MOZQ+tt@PVCQs&QVAElr\M\8n*l-lJeFj&4*Og;(jhdMeZV%_#K=@Bdm_4>oVi$q)c/dQ%_6
%Gu`#%K?E-rf4*ck.7Y>PUfhNhI";K6_c)2P@iJe9OUXI4Rse9j"e/3Z!JDg4d-;pdJ9!14F$;TMcUp2@'FBAof,O3qeBpiA>2ePd
%nr6P_^gtu]NLqo"ad[T_S4nC9LDY/T0KH7h+rKjd-&8%r.aaZpqliQn4sEsHr*B-D""qu\VIN/;S=C[p&]qYnT\]alf;\j\j,jG>
%!?9^3j;8,k\nu-AI?djc%O5Vg?.)m_3g//<6s,WlgA@TrH5oE"2BbC$<u<qC&lRDua9+<g?l?5R;\nct@k;X-,T1d]T^o*de&ESe
%*DRlkZ,g?/0a,'RO`tYcmj)q\<0?4"7*^N6o]p?bj<>q[;gI>`8-)(VXP]cFSf8A(`$G*pM4D7cl8nr=r371PH.O[/c69[j:kg,`
%+\GVdhBCt48oQ@LOIK,0"S091QJDrlLQk),j,_)Hd^0:O(-$30(m`k`]?qL$r'1T28*ar">V4L;2iVusd,QgI),N*Zpf`>Cj5=oV
%0JiHA_]>r7MT`9bV42(ofQ")Khb_@O-C$''*;gFqXUI6#IYi1/R$m!R*.N\_08eq8j>[:^WuO)q7"V5/=FoM`&(^%(RA*8K_MfFH
%80hjP/6oS__mdW(LT@')f7l/C8/1A*$oO'024lYX>#dnk)pii<+u]U`B6?R%B,hY[72&B#AfNOf*%[TYYfm.I+mgco1(HT+aLs['
%GW(l#-t8^_kUQ1_\]_&VU).>AN5IL5]/%)[igE[ZV0Hu.G6F.Kki/k-;CP1WdETtii\tu"iNq(YFQ`o[0Ahl1;$XI#TU,Tb\r=R-
%Pq*>EJ8=?Q.rHUMVi!9b)RY6Y4`2hW\RCB5Ag5UROQ*bk9h#5=Z^]uQXoZKRJ)TR#;H@IRM.@5HDB4MA1iYp2fDrs"i`WW77u8H5
%a@qm/8\Cu@^p2k.Wu3Gu/NG=$Hr.b>'%@mF%KYp,B8AntP_'brNdQ_YS8P35@(:=()aJcVAq%6)K/u3/R)d\>iMB'PdM<m1X=p!H
%_gs2=$36t[Z=lJ@%69q9/]<>m3#jiQ"HAWb:AT!tQS>Z&\>p5I1`RJF1(oN`?F!&F2TTi.D?"-E3<VW>(NcrlD3?Jud)(WZM96Cm
%:pM;FN>2qbPCOrk<&as!]QGHQB4Cu^-p.a0cd/-ND#$,H#tHgIpqB?,:UV'X+Q5j#+>;@aiE>d&*>+kO*krkO-VJqD69';@G27TQ
%#\VUic%m3an;(hK+MST\NHArX3&lAaS*MJo_tVH5?t=5dPU['a'F^!T]5,[!F2>[+Lt94iGQ9BN2;!,<52KKlGh(`A#o?dF;0I3H
%gb&G%Zrb5""K.5\"qeLO%AWF.(QBAOESt#o4)!Q1`l&i$^1\@0b5u%(RlF7&MfN)3":d:?>f2)%S!6f'V1<2:n!1P7.K%C&:#7S>
%=$"#@iEd)RMcS"^!PE25B+"_.)NHZR2[uD\s2JE6J$I\oULpqrqjW?i4[qaH>r%#8Oh]EikhtnZFnLCam=Gf@gSIC<mcs-mQ8cL>
%TacS.Al2@-+/TCQ'>K<1!e.c.Gi-o,?OcaHTB1h$h3f%?:CQq+@uD4E`qj$*pJe*c8>*p^,[F)Ghh#pjENm.nVUMF8)XD_n'pIl2
%$N#:,\=^()Q1b[:R;B_Zg,INGWaGfu>#We&ZbE18`&FW5f^'$0)!SY2a-B%AbTXP5d`FAl2en?gK6dbh,d`iE@D5T;02.lFjr55'
%Qp$3"?3o`'FGj,;Xi==j%HT[63\#u6ZHV6P"jOJ\A4eP@IZ*u]8o/I`GD]:iiIGhtAs30No=^:;_X'(rH`*eCEhds`V_75*1Yb&q
%.md`m8*q&YBQ"0T>]7^?;1k&:p."mD[;6([(`2k-D6VmD,p`XmR5D"7?Y-mOK-YKHXs[GP[nD_FNJn=4=<#_YcUkOQ;&)AbN:`O'
%-s"b_/-gL]#auSLTQ`.%U[c!Z-c,Y!_g,_lRRAsS4:1=\_gm$1Y)A(?]KIib7X65>NXM5:]MT\97(a\S_.DVF2^E=q-Y\`Ej"2)u
%ecd"UpQ-lH]6*_q)p%o2,!JtK/5/Y\S3c#[DeU43Dl3<7CsbN)b\q#4`<PC_\][S,+E&5JkY))(j1S+3[Me.#.16Oma":X[@F!S`
%JG$E0?3>K5EtbF.s0,+&(Zfo5n#O="Q\gFR,e;JdhT4f;`\J7k0b^LKeAr,[2\?q/>VV6to0O<S16+<h8574e;Z\SiJok%R2d_dR
%hP;bT.eS7KnRcAB\]0NsAkpV)f7EJS+[OfE';#dM">!V3N&S(\ahCc62faWU'"Pi'1ML4Kb_kp#,V??]68@?l5QsKe_0@b=417HF
%L4HK6Vg&Sa.ed]mmgujSQ;bGY0-rnXUNeTdR@`gU`Z&AqI2^+p\T5Va/&n%[Ie+M=2h/rT)WQ'@!XFF#]HNuTJ'7B%^rY4fN&U=R
%=YAn\De;g#PWElufmqbQQ$<\p(6]T3K"U((+E2K.H,D4(GHl/#H]b+0a*=AgU3-@(.,MX>A[b"=GuQ;HiJmI$E/if3NCIdcDn>Q(
%Ai>B&7`&]D/]/Mr:n/5SnErTiVFL&%rE.2)%e,51Q)&m3GU"Y-MS,53bq,D2%5nI*)a3%\_ees_#R$6hn8A.V/)P]X]AXGT&mM'G
%7'@i!09"]2rpW6gS]T\-G1:2_"N;/D!9WK_;utS`:U]?PStmE&8WWB*#o?[Jh/!m7jbQ4iL,:>oRskg:7U49Vlt.2^L&3j84"tXu
%8=>q?&i'fr0tV"`.2&Qsb\gkV-#HB"hKHh8-l#<u/:^B4c/14e+dT]Y7<VU[DEWa@VSHTs"5-C'/$]T:bq$"[JK_WK+[::2m"T;F
%RZ\o-=h[2CJK_W[,Xi^!aDTRf0JV=Lh5J1%/t+N,q2hE3FG=s;gbb3e*$(_eK!%DO=hm>"@fu+1)3+7%787H!6"SD\8u/NM%..Y)
%/NZ?<[$r)18H1J\2mtA2,hZ#+--[3,2/5&\/.*3D<qI;&g4Hr9r(*/I"a>;WY&V&sa@b>2fPX5+EE0:"'X6Z<YhbO79<jo>9c'GK
%aciu1Xn'cIh/lnA^"[M<BiZsB`OO`cA-k[R\!n!20[/Tq&MqO"ak](I'_DaC)Zj`hYp"=t]+)(sN8-">K<i-)4k0c"IZV1<rF=B\
%UJepm<#76/2shUFC_(PFe'E0m+h4!Zl7tdBgeEXLKc/Z?Ym0BK\-8@tkW62Bf+dGdbjC^ls!Yjnl?G]^;0rL<q1<2LDn4]R*sL`/
%i,1Y8Z5O_</T).PM4IP7i#Il*j)-^;XP9@u]>[cJQ$20Fmbn%WPhRdMQBVT_S'IF>Y`j(S_b`dk1N#.:7>\FA_2HR)-+k192[ftk
%cF*@9YahL3QJ?B;mXbY4#Ig1oAa.I5ghqLYoS>Q;3u%"S4EJ,;2TEr`j*%aPUuXB^\!sB^Ri6+Qh%Wdf1iBcnQ85u+2m%hVU;4XY
%=A=F#]+Kpbl9YSs#NA)&>g]oEE#6XFgOQmb0!%aH^26D5]n*d=OgOup\/XG=.SrLB:lDcTE,`9W(j)7`h70D**A_Xn@\i#]:i83Y
%MM=YAfPZF3=e]K[DEo8QNZ+$!l^u/T#.YZ_7gTa-'I57Z+B*0%buU\uA%NmieFUYm#6KGl.C?_LOifk(Ju\>^7s7s<Rd@8YXK*qW
%S"8fU^qrW<"gW#CmlGl,BZ+4hI^eNC76@95FDXo'm]^RFCgc'dWj(nkGCE&$"-4`SCbr*''s7K)_ZVmdS8S6$L=5HU@<AuYRC'ut
%#)ORjP:`Jt^iJOQ14BQH2sj0=F@.1!$>2O]IOB\Hj`BJKX8t%<pU]Rd^S,^-l^h^-DGY;J=/<.4_0ch;k`"XNN&cgrNrBn'kXAH)
%G72QsS@RDdE`sBI)hP.k$4IWaTkrZT!Te4B8GltV'SI@D%#r@<!RhH98FEK=M\EY[@jR)hLtp6enH@nWZAu;3j)J.9TPQT*5[%=\
%Yb?&8WYBNO$K-,%XZ%$i5p1'Q%>qcdAY:;dpjJuYS$Fag7D@`"1GtF\rY380+M;q"PerEXbC5Hj#WFhupHBGLeOlME_2TCC`R0FU
%c.g+0B`N$5C9@c\hhHZ=rJ]Vl5bQT8=]LmEJ8`cs)=23YiG@`FAjJ!.D#<M%!H/'?.<WqYh/:pt_J.`)FirK9\(@W/pO63\9@90^
%84P4J9ACk#e-_kYVIV1j=5`deW@f.Hp1fD%j)(QmK+UGfD$)<6D.>rfmYa+G%CQ_XS)JI#D>W3LW9ka.dPgk[eqTUsCo]U82ONlL
%r$eCW_^9Mk77on6^T[SD#A"i`Z%:,ua'>;n;7:1I)*N?=GXa_0BjX?_L876aG"Z0I*7J-G:q!XTb3i]&m@G'J@$#4B7f5)$N:"M*
%M.gnK2K+NbfbiI3+KS&N*jme#3&u.lCm0FS.^!$F8d9(_^0tjLXg0iQ);G'O(b[_c2C63ISf-:!'PaBSk;m]Ql$+Y9m@0QnF4[G+
%+Cgnt8&E2&N,=H?LLH-YnOfZ:Lt_JZ9&#DpYt]EZ':XrcNOQ"@:rYD$R/C8KLi#6U.D.LUp99SeYq7cFCH%+/"HJpMm"fLN3.g/H
%d;$8]eiTmF)b4^3,*Z1UCpUd?bK>RDNKHhbSIr=#'ab]!#hr/],pR:pfH0=]-WT)GV;Z?GD4u9W&gA9Jm7FC4D>&0cSBhJqO>+Lf
%"5"qPK;Q0[[KGdW$69[7!YU3tl>-ITpjaY$aoL2?/sH]O"`33V9B#RKY`2ODZI=c:NLD_UghSorQQAn+]Je3uX>Ku0#&)pl_co0U
%U6mq[\2N/5>g/21:%o6@1lSS38\#>_(28n<1+SXQ@R7QP[<YJ\7m,8.`?Vt8X[r9DZA>R/n_/CK%/Roo7PPMR</0"2Ri'LIf4K#"
%'T2U7CST4:KM&ce+U=7J.O/^f/VMnu[3=V*Bisb77G^MaDDmDbW&?1Okle3HQ=d4,6YZ^*aB`sVe8EuLb^nKM=TuA,[)$7I$Y[Ck
%UES!aQ/RZW1\5*R0+-PS+D9][Qsn\kU(LI80^Y=QH(cd+1=RRG4\4;W48L?r)s<V;g=8Ns)i-CL.#QSf/d8Qr'k"jm;%+[&6C/Mp
%D<+O?[qGn]KF@$c0n=GUPe@MjRu"U-=bmK/!kuHMg$%,"8P7KuSrHDs.191$2Y-]Iqeb]dCmbhRF>gFg#\>`22Oh>CI8]M9ei@*4
%AtqIk+;YC00#A#P@Q(;;(>3SUfoSf,R+C.>c&/)Q@pUAl9?8bB/\>]lM8QWWG$ghi7b[!jPjRk(%$XJ5K8-RMZB=t")!;*eNBp)K
%.]$YlCTME8Ct+eCX/hYN>msJ:N,4j]+^.q?iGme9j?tdI)`nMb+pQ+@<^LT$WC;a7[X;n)r9W<WG\l.V^MorX,9ptM!G-jmGI-k!
%NSTM8?W8k*YF5\YUToq+bp6U?@fqKX5DF`o8^'jT=@_q'@%*3dZ+J!tS;Ic,?#EKD).+OU_l23'!c]VHo$Z`Igb?"bB$E#oM;8V^
%C.R]/Nq\rtN<kRF:oXa$N7;6Lg9dB5p6ZadCl7KJ0HtZ_RTPaW<RK$JK@qBP+mt"/(_W>5/Rh0XM&j78bm'"fSPbg-O9cWFR+NQq
%rSNot:!O%%SM@Aerm&Z/Op:M'5id<PM+r,T$AU@@)0=q`B2n5eRc\Q.IV(&f</sE%!Y6]&mj(jl&f[>A[U1p:2DgAcM!U6DKm40H
%<lW%3+DTRAES1%,K4Go>2CjR5=\BTT=/*)GY/P7Gb;BtlGo2CgVKO'fSE)^M%!r?>bqs5T'mUfRCg(r%/MIqu]r>%D4+PoSW<sYN
%=kLBtPQqPbb'DRXRbM1AUs`)lPR'7U=]%iAHCL=VbmG5#1or6ENkDW:WNra6Z=.2%Q\(&K(,i$=]/)DS)u<X%>+M(8%C%a=2AS1r
%aE0L`(,f09-!X5'^ej5#XY^_M#T(ol=\.1-JhM"o_WJOO!E9\Tn.%6D_IiHKQfOQf9ki0b)T"FcKWC5uYdkaZ!bXm;VE/JECU$3X
%<4=pp)\P_WfT<=O7^EnsTs+Vl!g@.Eb?\LA=lV@P2XTdslQBWR(7)NJ,@O60R;L&X&iT\B`17_OS!K=]rD47f=`dfUgW@Ks<!K=a
%;&2&mFDDZuR_7Tm^pOUZRjg"4]dX>YJu%Jn.]r5u!4c_T2PR,G&sS'/KGA4LAL)(3,7eWY_C"!"h@h,B1X+"R28D(kqD=tP2&N]8
%;3;rUm7fXD-jUbMVgLoP&2p*4JcJg_2KVhO"H8!C-\T"]2C*+T7eJ`3fM#S8$)o1d8m$nX+^n#)BM3u2/M&WnNiVj'.Ji^T8D&%+
%)]68pZ7)Z:A0btpTn7T_8_=ZR>gaa'Es)QK:_G\A@S.3"8_=U?7>6ChpR0g,P-?C/MePPqL0.!)9#B_1njJ^qc'&A93Y)i]%3m%P
%(hsaVL9%a.A['>])]88o<Z3kK+V#HD>gid$\HObu)j[Ar#Q;GOG+$a^-co'"*b(mQdj1/O!i9>[kIZFV#=Y(PAfP1Z9P?*i2T(p9
%!G*O(;VG,nPXPR\9U]+9_.FrjMSWm5[Ue@_)c<tSd4h2$Y^$XOjp_Q";QS88fJqOC/()WWicfq1CXjcjK7cmMlG=sVEj-F.+tphn
%fURkcCbU&_b+b=A#TJB<\?:Cekp[jLA-9]GT8Cbr,@OLp4.MD:.?Gg2R=rho^bE?^YSi"YDV%LtL-%[n>;mgD'#_)mTV^KMZ/MSY
%F2U\->%>/j@5IR%=p#0c$df7;L;KhbKcT)1-u=]rEH`*T-%&jM_PW">PoCDqcc?556XeFM_]J&s_PWr;C"Go.e:==&"AreNm''Xu
%$(F3g@9q)&lle8"2RgG-q]K>=\ZMi;,@Nqjhjfh5+d'u$,@U0\Ao)<TfG*qB)$sO*L2.VSCo0Hi=-gD^O/\\.U:lcWf2\+SB43S=
%'NMO^/8TXPZ/dnQS#+BRSi"AC1_,+c[k)?a?"&n>9,KBGWXC^-llfB[(RlI[ZZ:MZ2lqN_?uPPV0BH`&_+oC'iP[1tGhm0YjUgdY
%4m'0]m&Fq>7poEk836j!<QrDtJA%u3d37(Ef0AcVX*oR=qXmH6hu#8r(-DA=eT.*1qANpd9\<8828>IjNI6``(4*kWi+q?a489^S
%B3ae^,osBKG_<\a:dCLB]ggpo=U4Pe+fq9<+g7Z,$T[_qK!)4q"V:_]>oiBd5"ChsllY1lUW3\!_YkOfg!DPC)AO/Yp)<>Ppesr"
%:=^J6"1q%:(L.H)\n8f8PRo'F"&F%KF.J2&SP$Fff"]l\f*lIIlSZ[>!ojn0;oCQ9*nXHH&D'L9-QBo[KFIJki&Y#<U&hD/$tD6b
%%Gr)S5<TLf252!u($MQK)B3iQhls5(=.6^oXm%\/BooHtAYO(Xeqb1)$#>MG)%uV$C5p4D]ZUc6\uJ3W9PaQdJ8.GTj2CTeD2?ca
%[-5Ye(XNJ'mp[A$CZH#s"5Mh9dGp>G][<gCA]+Jp@+GU;;a&s@XD+I^;M"uY\q,*;(i0&'4bu!1CD`$\,f?'?,UTK6XRS*T\_/+,
%iP=sj&(V;)9gpmh2:;T%[LjSYC5c5]fnutF%S[PM4l'Jh%UoCfR9m!!F3^q#*^c6t&jrkHZrlFG6*>s,Kq/FNG#!R-X/dBM2qVkg
%`^sWdcmBceg^:/Y"tJ7jX-%GF/^]s95U[;<BZTJ57%k'pR`HCL/de[47KG;O2$@k9D/n*fZ2icqe_o*,lY!G:>V.qK3f_l<*[=$P
%6_u#qek">MU0m(_,@j,jT4+`c$0%a:8p/PjTe3'$H1+46<21!nOJ[o6-9@/YA2Bt6+\tS+L-W19%1,A:CmGO'3a"rQj&:Tna0i_P
%e;e2!d&Bl>-ZtbZK7q.P@0rDa<h6lB1j-1,5pK;Q/6qg$l/c"NMRpW%,?E#?_m%W%YQKJRWM?jnh*@qMH@Tr?S4T:=qbe\^iVI\f
%86r_t:-`Q1*/m-%NuHn7,F08gF[<"aP"0dD(/kN1.uYD'.QZ->0^?qkCcHDMFk/27NhUDh&UTL*IFq9k.Q3#L,D,@;`hCtJfe%r)
%V%';"Ch]%p=ABi&]op$USO!]1$X70ZJpLEYciDSXOhZXCes%ba:H.SuU%%;[eTP0lFHp<u_4K5J8k2Z5jD]`6bs72PB4>oIQK?b5
%HlkX)pBGdZ`Ge4B(j-`=[otI@Bt,@E2)L]L8X1en:.NbGN&]'KIRS*8E#Jn0<D$&d:Ve)%g/VHlp>LF6L[1?dXkDtDRkF=jKYa*`
%=?_i,2:aU4G&1,cXD,1W-)K0pe'(<f9]G;>b]gGs=XX<-1efgZoM(&<o,@j8RK]TM_5=QYp7+!WBK/LVQ`.:`%;?a[#bc5fBH!r`
%Belf\l!e5.)pC-p+k1"\1(=qR"CDm!%7/GfL3Zam3l)OcNPI1\\r8>&E2iLX)Q>g;8r_@sO3C\.W61)h^M4-03aI%@8hs9f!PTii
%[WE&>OP$;(+_@'tTr#ADAhgSJ.(_%$fmooGd)M6gPt!X"p]gCFqu^G\)liPAC*.;f9!;DHiim*X4c!.k0Vt8%03h\gr7$kW0%^`3
%:$OuX"Rk#9e1f:k9;X#K_+>lD=?Ju$?%YIR"XZD33jYVVl6pA0YkpIPd`p]$)iulhXL$l^Yu.p'$#PEZL;4]]:7A7AM`6H6ZQq"F
%7^o,Ne."__J1p0'/-P4fRQ)-L)Y;&GaGu?gMcM,A6(3C)#=+a'nkcLZUK=4%.6`(.SoBFFB)DC-Y0j"q`0?q*_P<5rb*]*4UQImc
%B=U;u4.a[;d=bj^*2h`Y<FOE^DD[6YUrR<C3^W(QCXd%!2Gr<'!uamJ9S45-hlY:gd9psXcF+lcpUOQV<]K*La[B092!YZ^\V?"H
%&</k1UI?E:5jD8^(<r`rdPY(tWl/*d7DgK*29H8``XS3%[[_"UKKCM!2oWpGUI=i%3QPDs2!,or#7V=%XV/\ldIW2!,'pZlYS!U2
%$'.(Ug/`t\*ZDT$6D.@A1gk0FQk"O^=kScR3&IoSL^#^cU?R(M6SkdWokRrKKWn!g<A$--:6qbdU"a&$"D92@,%IZSdL2C^;>un:
%Tb1f[5')@0Y!ktZ*!m'9S(LSJ6G$V-KcX-g6<?TG3Kb6AEU_[2@mZs(Jb2]<ZNbPX21u!ac<\k#[nLJn\V`RE`oCGc`B&Or0W:_W
%>t6F_<Z0CHk<["1/)$n_o*tgON#NZlR(-\N)@RMq-g;></Eg\NnqdNU29!a9d'W@I(as&qAQ-00Ju0G&_>llkAaCOQg<R*3j$:N-
%-EY:ZH.E<WVa*U7;#:Fu%87T8\JbU>7$aDK"8]T@o_c&]?4WA'I2go9E;j2arqE>*9],d-oh.F]"U0KrIXUnc[tboNGIZ7;cW'nM
%o044t1B#B,J+2dmq/<>3gX"`hJ,>e/lUV!NqXrOBo9UitT7=A@r:Gb/=AF>>k9']]4obPJ#ecc+cblCSlQH)r8Nut#aoD?)bK7rF
%O+-il5Q&@(]YK5KUAo:2BqHDh_^7g].QkBs>bnXMl/q0<$MEScor`abpb1"6ecI0oD$aA-=GgiC5[Ck5+A.IHRKn6D=mk6&o5!M2
%i)rCT]A*cB1h7pT(=I3Sd/$.j.&I8aINF/5#<OL"gS%I,TWTg9K20hei-^p[HA8#[S2MD%Z]gk;E;97<EX"q08B>3C_&D^t]#=XD
%PE&C#nk]o/^c^ZIe<Wku37"R0!gK(\B)AJPlQm+aWCmd_e"/rEZ%5fo*#?*KMD_$C\-hjnjK4SjM45q![G5]+*:?:6ril/dPJ`hI
%H*=8SZ,N^j:Y<I#]k;h(YZ@*nn"RZ"pWDP/lC>MF<JQ3ao&;;.4=^ab"dWfJI9>T"L)IqMDo1%Xdhtt]+i5WSZH,DWG47ddeq4J_
%AiF-UiO)P,"2&gJ=8!\:W(-WIA-3gH:0?78I!aK+j!2ZZA"`iic-r:7?QeH(*'6$'cSeKqe*Eb)]'I0]koBgXQh7]sqd$Y"3U##4
%jpm=E7@7,&JFlapH>h--gFdG>a]r'J;'EYV<6SUS;jZ+;'/@FCG>4?(KM+>9mC`&FkubB=1EDD"7k_t%UT8r/P(Pono:Y12UMNM7
%HjK'1S.9/#Y#6_FEsb/ulTkB;\oql\>rTOXJdatq]lhHEQ9b=&@I_M5%W=^gS1&Euq#0u^ej]$PA!taU*\\PDO1!K$>OUMGZp4q[
%SdQ-h,[[3*PRD$S^hK1V1=G`.a-TrCQDb0pDgF39'BMq4lbB6Z>H^#(VG=HT6NqjKneb&Lcu\<><>gZF0.<Gk@1E'q*WG*FWlTW5
%#:#+MC3&I(b3'3[;JuYU:o5]t>Ah-`q6mJ4e8P5WlIa[?]WkC"^@s<FE0Xur7mP;dY0i3M=6r($-oUUVWp@>gWTa&T:toH;qNB9g
%?TZS9QC=UUl11/<D8<I'qVW/lOJaFD9@.<V=t2mgm6'DA,j=Gf=S;:.jK[HU$8nq5,-4og-PA+U`iOd*)*6#`4$us6!#qm)V;r?T
%SabZjOG*nIE/#Zu1E?C(pAfMnSi5)+$YhQX[8Dn7e>IfUVtA-m#qCj^dB2`*0]")<agq`6FaHNlfMcY3`kpLD3<QYg>OUPHoSO/o
%T7(j1g`D>?9Cl^tAjDQ65itmc+d6VN!\))ojInCl!t6(I(eF=$H)c&Mg4BW(34\_=k1`(i@l9f0:LE6i(JThT!s.?t&KW9hXnbM:
%;;kr?<M?onmF^:_fVRi;#q!BX2;23:h:fM8fG5&FU!o>7(,V*.91Qaa%a*2VognH-gc%;$:MTW$HssX1#NOs(GhVpg0LB-7R&LXk
%2<l0[;OJaJkp!,hipr#0,HQ@eKt!;Lqa,,<&+6;K00&a84*WJC\2>i203G$jqO6d5BOq#:C*,Q9C0"PHb@,hJKb=-EHK7t(R$5bL
%>H`94^VudE-!1ZgBAC_UTBPgUlciDAZdV"]1Tu\<2gtE.r1(JNG*U(7Crp(NPmFX>fIF+oD5AQC[Zi&N`Dff*>Z#C5hbNIm(<X5B
%9rHjF<OEU3#7&/_%PBql&'DQlYDlt^]tO;E%*tUXDt,b#%Q8j/B8PmLbbLLTgWWmU\398CEdJ%Nm_g_j#KO=aiT;3Zp;fI@[1%bO
%Y?\fojGBr$Jd;uap>uph;$W8i.?bJ'4L3XW`%DuAKdE,?0ReH;[c[&?TNgZecHs9&J`\"IeO?iCKW1G=_Tb],4uU!PrIO*u9iJ%A
%hfl?'S9dpPq-r",6nc%'_9Ee*gg,/A'_<s2?2()ek.>;6<o)GToK@.&2O7oG->]\J.RM:U7-g^<p=*pXoU9lcVgWsY4Zo@.5=7k[
%El<@F#OMlp;KV;90rTO@95ZA`\X@Ef@R=`d^u?h>#d31]>#0%LLHW*_gt8:aXI<4*`F_ar+8J#/>F]Oc3[K#t2F-m#Ht^M8Q^9#q
%,KdG+%+uZ],PY>P(5q_2R'<XFZWZkZ7@9"#a]c/)_PKaaZ3=09:oU%<*isMbUA;4MhUQ*3aGflDJ`,,F_V2#\JG,,lZXK9I:t2dF
%DJPuB50J-R!f!=u>TjGYbL=&=&6TddCpemu,YMQ?fn<("3M]lG1u1MpG(q.9$*r)j;Yr/HY+!l'7c@P&koR"@M,T`C,ttjD1o/G<
%oI:Fc960>[*j;3GIXCdubU\n?(j%p7Hf3D7n&>%*Re;fKYC_4D1+VmpeOLKf2]Jr#5C6)>;!bS*g[IO55I?Y"L#*Wm\@Js585?&t
%Ybg?>JMc$l$se\?;6p]Y7ali\C$Vo4ig\'=!a,#nqH5T"*R\_u)N+t9&4FUsWP[XF4=XK=gZZQ;Ll3^'Ff`g2RFUi(0\sY#gu5$O
%8G@su[AB9GFI-UWih,VXO-2M17S5@gl->:(Dg5E[S\Zl2.'?p*38KY^_cHuOT6^!pb]9TNRF$p(O@a<sk7cJ2CZK6VZ5-f[@HuKl
%CSoY3bo(nM%d&P_eRhb##4.\V4jHjD:@(#@TB8hc7X+Gk%F[C&-t2h(EqBm:Xu8H&a6l3HftXCmRY3X,Dh!H#fHlO_:sppKk*ELR
%J^l%B&?&]fE+uc!n3as5$?$nTWeG,tY1jZ!rPN'ub`E-U>p;,mUl*o)G,jtG2fg4%Y.T&4DlYJGH.<B#`\#DYQh6\$)fiO%UtZI9
%Vo<PlquM(V?a(A?;5#=34JU#2c75-Mq,!f&$BsRtfD#h;Jr[gb_'4U)Ek/Th05\*kPIo+b6HL77(u6ki<V;(?<7da')6P]<1EqTI
%2"Y??F&b(1Oc\)t;H>TF='JjH4Q3F5AdSO'D-,R(;qbKW96%9N.<_C[g\m6.VT1Wo>V7Df:@:WIB\$NUm^uRZ]!cgg0pu&u//NML
%:DQlj&@ZTTA*rj&eW#dfk/SMZ,=kZ0r+tr(kAS2m4]"LdeU>'i/Y1a<*kqgp4B5F.c%L=QnuA$A:<mTA!5tcLPqQEL,D8]D@1gcD
%k*c1QToGRkrp[DmV@L-t3a#O":C*q)WcsQ^a,dnKO8CaE)W!T_?PHMQfc<^1,)PG0*d_b)-oL?MCIV*)ADN$F\j*HE#d6M:MnXmk
%jH4*K?$,=SP#C+.KAq"=^%lMHA9p+=<uS;]Y?\4oN@b'9&XI>#jr24R"CX)4s)</t8;1=)%U!Q07@7*JbG(M_0_M[jYA'LM\#B%%
%e>B1^Z*#\'DB6\Y5`>4h+3NFJ&<e$Z6/m6nqG\tc\OF+rL4$Ek4D\/+KY#sr4L&6,&DUmT:*/p^UfOKGY)1/JC3$1.Wa+-@<I6f)
%=Oj0no?;[2]LWl'?h:I3QKi#8H"GA(UM;M*lOlik+[+*H6+OOk2:YXNX?-Y>k:RP!6uUr"4=MlO($?DJ&.!0JB2uHt.h6lEBqc^_
%b[pNB"7Ndmg&8Q`Pn44bBnn!V(N/\M4M<EP9Z\9'Ab&gV51YOm[*5`lfd$QT6D2'&g=+9u73dh+>.?.0W3^JF#l!Tp5Q@mD.dIH.
%*eN[K>[^<ND%o%H]I^*k3Fp)<RURE1]_[MDh,K%uNYUM6KW53>QQZ11aE94QlL,9m[=^o+]^6d<p+Y1*\`)$M,u_-QaL\&h6\N:b
%3VEXgiI\^K&MEp"Ltmt)nI!>Tga-8E'YJ\rmNtHcHh;/.=<n^MZ&/^u(iRr7<Dk+UJ)f/,Da3L=PlYDLMmB3jC*D['*lKfX_%m<G
%K`RW'Kb>76('u$g'+ibIc)1<_F[nsQ\#_;CDnmFub#rK0jdT'AQ-3B&PMChgqYD!hK'On6mUo(>"uQ]9lum?3:$C_&4J1K[YRahZ
%2I;Z<[uC6B0Etl#c&#C^ZU)M,rjnj$dhZ4aE*>4#VUJk`L\^XqkJseNb\qFI2li<U'e[a3La4H)Z&,>O*1#YF?>\#sS?*Xjk/!oj
%X@XTl2t(1h^#E0\LIGkPd.:A?;R-OmRO,B6U*&7J:G3jt>n7\S.hti4_.c::aD>R>D"LrQT!#u4hHL6D+"uCKLh]oM/mar.Btd-#
%H:/JPZ+#T$)T'"Q0Y"MYcqIFCEm\h.K^-[s(+9"Ic$L97A.at_O09dU6hsVR0$f@pK&o!9T3H]R&=.3H)#>J;D8F.6fWgmR<`r"p
%1/2B^%&s!c"PZ$0`Mt$_>)Z&fSD13'Y&%k',F0b8@i8;r'RE?Eq7nlb.N^>/4hBnC2_HMf!dZOYGbBOegNB//^,!6e\HL0EiX]Xh
%Hrd9n.Z(BFFJjD#!%1e^("o,'n$j9hbhUdVd8Ym?Bsu,9*mJUO#[R):kib5gH!>*[N31f*>)[cH.Umic"]:(0HWjZA+^3A9]Q_cV
%)B8G7_tJGXmXp,]jZs.j=Ja_U?VN722[$,`b+4icC0Nk&fKIm3XmtfLdNW4mJ\5(WHfGNW0qkcTYenn7"BAs6j2?/pG=u1h!m%=H
%Vg3kTV`#iYcD#c]N0NT2Zhl;Nk6>HkZSM_U2j/JD4YjVZfL?K^'a*gPj<P3!P`Q?7=0oBCk3Nm7HJ[4O)(//t*Cg]T[tBmACK*l6
%Kb1K+76g+*>q5o5^=amTTZ=%R/NU.o[Nr^lm#1$C%3Z*PF`+#*ZR<On<L:oZI9bhA/Xo`RR`'Z"g0cQjoe>ecKGa'N&=&#ef@<'B
%Xs3Ju<b[9MG@4kP_jL,<e4metTd$kR)#ObU)?B0$lkYsPRP9_Pi"6^h;eY.q'Odt0mr]Z=[2(kXP0C_;#@"PDfeWDp#5L>Bl046F
%:M+Ep9p6Z3c'`,b8J*RY)W?\c5D(t4O;T[eIro.&Jpu$Of5/fCa-s-;'?JdX+VJms[3fdG_ne))FB'j%]=u\>E]K'l[+/6E\@D@J
%HG#o.nu4rM3ifD'6C?"ET7UMeaDj;OC1[PXNqS1"FAl_Y(KUnfq[*%+b19MP)aSUnY_R*FDRBgT?d?4uIlcf4Wme/oqGsZ[(?;RY
%]8(>[@3:UtT]MXpAGfb&(n9p\-&XfcJHK.V,?ZbASq"tr;)A<5$:*.*=IN?3Dq(mA'p1FVi/;oPi!\cbLpY\H:(pW4fU-D76dcJS
%3Vq9Lj,-9G;3u!8_)sC;!lL4(4QZ_UUSO2!nt0K?ioO4S@EZs4Bq+q-ftGDOYU#.6Q5o7!Zh1O+OnH(rYb3i&K:%o41l\GgiLe72
%RoZrrf`rO1[^"c7U%f:]qMo;,/J(6Ukc&%f):m^aD3l!3C@;H@`bnSXWb%u[H@CUKmV\Q2hf;q;(L)3k)`*70[PmAkU[hTHbrBqI
%'jXZK2XkpQeZStTg-\e]A=r0c0YW`gl6qQ@<1YFjS+UACNuieS;Lp".W&>I!"*l'+G;o*?IB<kEM1Z\ELSeHt^Z[i_@5K!ZbNel9
%7`L@a`n*3G))Y]r_LL+:ND01kM;0:ARej*Ph9)aBks^u?4e"=)kmk"iR-D#V/oTmiCmt6U@2->[U(0P`;M#5,AS_K8)H+W][-6-R
%eEcrRJo)fl/@)idH%[#TbtG"@/Vu1"BT$/P-7i=c;oPXpcHn+U?l?q[H^_4nmNT$^`\R#'BIiJn@UEZt3=+q[_A2!0'kSE=&j<"g
%BZ7;/XSO1C;(jip&!&3?OQDG41jeTq\n?_5>?"m%&OXa&Au]39gE(4tX!s'6I7.b:?A0-3ccp"#\a#A,d>r.`XNIV6DlK>9<JB>g
%``R-/]M-9XmK&jJr19uU!cT`t=_KP0O-lg,WN,6H!X,hFqp8<o#5bg_ZXK8`s*f?\=dQ*c4;"N:fROB*HU$2L>-dm>nY.c]_KD7F
%3nr"c;2lQl\b[0p-[+_-3&nP?WnS\$C"Y7#=_d.&\_+_EA3W&AJs]cJdk]r^-`1f!,tSQ*N3.DBZ64`qonoUQiSa!:8ITc&X2j1G
%nFK+lAQAJu"52(Maf$]+ht5T4f>L;R!*'cO^]RYdn]>'Im41JYlEVA_1Xd]%,/e-Q+gJ!)BnU8j*DEM9?`'c8"h@+M+udV<]!?R<
%"OOH;UjtY0.B@&Y2,cDCc%q[O*Bi-_e^`J3ZTW:/kUZ>2;KG%0K1?iqU<6\C>hMrdXU)sF?(16HBZKBOQ?eW;bgj(3\fLFM_=iCC
%P-<966Ydp9-P5:EmO-)angtK1(*UC(5JuH%.\DrKaEuYkr]l)"g/k*d8;1eXif!;:J_[qFZADoG-U&AId5F29H40m&)OBMUA@@:P
%FfbJOSB7b>NEUb;lq6=\75n'uV7hQpHVl/N*3)Y:AihZpY$3_k?.X>]91,$YT*:E^6I=7lA'P]\78^TbQEUtcUTDnm=[%]/HS;$k
%e]`\U54e%\e2AB$E8*5&Ac)t5fn+-FS!hn`rJ&oNWGC_qOtCO'*GG?Z<noYa?$#Ps[k)EF&Q8Llc!o`FOh#=IDUGRM_`G%/Y!*De
%eK7/qPk>]SBVo=E=B^go:3hq/3iR)bkfm&nJF/5kX-3'^B/'96gBW[saCaDi*W&J60rq6n?+"8J:e8h6_br#NDq<H5'SY)&9_@lF
%1N6DqiSnTs>V,s(b>;['hib=X.uIssAZeaB.TmWU*lX(@.SW#2'0KXAC7cVRbRh,oh-5LcO<\8;kS]iS-,?"L.=cUo9,HTSDL!f!
%G`lL(h(agBMTD_G0H,@0]<1ApehBl;6T&/?99]]t?#;f4]*5G+MoM5-2m@P;7.G:WKO?[^%U3cCdfs%$kg/cT'[>hjmMs>9bq36V
%SOV1@&`$4B*SoO%=e,54_cg;-lp?Z?R2nY%e9DHTl$KlP;2"+blZ&AOP.Hl.a:.M)Tg@#3@Kl='g]^/U\';-)9d9!,QBDCrpm)*9
%MV`<8%[(j9!r0'sFDLSpF#R#3T=^Zq[Y>UYY8ROZP<#eC>A@JuT;>,1hh&g0OWb`H4a9]0&hR94R#$@#*I@*qS=t5EDY!]XN(qQE
%&=-j6!$P/2^?dInY]83aS&NG6cSmCu6)uD/9Qec>'J!E;*i:>`c0A02>V3k5<+X#+QGr8X=)WiDC^s5N':a>&[=hY^;j3]NJ46;=
%Ci8dIne;<cM^h:r^Rof!Pa:C`P\>W74W?UE'3_Ic$-Uk/R^B9ZX'1BFq<TC<BhY>h<Wi<U9nb.-f-?cQdm*tX4$sW6&SS?dE>^4!
%@/m53.nTaD]f!%L:!7$$a/R1%[BcC,\ohJg<6MC]M^@CfkU6d@<mM`h`K;%E/`Ng=B0(BUHqP[M\jIsr_p;`iR-:5g4Cc\[Bre=+
%*3th@[/i"t"3q[a,qNApfdQ[J,1VpkNe;;-Fe#-/K,^oB?dZs3?V7OA]/-+nH>]2V=7ApQcYZm7E\,ndpP;&$5/:Q?f[8lu;SE'1
%GDBBIp3*[:+O_:7rN;pjZW/ubD,?u]cHs6!]T0dVF3K38Y8g!=1ZUS]#;=qkWS"gbS#%p:ln<%sQ5u76pnGo1!:No7LO!7/3:WYp
%>!RNWV<iIiLFS_aPZq]6qi"Xb9b/;Y?b;RX1>U^2@%;cn:7tOPB1mKL)G\/<+0FnWWYTQL(BQ0U"X^l5g341qZohQHIupZN&a"X-
%Z)+`$/ASa[C&gh6QJg,kS7RtK$(V7rr@ifSo.YS#jp#QBHlTX8aK)/Mo)gt[9u$PMaDeP)qU$W=SYOLpQtf[7]KF2A#Hs%[OAo1H
%a4KB`b\7p%AG+X)nD,]e%gE/+h*hK@MkM5oi"9X6br!E9eL/Vi'"f%N9g9<9hlH$XP4'5n79$5nU3=//?;h^J-Z493+[h5N(:R=r
%c*=+VA^m&Un"YjsKCN]Qo;oTD"3o!9<dbk1PM56k0[%jAR3T+<2uChKN?5rlQ0E4N`,-*``P1`=4q+g,`KFOSj4BG7JJAXV#&%=<
%RcA@j/^oM-gU767l;>'E+q22,jl(iI4BqAc%aD;G/[[g#ZLr%oWekdC!=uV2C4l?OEjh_hc(0L6CJ:\'%qeZW[D:1-fUP+YjS.=J
%H-U_Tob)19M)L8O3iNA$jEE:W@Jntt98T;U@I\'(25pmBfqU<BPj<fALO8F^nQ8>YN2!s5+^l+3)DA.+grX.lX!%3R+rjaH8JALi
%k%*`Am!C;pp'U\o^E3cFL864p3X!Q&[*HG4d>Im^>6%"Y@[VpdTDa]Y7C.R)>V$-ZHa@8=<EDA/4+3GOg&T3L?CjI-hOUSIIUhKd
%E5QuZVM,+lUaf:sGC6SHC@R1/$$L8n<_"oUF%2XKR,(0.Hg$Kd@=Z8/jOk:'>08+/dDj%82Bk8r,@d"h@_u#Z%kla;FO4qlQ*TJY
%n&W1_0S4WdX/C<@R<8XXY&<=2-<mLjDPr%E:Oe#"?VG,oY@:Q*bTdWJb,Cq(:dugGP,,^&&jl.gm5da[%'#H^ZXbuukOrRD@@a=I
%P]Xtf$FX'GYZQ:3R4.VOMr0&=MHFQX!QaJJ]`(KUp6L@+OIe3!33pK5)a*kVA0,mmHG`<HrAH\WK\`f=Zk9j$=3Y/%Wc-H6IA$4e
%K:UT1af7\AYVT7^k3;`1iPq>VFtCX1#:1lk+D:nsZdg"s,G[J#o]le,Rq\II+67(]Di)5SVW$LjC`c;N;IRm08]@N=1G$Y*WQ^_4
%4>duZ.qlN<'`!K\g"5Hsfk(R1>s=I2MJQY@P`oN)kNpse6!U:BgC9Kc=WO>#Kr&r+RW=t]5YjgfdOO%9Kh@hQ3QXFgC`Hli0+Il?
%SJc7'U.0*:o&24,g`q?Xe!T]/A\$IDC@aim3_2n7qsqtAg8F3o)MN2c$gdH.=@?(n063-$n!G\O/a%NGj1J&VcB;Fa'+i0!FbEdQ
%g;6fCB@W2dY\f+d(m1DXAU/IP9f?Noq+>2%%HM]C,oDiX@@POtSOK"+(;'WWm*[IV;O.T`-\*o8XI<Is"rGSC4.NF-/UFR?Ph`<Z
%L2+>=<Y&_>]e!q_\;e@m*+:J6"B0_'2hIC7UoF40C/3L(9S')!T6nbQE?1m];M:e\T*^f-/6[I^D^8+kk[SDU_L48$04"jaTtaVU
%[:!9m5KPr(<pMM@!L^1V-[B?=:n:Q!X3kV!H(/OZEj#b4"!Q=%?-gk[(rFuG3OhjIL8]Q##T\ZM7U.%nHM<r2UV[mhYLI%rg?%X8
%b,U`9U1]"[[QVf_]EV.t9!Soi'uL`gO.'Ig"qQMTZ&kLe_W$N*eQ&"p:+E`X1fh%9](Y1cWqS:+ah,)uCEU1Cil3VYfRiK%(8N6!
%]sogNDI0((>q$bO+QRG,1bh'8F$n!Ff?2CWoCf:6(kk/q$M7E.lHtG&248&^4UHg*$N(Bq]4d[*Y&5qr+Mf!0V!8T$ZJW6G;'_A0
%[(Sq7ZfL]QRCg%610`/qi%?JN4K[^SXke9+8SB1*%)k+B6>TCk^+No*'P7gn&k<ms_-nKlCrn#I9$WC@"H1/Je><Fchp&C"^7h-(
%bDXeI<mQjTZnA%UEc4mY72#NebB*>,C>qi=Oq/hA>-bDZn^;i6rQkG\dCr_dlY*."BYH>lh51cYCAi;JjP=5IiLYcGFBS"&/:7o^
%PYX\(D9RHJ0%7U^o/ahN"kL@^O<Bt"]t2UVUr6Vn/_L86Jm2^J>i;KmmEFcjgs'dp=r!(i`N#a0"H0fQm;4U>mA)2!E+k(^:-.Tq
%*K@$l&V`+&eAR[*QDE<cjZR]e[`$GF=",/T7B-.f]>pO(1ISiDPMKUV$7UWg)!E3"+t;Q*_DO!\rFl]<+<U$*Une;(/Ti@2l3`3k
%'PpK:Q>B3>=:@5BYlb?"BT+/O`JZFZeUS*p@7[r*'1PiH+\]VnW)l]Hlma4jfSjc0\.#%X+p[;ai_NJ8\7A0'Q5)KBH[l4OXLl^T
%=q9tYDsepPYc[nelE?+Y5EOeG,H)5dPjc@W\Z+^_cVY7EH3X)jW4'D#X9U[cNu,*cjiD'(RqP>>QBr(h*oH%Xad^UZ4u3qbT$MK]
%#eT"MA-1FuqrHF>Fphm!+q]3o*9_X>38SNYcAm_'Q-QC[gHlpg"r0]O:4!B)cVRm:LMj&'5f0?,9+&VD,V\"S#?rOW66\[8E&J@k
%ki@:KpjB<5FOnq_Va"p2;jL<fZ[l#<>%*^lH/UAceJVp@_[&'HKcJm*`Ta+h(R[@-Sh"hpo_>@a7>ap*$`AZ6/1Ifp@_`Bk)4hXe
%L`MgF"$k^.l=E)c(b?+LUgaQJfUuu6!emC;.(:KtBCM>q)PeQf%B3U8aep27YGhkh8C*B/99[P!HTKN^/7X`!pG:XTXO'O`c<1u*
%QL(uU*62,pT9#kuS=7)9cO>g0=bWiRJo1ekY-[<ioe;q^M3a>J"Y0E[%$HH(<W1L#36L=,Pr4UY=NN"d6#o!X"7_Tdk0&\0JgOLe
%qd\&t]4$')bHOI:=ApD;_6PQT>jsO;0@"6.P?qhcG>CRm>.1UiCTq'Dba9<&eI-dN%OFF^?'F*kf.RN0ZCPpaK?YRl"=/Cs+hb".
%7HM`%Zj#'Q4R&BIYVr[j$t1/hYaX](bL3AlcF09H'e1#J,Cq_/1>;`e%lsH0]OZ4q<ls2\[@PJBejZZJ&[!?O[HdSqf3@s:d*pW1
%D.T`qqWZMj,O&=9(ap@qZ/'MSkanFsgPhcXfXY"*)V#;.Vr:*,J_=[9Hnhd/fS4uLVAOt/=gC(JTc,Ju$fHpG_t4@qCK+;5el.c6
%<@&4#D5uT_kG^/=OeT'`)Z6u)6:GXTHR`P0<"g7SAVjUc`oXuMm7f8X:,T`QcJ[i=3<sEFK$YasZ3-5"<L%DtWh@cd98IJS*nU9g
%$>B*`IJ'6Lm`RECE3O5H8<JaP3Em)Q@&*?8FKsSrLZ0Adj]!N`#!:t%Id%c8ma_7p<?c-E@4mk=>1=ckTm\&h>DpLkXRp)4;6VHQ
%;$1Q<eai49ZCdWmK7Ae2f#c!A0LhYd@TH)/->T&"er/R^YUhk3X&fNo<H4fE/#CrUZOC0-?`Q=qIC:Ouo(9T[F^?a(Mksf^`>ZNk
%o,7duH9Ss9.UM1oV[E`(s2&Id9BKG9:]o1pPAI-2.@Qd8r>Gb=A+11UG4/73/Qmo2gE-,QXO4>NNHU+TFC0k]Q+@cgONN\>j'RaB
%GgV`O(-5*J4W.Hm<rZ=!%??LcS=lrBo_/Hs]Tk0T`]UiBH23,CONA[*FcIQK#Fpo\=J9qRnks:^X'/?KPBRd/f2HZSp?5^]S'dG`
%?+8JOO;,%XUW6MZOd%)#[mcaRQ$S05KhCp)[7*WIijIo_/\.iJ=i`):c%?KHrF"t58f#EDO3Sh]cH5P!TQ6u]]C,M<Zo7+FYgMU5
%B.t6%+*$j0]>;kD:OPr3Pl`t`T^-:17pi.!B%F!Y),1!E@kCg0\&Knk'Va1q2a=N]`9A=p-Sce9F*C]jMk_SP.r4MpS/135o5j;Z
%*nD(c\Xamj;9TqAijj6Yaf&[M]0+%%n-Au.+KDL;@amp1b,cr!YH)k'C@WbHHA,g,b\H+pNq6Lm9=.%Gf@@780G7@9dE5j-Hc%@I
%77S8]5)@(C?eGP.C\.<A^^(S66Arlp&>X!;1mBCpL*nb8;QckjXL,1n.V82s'F7_)hA#OeV/<Na]ua0]2IAb>(mNA1!+"-1ciegc
%N_p2;ZMT;\c8)AfV_@$Y"Qrf:rirWQP$Bj_q5!4+Rk;IjknfD57n&=_-G_]HI*,1_j=6FCnpE9dJ$#<9LH2]0gNRdu?j\)E^04CW
%@UD#+?#>QTAg_IIg,eEI9_:Eu@P?1L&Zis86cKgILP=?uD(7mD-fZ4nZj,>eFlKQ1]>'B!lR4`JpUo3hlNo>.\i#R91<4e5Om2Pt
%R;qr;lD[B+PP&`\;p<ZNH42Y3><ZQ0TP.57'-=AJ*.i)So]UQO_f-IViOW,:U,l]$W\"eTaAtCW#([Ug'!Ll8g0'rsf9)kSQ0TW3
%*;TU"po5-c8Dp*$b9>3N<\ujZ7;*X?Ie4N\l6p%`<S&r[WAZ+qF;%t*_E93;-Ck"hic5h+WNrM:13jdFG>\^<-8"Dk?46[i@&6BL
%6P?&7pr(@6dlR%B#AO.oc!,G\W5Rb2A4:\:=!h:^aqAbgCR+'4Pa9!Lgn&X#^o:s$F>]IgJneEsCNX.'b+`h0KARaAr[e>o`6_RQ
%DGIg>%BH?M!Q6iQB=^f?DX?KYgs2"F'8pq:`6aamm2,`qgH1Ld>P.Tc!MNNWi%(.@hMN&);J8A"Ue2DU`O"c_((,>r5b.q@OSg$!
%4\bV`XIb9c5!4:G24D1RD?i+]#TL\Ojrh+iE,SZQoB9ii$`R=Lp(ZZUe1>a0L,#S\A8fKiaYusGf1".eHb`2@=Gg>ZCE9c[oBhT"
%2@?RLP%9/W+%.GXW[.9f5I`Al0Z\mbYe>hT1\]?94*3a&)KO:/Qrg6'@`0%%Ndk_nGD4FB$J(?Ve*QJZM?gif`gkt@1:LXl7ieoc
%A%OO.h*)Y]],+6-L]!jW]^3V,g*$K0=Nu,+dI!Ft0ID42R^:43L=+d*V5\EajUY[Ld8l=[X1A^JCmI/!2%eTUW)8n6pl[K=>I=iL
%8lL3p@ohEu[rL/\qb+7t:nr;&YQU40Mm^8i?>WWqC<\0T@PsBmZqc9:>3M=`S^HL@2eSarXhj#diTq;R2t(U4g<i!bdY.+fD-h$9
%,t2L_Jg;1iB2ZNC/T<UZlp0tFLfp4J5j4?^U6:WsHL9n;>4,K9,V*Xm""Y-"?5p`u?1_+r,]Osi?!D_WnpDBUk\)Ss)JaNgMCZoX
%;6Ic)fs2M)_\klPOb4*HGiKj::]/2^Z]&B3oL37\7->.LfWC=1WP/A+3psnHVZO<db`s:\4C.$]AOMAU`Nm&Rr)FT.2p7`]Y9F[5
%i%r9kkMTauQdNnDk'9^7Ei2]afI#a[V$h"^Yh+CCn1./BZO2=d[;+A@$)]\@k1[-'GA)pBhLj>c10/DLNBNmoXn.tZNXlN)6'"ts
%@_nItfu:>0E--CTUKAkT1G!m-5>I\b+pV<rDN8QbRbl2;bFu[)b8\7@G:#OIm4;:4fC\;Jk8>qS4%`>='YH33=f4O6GpZr<Y2u`2
%pF(L`)Ifmmm#nP!_SP0Hot'f;aAse?7>m@fAR4Y@gt?p)X4rP)#'jeNhuk6>&.,&=Ype%?6\L1e-o3##XcCQNWp\=tXuJX3X+scN
%P<ZnEmSlj=8>AgYFW+U*1`OtJr)jIEN@"Ft_0IYc#(,AOSkjYumoD^/-e*'s'KsUjiPWbG^$9pS2Q&=d4O8P5,+I4]"\b/'A:BEu
%1n2Wg#/SPh#Un=R_is4`@gS@BZo.%4f498jVY_+.3.fgSV8ha.CNOTh"pTnNpE5jo6>qnDq)#m&-hdXRNupe0??T>tJM5_F>(fgl
%I;j>3au6%^-`NDVkMVT6h54p\<o(JFGn8JqWD>8JdJd^7Yh_FbWF+R;,D,7[WW7n.)[&Xk:4'A*dkkh[_NF,-:tqaW&]E(QIIYg=
%mFD+TJG>M%O?#A@6E]Ec9`c`@0)'VVWmsQj\q,);Wha<)WsP6kq&PfkHXX"Vq5G5uFTT;A4AAH@]bcEsCRUL)SDJ6,^Vm]CbB9(:
%V,o"Qf]t"5Ag0&B#%!2a@Ee,F8kI.r&"^V;Pt+C'jupet31+^aj@B5to"4pEj3RbtdpK98r8RCmT=oOMp:K4R]mFu&k-[g2G5d8T
%f3A'3rq#gKZWH<C:FJD(q+34=r57XWV_Am9pZEXti'%,?EY;+_rnm2DMSK,9_k6qo+T(b%55EaNs8G7+aihS_IeW;d0cp%tjb3[,
%CAa&nY9s-T>=hgW4ScVNLEE()c?8p:CL$WnL]7E]%f%cN$lr%$a?SbIYS8>D1*"m9'D,Hllp(9_)ACskr*g*\s50B,'-kC2A<BsR
%nnFZUVq:#<aAR#l\(a=2f5PK?B*"V\%$$:S(!Rc/&MER:_'=VSUinFtQQPf`4X6.uF/Luc40@ALUK2<g.K!C5Q2.k+&P^%>p9Qqb
%?;$bPgper<>MdG`='+/=G&ItP?h8FsEgUg41$-P**)_[b?j$B=cS?OW<rAX3p9i%-oGA'"P2>WOHanON^u`PDc8Td%BR@A#NpPoh
%rB(b%h(iD'qjcd*DOIguroN>0\<bB#I93H`kZsg?OJB2D+G\f4-?PFs^(8;;=O#I<Gc,popN'%(EFPEE1=0'4[o@XW)]s*M$0.H/
%,3&!eGl'14O\\WjB3Qa\ZX\k,Rs9q[b/tto]dDo8l^P.$Nk/H/I9+rhFdmb`pTlG-j6U#4En8X4StP^<a\T+^\">(@68.qG*MVp'
%]6-BJhMMeB=,Xloe,/9+$p4itCUGbTU.@/)P9]8^o(qmf=Po5+GqMP=\i/kTo:3tdML^>,Q3`g_hD%ZAOn1]%IijBDJ+iQEFQpS#
%^#^EsTCQS9^I@5LmrUddB-@b.cZo?mCI,^4Uc@Tt]gu;nOIojCj4,4;gNdJu#N^3<`T6'jGKHcKrlrWk^S748d]!54lRg!pEd[dS
%H_#q7V];"J]D3<3P&DGs?'"g4fCF3QF8mM'hWq3QNqohjFQYGK"krerq2T+^GntQ&/oG"meHbQNhD%/98%_V5s,bB_1#+)4Nqq7=
%EGZ^)-U7QYH>Rk>Iq)'\C\>5LU"ZY5o0jI%<0j3sHd1\mp(bbq@t%"?VHFVH!*(#4g<MI6a.=")oGG%"OmV)!^A5lHhn8j^`J\pV
%=0Ks,r:T,X+o;k0BF^L-qTgNRq>/p:Mq<G<q9dN;p<sg2hS8p]X*829pn(@]"c%P\s7.%]C"B,/lml:oCjU#^MKZNj)"2DMe!urR
%n9OKl!up.#9s?nZc*+<Ws7UE:GDGKIH_th$Nq:$`n-?`-T)TQAq8]]=^]3hB(RKnUrU:%VnNUM+5Pa-=:4I]bnsk3dNq!5Oo[V'E
%rpo@Fp#.!b*H(Ak`UD^!4+GH$*Zik$Zg5ZEq!R/4jdU=:*qA;=^O5utr$24,h-[o]k<Jqo/B^7P%s1#!:M6$_or.?)0E1Is]/u%*
%;S^0[G@1[TbC^k]T.aNbqejGfoXOc:bYN`abtg"-s6f6CnF7Z-]\G4_*->P?g%/PLZ==;mH.YLZl]*.dp&9\bp&"bMJ+;r>=79M2
%4P\rBY3pVqdtka"g@_)A0AaCu0t,?Ss0?Pk%rG$gp\rG+hd;tiIW>AWV^&tQk[X.HhqNZF5*S"hDr4pi=letcq\mcGX0:Dd]R+YM
%$9ep`/W]diMp(]ThsTXjHWt$0]TeHfm.Y.2ci<CWq>Ykmpe(933S0;+YJJ2=O6lQ:=20%Nmd*`]hUm5FcGeqK)\4%%nW,>dkPt(W
%7:Wpt%mU&?Gr&f7]moY5r-u@>qu43c(H^-+f6c#,f+3;O]6JbU(V(PV]YB$Qq4sos>^_,$k3UpSRiPuVLYhWMH%,GOql@1Bn+KJB
%06A"0<^(s75Pb-N[jPN'9t:KgSB#6ajeF8K2!'apgu%E@IJ`0nTH@M>qWd)-d?qOg0LoX@M]-Xu>^)7YQJ8[.*Gr?^/U+S`Njd`j
%QM]/b-01t8bO$4nj0@]pG5eE2bHJZBH[5;I-P;kq(8$+O[r2iTXh)Pdn&X'U=2P^(pii[(Dr88+q>$X82#Up><A5MD?fV"]jnlZ5
%WkZr7]2($:J"43%qtB%9p!<%Ih8@g5GC49]pFIC>+1>2CEmHfGnfAV<IFI5mY?k;fIf&j:h$7Q0,G+59iRf45/AHifN,63E=-m!,
%rq4Uph/0W;p6i[%mdUbOEVK.Nm787Bqu4jLB.qQFIW;f75b#ZP9>]RCN47]:^\H(N]B7@JFPhga`trq:p%uq=2o#.2pK+QE?gel`
%c(EeG!;DQCq:4f?n'4+2I,cT8eDN;'?&/ISnRqLO4!)OohkTR@G)bLT>JO\)bP8_.n<_QXIX?5-qVCC"&(eRD\_Hm_Vs:8H%?FEO
%ftHo<pau+O4WOLK0nG,YWBE//kL6.F%rDL&Tu[(NcXck34jK<5>MC7g)Wt]@iBcdnInY4/O<4+B\B>Jl)+2.,IH9VqaZj3hJ+.gE
%fpdnDhn;(#\*(^mWkIrnin\P!0(-(XO.51i1kIs2e,(R%aaLnM?_+t-_`==LUXXJ\:UI%q5/-5d*4($Q=[';)-TnL^TBB9WQToh<
%IfA4di^45@`M`'I2\4`Z\SJo!lS]f6h+%20N`+gpB.kppms-+#i;MAu:F.OWji-?7SricCZHRL)Qq%gRh=HbW_KL(*>4:"2n%ZKG
%]_]O+7K!7U+\ukk4"ahMFRaZLomhB=I?'6;hacFM!r9(4$HF4_Re?Ou0r)cF^HZeQb^E7U8"9b[":O76I9@)0Y4#4)+3Ro=ijJ_H
%?I^:&mGF$qrjUDN5M2Cs=>la@%Oeh;^L^^_p6I)]F'ZXIb+A21Z:9;Xj0O%g>N_To4SY;m^[Ht<4oas:p$;4mYKnlJ?gRBnh#,9B
%NUNc,Jl/.(^7.?tkM>:`(N7('4F;)IlMU=e?_)WF.(>^JB8=t'#dlf&9?5aV/12f(rYRPCr:kg<a#uJR*Vc:/`!='-mdR2=Siu?p
%_^t7tNI-[pi*UnGOa,OEgTGbjctCCj>0BFXqq,=Q5Fu#m@kaO%ej$Opp?g/,Y\u0I0DB&E>X%@Sp[+HN=*qs'_sV:[42/m^=*o&$
%X*`@_maB$cT->1ImI;LFEVD>TZcbS*rH6/"%dVf[ZSssI4ur2j^9AWqH+=0/,Y-\B0QufVdt%AU^ZPKEFD09d^TTq0?G&HdgJO%%
%ip?6TYHISpePCtWf:^ujdh(F,dU'Z#G^&\U?15rI]rt;H^3[J*8Ef^?rWCh8RmBaRhlC=.pA3e!Y$:ml06ILq!6k.Qh6HAh1Jtma
%(g]>$9U%\mGqABA@j]>co$?b#Z6&pK5A$WPRS8qngbNgZ@.)G(U?n:PO(IX&jLH[#<6IdpMt.CblTBc(PS[+E(M1p#Nk$RY>a3"D
%DKF#jH!n)+7hSXiAhM6/(%K+Y[8/4fA^=a*MamZtF&@+oMhaJXSn]n#Ml2etZ=bkPA_)@V.*Z8GWS-qs5@N*PcZf2piH`$j]T-pi
%nI[]$c\qRmGB'7!n>,i55Q0\&5:97gS'UFEHAqaQ*fo2g+oOM\3;/]9rnQhVqIu1^j1=q5lWQHSCHETREEtZ/CWCSb;64QJG]Srd
%e[;0`p5kWKF*se(<UI;rIG1]E<7[)Pg2U+SY%gaD<LY4"hqUSHqk609*KT,s%EUf6!8qi8IJPd8a(_p@&KI^rE>i].RBi?I*=7*K
%k^VKT_`&T_?Q.U+EVSq??d:<SH[5>:Da&5"i4TQ_fNW%06[EhQlKZ[;pr<SW\Tn)Dr7d.]G;nC6Uih*8IeN3m])WSpZ1g,_,7EVN
%R<SDK64&!FcQdt6Hu-uPr$7N9hh-XRn_kK[./s8mPl"T6:;U(P3=4g:hoj.#5@5H1I/)U&%f^M=A]d@-cN<nVila\fNLj1G_S:_s
%HU%>:],HYnRO%l\_tcerj+#.Rj.T9J:Q?JZpmUb8+8KOT*o0W2a476ZYML<ofAF6UCRt;@f<b?Z#bKf7*p"lU_]/<i4Yu5]pGcT)
%3%Y)Sf/P^!#kt8YmhirJWD&d9UkemimY^CK`fM:c>4kF0a5)XPKARWohH[_jma_-F4^7l[h'9ZGI.9dEP)h=/nVQ`.=Qt%2oK1'B
%^KCF.1F)^Un_],5llP3%a8#*Xrd0V(mb>#gJ,K&n$0)m&^#/T<[7<W8j7:_q:%B.mIA!a9#O^5*`dEh%hdan);d[RPcS$rTrqu:&
%Ed@21n(o&pGkM2parN.uq@E!g>MZ!R?@;Y;qmYb7Y?i;-ldpJ1d>_Kqi6fZ"s*?'7IWP.pBam.io(R(:4_TCnLUB;CJZjJ4IAbW!
%rs<O7]1;MC/&[GhZD33AkTThmGNC4#/p<T0GBB#hh.0#7g#oTV^A>a:oCLR@*ONcVY7>p2`?27sqU<F6jnZNlhOM@YlKZXIlT=.\
%8,q7j/G&0;GNRS.?bC^bm]Q89Rh*o,]W\NCmMO7Fjl(,>rFaTap["dQq$$0X;s\/kR[`kh0f2XJ@ssT6rF%F,b5S-1oAMts+5VHr
%ro1.d^\M?(!tY.,duj[i0AdkYTO!#hRm4Hm!UeTElu#&(&UX*s8&rg#nT&`a*$$\&a32m#Ecer6*A8MjWShA#a,>7Pk^PTR?66<S
%H??fIMW<gtG-Im.kOW($87/F6o;FfCT4Gi(G`TdAX/LGe[#$I(1:kesl#FTfp&G.83c&79W8XGf-MG*-,AcB.[?j"Hc56?klQ6&>
%pgcr0QP]+>HZjD,^\tZ&52_F^Tl5r]'%:iAr;3Zr%t7m`6jre"2r=9fG9ek*/HXBK][nBVkt#0mYKuj=^\m6[n'56GrV>*AjrXb)
%oX(XhGHeK8<V[.p-$](DloQ+S^>.,8PR$$rVmU.GGHIC)1&U.,:QGaqH<ksrmG%5VQjmuZ?g_0^+5<=c%EJ7)BES24H+Ql$(jK_4
%jpQo0*m[J>>%iu5647N'ViQ>$hjs5Z*:a4#CW?g.cZ&l2nT%]CSK;u^K,N83;aC7E$Y@AZfqTGAULL`O&:7CKHdpE'IZ/b95=Rg4
%0clHOoB?,ilP&btll!^gO7?U0h8_G:O+*%_+60'.RA1kakf7onILOlOn'6)&n2tqgq.QDfGY$`+3IC;am./b0(OP_Zj`_ep0RikF
%):FGhSBZ+>K@o.`H8Jlrf2l=o]6O)0/mmSWHH't)EH/OiKR._3I1:)inIB<[n'Bj^s4a%7s82fnontsKgU6)1CM\?B4g3bXqTWFT
%q9uK*2BVjYVq.""ll4pr1j#@_Tfn=W[r8EUm<M8cm/BJ[UG^6,X$,1UebtKe$.>!.#V9]9%XV_4h(l8\/*T\U]jI4nFFVT.:Vd6`
%.EBba]RTPMpQpZgr]$I#]<oq?DP\DJ-Qa>OVJtod?+$;*jE5R/m]h_C<l3IkiB3]bYH^*8F&u*0@rc/LGrZBtj_N0RNX9'R5G7N6
%@qs\,$R]=I7pl1(n\m.Wf,;=JPNm)V`S[SBqT*NaI7qN+RQF\o7r.O+brq<M4A'C,a7athjrVMRNn3"G\)s8iHJ$W:HVF.g%Lg?%
%2<T.AltF[-i"b6bc5k0?UH/'&c+3DPbdh#sGs(6Es15dfq1gnAHfjpP\)j38-Xb3d)oU-qHi3Tm;sQ!>6]!u.)=HBQh-!#C8D:jB
%HEP2KO*TeY4@63h4V$oE/7+qROE!M1kf\V;+O..jp%Oec0E1asM28=K5C7D?m]ZZ%b?ao:h-Vi0GcCAGqtf`(pAB@ro4[<3*m6D:
%2gfk2EYe%j&PmDuq$6Y75+;6<BNDOM"H,Hn>&2mQm[*\2mrfFt?Y\onB-1:fk8/4<#P[o5m@]q^^WkqCYM$+,Ntld8(Ctb41?ZE$
%EOJN"gDkWKUY:j<o_/6QDpMa[miC!Qn=p$]2[s8@J(dE!0CA5<qntcJ+mkYDBE*DMlM[mDR3-]]0=L9knsj&.rjL;34WSlV6fQ+3
%%nrQJV*=kUJpZ_G^?G.&I*!?'J*_T!>8,,enG@JqO8gA`2\:dNh,W"]Jk?Y@;%s2HO-^CZ6pcJ3\G)L(mr*^-Xh$UM'u8MJ)/%ed
%qeS2BlFL`df;`Qu!ZPUYr+""MK\"pCQGH@6)1:$PHN,bO_.B3\F$!b-ccL.Q]p'1-mICp;&T4l2i?VF8r*pH>@helm7aXFYd19U*
%[d`cng*lgCn&GCg3qf1,je"Yes+_OZrrfr`n'PB,nJtni@?1=TI^t-:Fu6>G`#dF#[ti.s_mG2T-MA#Lgj>Dh?SSejrFbGZ^JB:D
%jl<j8^Kt`;HDcP=h+N0$i\.,Mqn:JAmG:eYnfQug'.]B@>rc4\.0&YVnM9:sO)k/djO?u/(VeE$r^SpHr&"0JX`"%e7ZdZGf\k(j
%o_^F1ri^AaJ*8B]OqdFFI)G.9oi:MiT1eu1k*Z2"mh5SiT:,YQ^\RS9Wfk-l_aMO^)"&%*)Z1ml\>f`'+5]j3jPo"DO-_"XfC5sd
%kC7fSoalG1cRDH_97(j\iTTNO]_6E)M8,C"oQP`Cj,^qepLj'D?iH%DKhGNm5Q)fE$\*q51B+d3e"<q:c2XX;Y^\"os+MP_p^Xpu
%Db4\nJRlm[Y.tNG$$]'(J(W6"Iu?_:?f5aLHBFjQo0Mo]Uci!GW(Ynmr2Xhb?f%IT4"44+[5\!=d9:J\-cSB"[M(iAmp>-urt<`$
%Y]bjW3,SH@A]'QBXoDpGZ?A.iD#G[!aPViql>\DSrS>T^iBLlHB9Sb[q[9amT3<4$/e235hAN^+j8I/K8`;%mq<tY)IX37+]C1@L
%'DV>Y.#sAQcaBSK$%;SDLJ$DArVf#&cL7U]InD9lQkIS,BEd;h&YpA*FVT:-*UI>Z6R%m`d&1No_/gHIhABE-GdDbD)\i<mj^6>/
%gc4rHmGEqJLODjBSXl>^#I@K`>3!c?K%c]D?hr=,Q%.UR_`b.FA/"u_oeLH7_quNQ:L=+qn!^CBXhF`GeFoR8Rk=OW9XPEZ2QWfj
%C2.`,KXG:o7JtmErg'Rkpfj]^Tje$$7P07=(r-FJH]f_`(:V9?'(("nDlO:3EEaJ58V27"-j&@,n2kilA`.JGPNscM!Z4T;#_"_3
%Rt6<XhmEk_^VSV^ZJQ!>cc>%99qhdqfLLn&aL"(rET+C2*bc?d7g2+H$*C!]\Sa:00ic#-r`^5hXbfF%Lr2k&\iF0Vm!%jD*#:FZ
%^SNWAk-f0C1f1UH3/^GGh_rWaOFc21\3"VqL,V^'HfBbfZ4h0E,$iL,*$CU7eIG(9]cL:n26`@-4;Um@<E1I;C*Geb/\qD&<3VDe
%S(%R+W&6:Oa.),2QH%f;N,-\`A]JUnC.om0*0[=pf`^_iH0&B^1eUMnmE1eYp7](m>BVF/hoZ1+3T+k.kJ@Os.hdr(\f:aZWoQ-2
%Wo`,qPhht-(.\:6jp6hal"F_)n6:ILb*5sqBkKJX7@,;SBOgGj&^,!%!fQt.6X:k>l!p"cbWdH6D1]QR^2A<"D1=T\ceS;+7'D09
%Ln96AclES(5[B=E8!J,KE@UCr-X?i(WWY-Y@c>U5\)$4>2Z2UR!9n[Aa3V\T,'l66m60_5-A+S(k&AtNk2psX5Mc>1mV'Ai3G%lj
%3^Dm.-u0l)=,0S%ND9lI;M?:#7PrE.Zeh8j3]B6r<rI\V2D\Qao=Cl075=X\-!4`j6i>kD8R%dCSj]000<$B:OC[Yj]U]#IHkn-f
%ml@Ffqf@2slUd4W''Z$0Ne9=JOl%t_EPL]7PDq$hPHVMSSU&_/0Fs7p%Z$<.FlQQU#Q?ERFbktH0[\CT.r7%blj>7;g-u7)KV_TV
%9;btmII\)uq7V.WeMG?CET0rgr:\N(R8Pe4CAB7c9q9>_Q2gTO7%$u'&*mZOk"=G(RFUCA)5RN`8duV1\a>ZA.CN<,%d-[RpXg(N
%bpV^"ET;Bs$%H0o/MVBQO#>m5>HoP^('GZAl85^G=s54MJ1UW7Up1-?722QeLG8VoRl94ajV(938(EInSai>pM5R)SoCa-1O<:-8
%i$dUbh_`W%[ls!rQM$6;2,6R$W(Xa7c5<j$?/%=f3Z?T#dj.VDJtb;&&R&sNf2J.Ol_LQMH\XUDW@Kh,GD9NiR/AT.F`Q4k<qXsU
%Z9.Yt@-3=Ah!`arYc^;S>'rNdjSm)bF8%bbLJr:n4Ib.5;0<o6OFIEm;M/eE@+)X7Z)Lm&FZn;FOXu;*m0c2A5lc;&@0pRBR9)3D
%o2GWV0WB6Yg$j*agDQ%F@!,.EQWm1<&R(1eLU+O_rSctm>qfY9">\dPmWLfPf$dF!W,;J-e>I[?PJi>LH*^R@A9\\199PLd?leKq
%]u21$Ug=ecSmF^O!$%FmBI=(VbX$Ji84tp%H57Y'U;Sf`Ym*U((aTarUH!ElX[64AW97Vq[t-H_2_raFr"+B+9%OmqRYWB;e,rPI
%%N)#s"/@h26IlDQX^\dDE@QrJ&/k`Sjn#]15tW;XfE1;-OXpr@-M^sn>#ge$bQD_7+%kg\1:.GiL4N21e4NglW2Gbn8\g?beeW4$
%BcNO+7L4R%"K5"e)&U/07+nH7Y/;ZfM4pRtTo[h328a8FO9>TWMV,$7"2i(2!Hjhd0SffC#6_M>M69X5Q,^$Pb<Q_q!n1j7%AO35
%g2_3^Nbfme*Inp[E:>\^N\!M#"VQnhN1)#b.^cZ:-TT%S[^Nsg,Mf>-+\;9Fe>gXm$;NI=R%5&K0>,Y.0rY4;`#q#e7#/_?!g!TD
%]:q_4WDLY16^S&^#6a$[A+9C]O)$Qc:pJat7La9'&eV4_MZa[E;^@$+#>_^e$ZMdX0F&G^8<a,A^/,+iNcO]Hdn!/)'*-?hjC(cQ
%;1apO[+\&TQ"ZWf;kYEihr9%A4Ksq4d*Yo7L&t&#aH8t*7F#KR65Oir_[YTRk/4TH'KP^a8r0ST#a5Bl-in!`BZBhg_[(NAgh<f?
%NSu/<#Y%QKXX?#m28jH[\M,cf0a\2W<!P%gJeB884c.sV(_I^,U'53S@MB`s=96E&$?K>_WAKcJZG9)#/:l8Cj@jD-M(ArE!Thc`
%OU@&[-8FJbX=9;FcE)qC&T&-]!cF"H7"B!O63`l$EM4_BUkrOUW6p^J6o8:Kp'P?%LkJKf21i[f%L!-6O>8MsTGqEPT]dM`'+8oL
%$%Lk^`j\[0G3%"HD\18_$V?0jJs[CRfJnFf-dpZ$aI,+N#\;REdOM/:AX*D$;e5N[b`!$gb"reX.+KFJ6K'C-Z,6eE"2hn[.GMC^
%i"Z=1,E_qU)]-gR!6\)s6jL!WDPc@@iDiXa22)+ad)Xf#9,=+43Fk2.#:%>ka>.T1f7FL6A?^Ea\24=2"*?7%A!I4&"e#)d6:)ti
%!R;1(&f>=&.am9@"!Glf!Wq8QifY^";@!-K#[q"/.>]B*K`cEgd9GYN#`N1GdSOYrLFFIDN]n'`dZMfj8R@+FjV!;ZHZ1ZYJ.7s&
%G-Yge#?+/a6Wo_b?nmDe=AdqJRN6+83C24&$jFM52'c!oO<@i%7)d/>6tr0Q'+1JUA3P5VMbZ_]J.YK09`kr+5r=GPl8bMtc,<3D
%miXmR.!%&*V-X@5+>i@+V9h)%.I\]t@*lc)$ZVQ9&X@)RBpg*g\0[,+9Z*L_e>0r_`[Ehp'%er@N#.ZA!aA;XjGcB-'1Iq2@O:4s
%EM?QKg*Fn:-U:F`K85Ra,oi%^55lB]p`q;Z[/bK*(_&F#-6%R^KWN#u".V-[L</!r+(,p2m^0f'$<WCcB^`3'"i)fkPcFfKK&(YS
%Wt@@:g'14u2hGY*&E%OtnNa;_,q6r$YVJRS,`D'tMqg/67]=,/fF:+,PejtOd2OlemStHF9d-*fb8YC;4c.SS#/LsA8.'%HJW'es
%XCB&cLk.rf3;J7E&4J-D26:/K"h0CrP"XrI)"C5\j:G7`4JqNi.`GmFZ,&-'$l<K3B4`?rIXsE)7Uc!`9di8imC?c9jJ)_6`COm@
%k5\;DQ3eHd9QU.;=L7@7LMR]A\<W:ZGYS;MSA,50)B#dC(5&JPj3E6tL<d=7Q"5>Ol3J@W5c7&[!8%QX$'qh202Ai1<NI2qYSK[;
%.NlG2%6B_W^96B6",.rRl[UQS%#Fkr=dtbK(&U*H)E7_PRb;"&kn<&CVP)MV8tNB*?>Y)B53^XYWE,bWPD>uj:K>a?Lfs:n+f]/!
%1eV;6YR6\o6EW=l$k/l\1-B^]%b+BEL]kueZpTCG"XngB82)'K)Q0AI%EjZ3Mm!,^@$N.8#fUoJjbc)d%LQ;^j,Y?T?BF0G&bcp&
%Cqs?\:q-jLXssMBs(W7l$nPP$jEJIS2*,!-"L4n_3$aar_hM#8VGjeU@tmL1W!WMOWHJ&%0EMA-04geF)o(Fa!4(44AdYW&"bVkP
%=bit)EXO[#W`\4Ki.eiU:hj+Wg6%U(lVZ'f_!GI;fSVd;@)iH2iK1rTj+-5$!=bD(,3Un<;b1k_?s?:.%MW6>LnJsiM<ZSK9Ii(K
%RY15TEPa-PI%%;AN-(T$8eWH=ODT"@i]k(e)^eC9!L$!IpsG#D'OI/I4U*D*R+52u=Y]uQO;\-O`?5^_Y#*.VBShlT!r+83BVO04
%$O`L5Kg:pm!JL^GP<om?MKm=$OVg5T&lXVp=A>4;Y&MrP\`fF?%S7@e[>r,T_El&%nCW9d.\[]K'<lXFFFh8p,#(O_-oC<*H<;L0
%D@J%HR7=u7$LDXE[NT?RBW9*F%)%'d:kD2tKETkHPf=n`J*4JhbKc$VHc:F[W^7+j9upPD:u`[a,?2\9Q"V,i-t]e3jO,2,P_hg/
%SZrL?$3=G&'S%2On;)ZD)?Vo$k`$--1U-p)@4F/jO[dAo;b"eVZVDKs72KDa-kX1uN]OT!6:9fO$@R\i^.C;i]Yd9O8F-JcV*ac;
%de\6B[Pj7WX-APP(>=Y@6"kQPmpdce7M;mMj$!-G!f@_EHqk-Kq?eGm%ZaUf\<+VF7&*\;*!X'9NYP#B,%#:bTa.#qriV8/&HQNs
%2Bll>eo[-a-kqr$-m#.J3"/>(6/s+V]0>f["Ec!0N'Tf>b]MjJh_f'<P&jh!$+\1]bsjk<>%^c$pRn0G/P]jiW$i02I\0=AHO9k3
%NC>gV(:P]OIt:=Om7iCN;E.+((.C*@+.LCr7VH:qAAMlFG#fH_6E,qW9I]:@99D9UL^MkEFGpP/S1u@$d1hYSIEAjTNF`EY(rLsr
%pWhO+m(?jZYcEVSPA2\rmklOIT=`)#8PK;4eKTscJ[PUg"Nm[8/=.=RJ[sR,mXItNUMbE^2OC.FTH_5e/%Ch#;=$sL%msS9j2.h3
%,`GDbYqCN7DLdl"#aj55"@e[Z;UBY4ba^T5+WCRjWapZOY::g`2($2>gS.N[:^+)k^X76*Ni(r"T/Oq;)[/bN`VCdQ+-Q:8rt+b>
%TF$KuA,-@k\Cq-9QrN]B58T=YOnAoLU[*PrZdU[l#!\PIVj&S8<Dg$O"Eb>fJiYX+3_>kW8CksOSN/9!e]\.j&nHS@;%$.IA-J.h
%qCsg`Gq:X^^f',56EotZ^6JD>mP6'c\**]GpigfR$g\$fR*$@_c-b5>YkGFeBHM=d[E[**G;OZo+)Cf+<kI8X*Umo0Bt=DY]Mj`'
%-`?Xk(<0):<83#0!Fngs!41n%/sYC@%-XtlXke1AJ;Q5iJDJ,"eucj`W&&8aCC@PX0)Vt9P4h"-9od-?F1^'(#-DNRFho80IM.Ec
%^j/W,odmcYS0Nl>8$p\Do7%/:[@Y.qh`3nC.q5#]O5N61*ePsM[[8gfp-3Na_U`_til6VoD#?dFQB1$EGu^<n7Gk()gY:Sa\c3f+
%maS0P86tolJ+Q4-0``nrfq>tYDBo*pg._H<lMeZu<r%*d=>5u0N!tH[l^!]uTKf1g*>$'t@7GM8&&V8eIrk9hTV1^8)%?O.T\iR#
%brkEBl[F/i4^5Pi%/.W+!C:dTlXilZZm98-2peK>&4CG5j!JP^WJslA[$gZ4gHKIuN\9PHCl`q6M*@]n;>9u`+oTjH*(f2ddZ)LD
%Okh$q.!r$i[oC_h/R<I.-],%jeZShN2H(GC]>"T7is!0NS`fCfWHV^OiF),UG<0S6kBFr%?@^(;pRg+A0?;o!Dr&7l*e2"od$S<S
%;[?oWU:cQeo:GMai.9=k5qULcetQQt-Om=M;$H3>>,Bg=!p$@:EjGpt#AX;5YS5M2/<RftKYSomU8mQJLLb>SXU.m!0IG^b,\T(`
%WE(LBZE-81/*E\+g$]FErYlj5Tb2_Y!u6!A%rq"qT[2nQ\t(W^%0'2-a-L;iH[rTOqPPEmdVQO>I+$?;R8f^;"fk7UK,gE2Q(DA9
%K50bT8s9P(r6e^%m#KE&hG%S)arMUQ2eQS-,bmZ.(F8XlUAfGMhZ[l7qfojP*=JKb?Z\=mbRtEBr"%e)ndeh$ot9>&e'.,FHu)(I
%Htdu9M<$qsk6'=7NQDtV_hLaOOV"qVHJ#<9Fn`1eJeU\PqYtkV<,,,SNj@ec]D_`uhcUJj@mb8cO7m-Z+-*qg6.XK&!S.J[jOQdi
%(7f:Z41'HPkNu3,I?QS@##j><P-XdU]^bCClQF0&I":IlfOh051k,l#aPaFroh[P<WO`Drg+55#a@94+$siL`;5?UejtJ)DWn:c=
%J4I;.AUk<[@GpmO2Nq7PFMTC\+_?c;XE2esSTp7K8Uu:h+JrPG1/nPBq=%^X^eg.F$l-\(L/sX;,(kXeR29GXRN)]C&+?>\Gq9W-
%KIXX_+AU`pYeq#DamdS`/D=St(9S&27UWHn0N_kF,oTI-(er)(,s%dc15ksU>]gm_.#tUL$n_rig:V(HSFEW=l<Zdo&?6.n;%ELI
%_Z.N=0b1P+6Guto.#YCI?q/ci%u+f!:rX5%&`XM)@k#8Yh@;,tAO>cD,"Vj[L'<;-\Cb3uE"nZr,75IL-<"09c,Y\BpO[Hoj-52&
%p!?jFYp50g;($u6_EM:a],0dL/5Uep@2b"o18LV_+?/G8Q!sNE",4/CcloJC8_f-/3/o:no+OYm^_uj,_D$s:)UY@[k07&FJIW6<
%FC0WAD/mJo;.iS:h8lBsbu5uZit7M;b&"[`atckjZe[*2(s?)OL^pdHe/`jDL71J>=]imKQ\F[oH[q9,/.`Le9M;'`+7t^^C.'me
%_'@>\UC<2("ugEjc/afK$U^Cn&(a<?:;Gsh_F41I8H$(l;Ht'+1U+)/aX(80N7]dcPo]AEZ\68Q8qJH;iK<-qk(i9RARS,(>LdUo
%,kYZY]10i@Bk*i/@RIe])l0c8`t8oEm5T\7!_!ASb;o8)#]c(N+k;4d.K^SSkOK3#aE#8i7"DoWLP.2%&(X,t%2K+L"W@["3]Z8S
%S)I;ffIM,#(X=ZQ.KW*!Wj4[CES@h+EQ$RoY2k_l!`mPo"KSpPhSVLR;*bT0.Bb4X$osPScU(eX#QlX>_Wh,aC.74R@P`!:3p`\3
%R@-Mk5l(Jp%C&0I;DGE2`@R=e<flR"L^kV.\Wk"s6Y>c5;Lok@a<:l\^k2AT,/mE=:%9V/+]hnt;0#"Y;8ApRQrCfJX<mQF9brgU
%!(@Yn`#EqH,$Hf9;1:>+eY.jWnSc]o>2(IaSH\XP!sj0MZk9AIQ$YYmBMR\['+,0V76mR*R4!!*H;)82auZ=`H/0<&8&>hm,*IYD
%JT=R195b\-_$(K:gRKb25\&%MF9YqN6WA11'WS]5=sl_.RI%Dm:2H]Cij#3P#?2O5%$V.R&9^b!6a[@j_?imJ&.ZQ"`cA'6UX:W>
%E"ap%Y$W`#]-:OGKEVP[>sN$9=\IR[)e_:M-j7sh$^rSdH<ShEK]XJt<KNRja?r:o%?+biBMc:hYpi&'=6KXlQ]RXc*?\67l2BB]
%_%`oH?5=E9"I=cUV3?im]1PR93`_UbmfMQ`:(\5"j;c4U5F1`jZ>g:rSVcPI@mI^=JLjk_jpP9jbHQZYLa9?;\L*T3Z=Q4,@l(`)
%\5+H`3VPVgG[d%q_u<tZj_T<ji>?j`M#kuuX_f0YG%(EP+a9P"BdiVOL]Y'0GV.=375W@baM%ZrT\L*7*C1tT(#6ZiGma-8/W.Cm
%pMr-#N+V0)qO@^R*!"C$ERGs^-oi,<_-k(@DspC1"p\f)%!@d=<]%CR'uoZlXg;;B(,7RXLarVE>orWbHnO"6.%q$+'%f:BDDp'^
%&dMfC&2bdhq\3`,.F/N"nfna$8D=;Hj86$HUCi>p$XTrhJ+A^g]%MqWR)HQB,/+;Vj-\mujH`gF5t6ijV9prP$SpD2RO"^f.,='G
%'4Y,Ofn<#7Zi<d&#P]qZb?Uio3>KMiBHsh[U4fX[/6X=b`ON=@IrIc1,_sLFJq*Bc<?R/oV;PG&ntLe2.g<s)Un[)>K[s]4AtlT^
%$k3MJcpB2G2_aqLX]_a0re]J%b!3D0@ogZ]f#.`?!Gk2R/`*h<A0ugO64+U2kfM%?ZMuu.#rJ%lW$1*VguVP%p'au581Gte^HkQN
%e?,eL6Y;)VjD?'.LUeW8ejd`P*_K87/-EK7^j[c6S&t]T*)!T"1`e^U.g%tRk-:=*!qUj1pPn&)F<XI[#f'MO6/;<l]_@.JrL\pE
%Pl(Qliq#&AK`Lp!"Qdk0%!U"FAE,2XcIm2]E4XI]D=c;%!I/M!';4jWU?BkO?SJ:O]=_SI^GX4GRUt2OK6\s'qq0hd:GXp7j%nRd
%U[d>tmmKKPr546W/n_4&:]C3W8(D!,\G.pUB\+>LNk0S(6Bc1Gs&3`Q[l;rl"^h0b;eQOqZe[cm7_?4L7Z5N@,Z4L683-E%c5WB.
%LPd/(X^$`>/p#Hj3[&mc:q6DinmVXSrYu'%qs8k)0g,FA`8;Y/U3FXp9OXV)"[9R]V>bE&c1]*uiVVM=cejYGa8>o9$0_7>+N_Z+
%!;X)aHQ,Mhk;bUfm.Lo!0?&BCe"8sK?Y46Vmd6Pd?>=9(nu(-n`V[79;n+se:U6UHb8f&dT.$Q?r:Z=j.4\\q\t@e%pr18mh>PgI
%;=EH&#PMjdeP8>grBPss^F@OJHG#lfJ,m:V;lo#hHeR<YbN]<`-N1+aF)=^i,F>.86L.5-e*M:jHUs'u$A2D^/[DPX8UGA/++r8,
%\33#*Zcr2TGZo":me7\ea,]id:3q&6B`W@2rDC<"`d4b,Ful^A[E#3$;=B!^\$/iVD6J+>!*=MlG$6sE%F7epDqc3AqsDjMD&7!2
%!.i\OC$h^EdN-lX^#QGJr^kMsc%iZLMP"$4BuAnQIY2?]HdM\?\g=AoL@*CQm]\k.X2,:$DMqVeO\BUk$Xn22\Qme\J?"kefm&`M
%,ci__RGLmXf5P0QiYjFcS?G4]I#QH1Fg8\^Hgn.#hO_Mqi@(=Z]&W5B>IT?\aP,ocn$Kd_lh=/F#+9c:[(FpO40EFCiN1A$O=fK/
%)C#VGJj43t;HrHsFnPeFSH_<\'nR=GA:0$AH.j8\AopVo;4'kb7);9Xc*Pk4+O1?U.@jhIW@W"`4ZGE:+*;;ELF5Lt0C\SYn>+.N
%PCM@So<.k$j8St\5MU,M\%3r"rGfOg>rY&7%O1A\=W7rYgZX+Pp-"0EeFk[l!^HC*K5PO"e^$tpbi&(@p#=$MNZ.5!BDoR!n>ks_
%f)^Bon?FR(h]A<]C9X6%f[J3VOAd8<\,.F<cZ>KBUe;HiGV/1oMT+-GSE<`@S@4+$M8iO[@8_r#GPdHTVm+d4@AhpO.N;:g^WOl+
%_c_(OlRNWcMgsVMf+t:0;;k%pr3Qo2\V7-ZFL^M3N[>Vk7IlghW$dW"L>TS;'+F,<_S'o>Xk7,O<57o3cj%])Ut-T//t/Wcn"%fu
%2#Zil5[#--6?@qScK&KF(Hn)MK_>VOUEPe6IHAnO,-6>J3_qk3Os__3UrrtjAZf<r)l4-N\AOX!E,/p<Q+!/K^Y9E\'MN;NPEU:^
%9W/DYTKB@P0Uh+@QtX*752j]+e^`j;hgm@qI1a&8bY-rR)deQ.a`^T:`f2U-1)[?U1K?7^#/csJC:sY_[D^s7]+c^W\A".g$[9;n
%GO$W$?P-7*H!ut]3-Djj^S'9TW->NT)a,[-PB+8IW.E@+4/@4dk;NS#O(MJ4e1J.N`kqK:`q:b`Xi+%$6pDa\Xq15][=WY9XNW(f
%fK$+PB\cuAl@#^b7SZ9nNdj,$I>*tS\hA7kqK@4`a)1/sBes:/]\*5Ei:s7bMfO6U^L(Woe!XfHgE3mp8)m3gh]=/#59"f4s,\#<
%j[A'rL$tOo(:nSf75N+CebHLYhrD!*X>;^/a2R2hY2BSVe+R;_h`'j30#*:-]aI?lS3u/]GGHT6,AD?CU7m^nlV*Gje>(B;L=!@G
%kXm\G2Ee2(7'mK^/(E$Op5VGEeGEVe\^j[ajeeqCB:YJNW@L3LAZ\IVFX1C!\&nI5-\ugJa:-#]?>]GGg<-AgD;rHYjo0l=*E8T)
%;o[bf<YO+IB/!_SEVJI9LZN\Z=b4i=iOhEJlug@^K7V?[onq%#M>!H$-FFi]p\N^h1i/4U;I(^6-dSR!jo23-4CPC=RrjAe3;-:0
%4.NbjCmo(p?*8[IhKZD/+-,i]T_>1WosWW\_rPbrqOcQFnhq^UIt?D;M%An7;kPsfBiYsBD)MS/URR6d@Dd""lu_#Cl$%S<7p^21
%c<u#P/OQ;^?@O0g11cek@/]f@-.!eEceAFKXY.:PENWQdB&i6piA:V5Ah:\)N,_TsT_R!mC!K'?T%l.s$mHdqdZQ.B7h&hTW&#?`
%>grrea<"GT(UY1s/cf9<0D_3NmEt^A".Z_F$B!sYX\X_;8BCGC79+C81T7O@9=2uGEf%fTQ2(,fIrJTKlX(e5\C&E3IlKDhoO5B%
%fl"fnOmfZsYhb.dNj$QBYOEDHn"Gg.KC2&&PcD+:CP@3JR'P`[BF#Q/l5<h\>$p65m;.E(3<p#6LMcNZ]'!K0>BN^r&2A_.jnS>*
%=)&NJAH.-SlB<A%>+VqNW++O\i6g0K^ukst)N&hl"MT7rRlBD)h$$M=iLN1`#3OX'%fMWX_irAk&r0YLcT?SjZ$1B%!(EmI"VqBR
%T]8[Y$u35#2X$Z$/DNe5+rS5l=%7&]K0bep3N(Pa/d-Ee"Z\?e)M/@2='OF,\CHD`g93<ugRC&8=rf8LGJbQM^WoSqg!F"V>(Ml$
%G/L_h9a2d4GGXk\G4C9c,,Mnr3Cf^sLT5+V_4JU#c],5OY71p'1e-8YdKA#Rqnu_Z[e]@5\D(S,qsL-V7Bq];pZqeW)<p)<W:luK
%D-3BY^9[ISq=<]F4Q79KmYojI-Ps0ifTLj4c.iktZ2eX/7F3[7QID57F2Lt[m94jaqRX<9Wn73Yj+a,Bm^QJ:O1MaJ_er12m2F&q
%/5mYBrdEE>eAgloLt)-kL01(EILc+n%CPmHs!Wp8XfQ)Z`d7%6Qj/:pa4tTBi899%[1c@F[Gdb_64<f[bMYYsnF`=.JG[k(#<lLI
%M6d3eYlEGA&-qKBCHW"S[VPh"p\PCUU2WU#?ADHSj0R#S/pMfK6B5M=(sac)!KE_fWe^KIJpQJ2g#*,Xe#6'91e/97EbEl`\]EBj
%35Vd*%&08PfPU\T]>TPEFUt(<a`ZiZ1lK2(Mjs1*CK8!Dc[ij_cSqq2e"'A)\@CNIW$!p8T7Y:$O7k3>g5XmZobo=;QaN6m/l$Ou
%\nZ3\S.u6#T'&H`_Xi/q$saJZ/Wfl[F%<9Z_J.k5B#4:[.6#c*iF(:u*"@t@.mURK,$U2UqGIF&EeF$VDr?_;NsAJL%6EU[I,]8W
%?T!"^h_%0'/h[TR9%NYsd+88iDmt/+dJg703oA`&i8?5q<EeiOH_#1L(Z]9"3sleJ\HAl`PR2S_Y=u2tP\gki'?%r+LSLW7IsjLX
%;<EE$S1$'NmfXtu]g+17>[lLn(CaCMrlu;%l:[fNV^c-54FI\8LlAa4;Y4P3b2h%).9*l`"p&t??tSgHSfR80g:dJF5Fll)ib,PG
%$bWDLi#E6#quFmm*FJ&r%s.=4d;R>`8h(O>+Gd,mjm9-jNsSs7)5bB.i[088;kcor4nH73BtZUEhaO8'B1jF;ed!3,jlLnbl$.4H
%aS54Lo:fdH'EXeh\5P^$hbi+fp#N$D\(^^@Q/!\38$i[crfuO>4tILd$[qG<EOFuo6o,S(Q`7Rm%em^`io'91W_hX)$^Hc[?CcSq
%PM5!$-[j+bR.$1Ql[,;gHi(K-V>>U1?8U=OCGX=l&_P5G:?Tn\Hd7mnCq&!I'=.c.llJ='G=+UI]_R"ol1M_oMsWIpO/&26$dIe\
%_rJYH#D9(<f<3EFghQN9p$m2%o$OJNG'EcD_u!7&K=`);hKlaq3pX_"X5VOgL=5p%&<'])X;oFhf9[:<eo*2pc(Br]a%sQ60[91J
%`mp2ep%Yn>nE@j2nriEY[sIf:G?4#%>6gG(2YQ"EK^m4=NP"_mLSlY04uDrEL&&aYE+@[*h`a2n]5OmDXf^gQYFAnq\+&qQQ2TY2
%Y'78=EOm7,HL_!d`_NT6CAP$NG'?/%0-.0C=M?l"+4%(5h`+i0H+:<odh'7E5/VrSm!j7#2uCes2g>"cLSq8lpmmkhaQK$C*OYE[
%H0N/If/sTqHJJ@An8S^uh>Fji^:/R!\WD3LhUl/E2W.$:C%%V/2!L?p\^"s1]U3CRl;*=2N>p9i\`U6ocZ@:3>;+T3h6Yl1?Tl,H
%\Cg&QO79((h!4mY+]#4l47.:B]DhVDn)NHAB)fl'>774:?dBW0gGcn,#%j2<+!3s+NEpr)@C\,VgcD%=pN5q#I/N<D?6%i?mmi@7
%B3ib&h,W-iSX%7U=+IjV<]>IJ"abH?XZLAZAG,TObeeb:foMaIo,cb+gfSHr03rq<3hI=<13$n(]tJSRD@JhU/\TkbIlH/rp4:5s
%5I^_u\o2Lo_ddt1?eZA!7+M7udB$Ub!e%Jc&Z?5lT!$j_0ATmF3qmNFdocOc7iI)M^bimq0C,'URCg5B,X3lo?@B]X>P"nfH*m'X
%\.05N-CDDpIs!q[H#R^u#'t]9BlWUbZ]B3sfns4Nc),L05ca&-C^D3S-)d5Y>M,sV$"g=u=$@5-_7k/em5t3Ae(@h!1:OQ=kK2?+
%G5Kk`VVQ[r,(4q#c-++=X8.-SJ%PGtq<NgJ#;AkN^YS_(#^p@[hQ;6)F0D&/9k/6]jicscXkjk@B6!tH`kbhos0_tKhZ"S9>C488
%_IWQ0nWUuT`pG-h/$jRu(cr5ZbQ:<:V^M-REt;Tb^[d]YgSDNq\9%L>A*<CH=`nd3j;'H.%cbgtWZ,[l3,#XPcQoU+gUhG:IU7?)
%'!2&C*"a2BI9p)]!?/L35M$mP+3Wh)M;7+L]#.qHH#P`,,<Xq&MPtj6nZ_QJYp-b^RQF[M]Jd+rUtuBCG2@qZf0:nX8gZ9%caM9i
%g<@g*g")kQ3a/*/W3>=T$@M>d8A\tcFUne$)7]#-->`,(D!U"uFW<&X?>_X[GN%lY3BVf@Il/tU0+V,#k''b]Z(snG-S:^_Z1E'U
%%YW+*FJZP<p;j^LC0G<Fn85fKbd/2liC!RN8j90!f4LZL(Y;^3]5[3;_pA*!7(tP2=(d#"FiD9n]<M*gA5?JoH8SL)Y2&i#EkD//
%FRQ`m+1rLMFq3D7LG>CEAHSI(c4?P$CH!'hpPl<R_ctLT_p,'LgGfnp3P2SHl]Hno%M)\fY.f5Ra@UK@iQ6kGBPmS'hA_^RT3$4/
%iTnM,)kHM0]:4e^SbN*D97LB,Ug'u<E14GUn8Y\^4IS:pXXu\81BgYUDX2JXL_e>h"jsH(h6YY"HXC.CR]#dZ,j:ZFp]))^h6&S*
%50kg`O7tqhGHR@23pXP!Ck$ohP/!lRcc\tB>'4NLq%^u'NLNZ8md*k^qeSdcJ#1.5df=F$4R1_8a[]BBe2qT8*c/7hn^d]UN8"7*
%Z4Yp*H@6N"];6RW2O<m2qn_<Jl<_in^&((>ca4a(Ykr\VQmQ`D@/REhEj8%rkuYL1&\c&qhW+$AL).Xp4Bc6/@4aAF.pLu1G:0HD
%A;M5bY:D;$[_O5uHBo)[e)5nC@k;99^Rt1$UaEUAkHq+&_[TcU9LCo'4l`j-kDu5&+Dd00bGV$gb#i\B0$d/)B&da?BsR0VBb;<2
%7NUXCV"V/\7c`K8nO81cD*hqpbu3g$O9?n+bB(D4j"O(QiMPR/Lp)2Fg'FBe&gR-a?hpl^=uQ%@cQ\\R]=EF]Z1+LPVeenqFn/V2
%%9*JZaC?]:@,m5_?TGfEnO7pmK!+,!*cIB)aC4.9^2%Ptl,.:nAMY=_';Un:8nbas3Q?]njg;=mRC#Vn;WF;EOJ)1iRlK.!3Up!o
%6q5)315jfuT4_Vd8X9;5U]?DOrTHG;BF*pW8/g/YRSOjMjt\"V5%<S_a`pBF-`qF4->I^fIc;TfNR77dT6HJWiU+Y1X!`P-j]gO]
%n,rC%UAd\&"43VE)f)(<^:h.%ol_A+)K%-H(;Re0Y\.!sQ="!GH-ki)r3X,j3Vn&cF^)]%0W36p]/rGcAF;=c46We@H9ARaQ%OeD
%#Ab&;?_@9S=*bPZ=E&-QeZG7HFa1@fDWT!(YKc'mR\.0NXhi0Bo(L,O/fM4tj^U/.boF80GFo';:J2(ff7rD%hYCaV4ZKIF:0'IJ
%4*R-:5$TMGQE%KBYgU4uqC";5aFJSaQKG[hlg356Zf'XS/IV&Td/d#>CVtQYgF<<<dEl`=Gj">BY74_R)GjhbRs4mlo5Y/`Kaap[
%dWrBVkMj_%N)1=0F6m")GfUtfEXsM]f11n_*+%J]'!piIj!Ip=3NDYDrcX;,q:j3THM$OGPGZ"s1X,8F?S&t,h0a5&_^V"r-oGHE
%Wf!qd;?)(AUqX/6-#Vn56cT:k-V)N#4GmM=2g-+/0:r6t".M'*jsuk^F"g5T>C/HlK87^c4a9c:!DJ]h#M#Yo2ch%Ah<4p4]i`/@
%7gFL35CIeIbANco/a?u4j).Q\@?tefY^+mRmOumPpOfZLZh7]^>^grU'mFiaFr0XjUb;u`K^Xr([17]"H5BW[l'!?C%s?ND*Ml$m
%kij'H.aRj3`[H&YDtqsI$L_9Fs,bWUE-Lc\+5g!ZT(&OmF)>Xaf6T>I]_:m5m;$L<K/7&an4%_o0R_2Q^[jXG3ua6M0:jhLp3:r^
%9U:"up.")]ZgCiXP.NrkrXoO+LGsk\k\U!=Y]3S059+Tb8#<1*H^8:Dd8Rq>).fs&O%+mXp"cOL+4(FS_1T_QkQ&&CrNrt=(jtqN
%q5C:=RXpoW3PIOo%duV?d`!RAfcPD0f6XX:hV.8mo&uF\O4J3pc>*tsYJC7.h]%*Wg0._X1jem,pDPV:m=$$+^O@n]oBtSmFq:rg
%qM!#(+KI#dN^jI-O%6ZD$`-kfk3D5[DOPS9`+YKIj3T]%P"MO;bse-Bj`/H7fsn7!A7P*EL\n41\7[8gYjd)lGeEm\<>tE@d=B*D
%0<Tm^GAJ7M;=gSZ:%#%B.XD55ZYuJ.2P.Q]H[M.RSikb3ffMsl*=:$h!q,u=@&<P[)Cq_>iRRgJ%N'/lmI`V`\,5u5=&ASRq42-4
%^855am/bla0FcA(lt,`rp!^r#mpZ"s=-pZ[5L*dhlnG1uOMUYe%7!CoN]QB3Fna1nhP=^Mo(tS\pnGVa%a]``?U$^,T%)rY1gZ&?
%];m#4G<^YtZA>f!Is/4U(]<"61[,8YKs)/u%qP\'g@E[EQT&!sO*g>bk1,rIj2LEK#E>jV3HRA)hK\f=DB>dj;:0o&"`s.Xb52!p
%gLu.S;%o&A9A@2B-Ta8jDm+T#G4Y+D5+o"1:Ti$I4J%t3+d4:?!b>UWgc,AX8:Odt^V5-[R8nlCh&<KBh7!2LI>@!.nu;G)q:5/e
%dqn:Y39Gjop2je]$OPPRe/'J2G3`nIrr1l>N01)EMX*J)ZG1muGO*4HYk@,tCFa<Fh=b]'U7I^)BbioAhuA"/X&ldjB:[#d;No)f
%a4V\p]A7mYYh30N+21Yr-B2bVS$`b;O&']O_KK9A@8ikrCLb^C:Cl-kH!oMlCcuRIH;GdsaaK,N^'BkulP?#_o%/KH-pn/\_!l,e
%hNdXZSo^h4UHYsVhV-RO9.TrMP8hS`O<:Z3?.n-74Da\>\Scr3ok%]QIspN*,WZm?^!1!K,^m7R7l<3nY!,upCn;?cE`q/FbjoEj
%4[TOhgk\2]4^6T85MoUlf0-fM6>?:-FDD+tJWF^g_o'aRLpTa:afHoep"+TeYcJ)q"]Dm\cUL)J8WOdj4,l5U,(&n0b5R;R.VY1e
%ZJJ+'eln%D#A^I'K<7Yqn#>tLHKV6cDpl/oAbjm%H@'LCjg;63ONZ7)=hadEHa'$1N':)edk_I.I(/@QJ<lcK??WMgs%SNZoW\Af
%Gj^%Yn.FrTYO<7aAu?Ape6F#(M#RY*aHrC>YP*1c$A76FO3^kl>C-b$GFs:D.Tl-.c]7s8D:"Hq9uaYL)s$!:O$Oj_*5ScVS\sm9
%cOSc:?,XgZc*N[*+33E,q;&I/V:k/n?33R0rRsBj]Pjf<oAUQ_B1MF3J6Go.+S>:8Yi0cnXR,D7^`O!YNsi&!55t'IiJk7G:R4N&
%5+\qD%nCaQh56i8%q[OVoOb55rufJ;aS@c.0uOpCA^bG^qO9.O+>cTD.hD++k^qWQ>)qB]?G.:jj"@LZXREhl#P;)^(2m6b9-;QD
%31J*>`%4Ush4C$/b\6N((eYCS1cA>i!cS"QdIP`aPA<UaFOh'%[!/EuaC%.1cJF&M<uYc1aU8e#atjL7U8<<D$[96UlBeo<_.q"!
%@-WIBX9W+A)Y*OM2)pB#cPsdArlgU@!;fQTBk,A;;&()+I6&0qDV_jKohm>&62bg^dhj3cgBXXlc9$YJ&3a3C!MoBK=REaAR?cl(
%-XU0>q&pZ&QDs--gZ:Vq+.^M.GOP(6`ruTs)Z%hIa33)Vdu]6]`QU_tq[>p6f%l&YV,=\Q@]\SRUY2<nn"4t[q=t1d/#`$pe_OWt
%<meXJ+YE_fd;O4`Vf<004[ERn\8f)8^\N#u),Nh9fs3!t%8Cnb[I]=T!1qKddFr?@or)\XI!rB0614C)rpe7&i8&mf\V]CP$D)kI
%?EM\-j##p9)N1e#k;I8'!=h=HSCd3.;rG\Df4!sP\o2>N-Cau,nkssS[V2>#8)'W\JB5o@>L-@!c_Ot2mZ68%\Y)@<M7^>Xo4%DF
%H8*\5oWI"U&mNtq>5Qga@mOMVrc7r!@'u+Z*1p[aI:7!Tn\V>mH?hVZm,#F$%(kAb/P^`olS4fo,bZ<%\s&l[XHDk@*#(44M;NM1
%g5j#T*!V>uBAHEf&.`]_gaVm:Em-p3)!1OmdVU\X\(B2s%tN<AcZ]"7-=]]?0jt-sKVq(&Y<t!AQC^"CkEk.D%W2e(VBHj`m@=.G
%WKAa]ImI#\QA>tAe"GIF7sfUVe]SK,P5%?/;=!`MhCn)ErNa*.,5Sh?jN5h'=l-^E%ILO1p<D.L`=FW<,)osR"l]C2%LE#W8"bV2
%:E!Gco6N_K\)/`tBA`Wmo&Ocne:4TGifgOJ#iPNjGj!Q/!5j!7f37oL%ZL?tC&[JNT"Y0sp+!RD\%f'tX`]:F1Kg!".4:]TVN&RX
%G^a`%hK&P;$5Ff$8j9WAmChHkRd)9P5;)"/dCXaPSXmB$qtBVnImNHaI.QdN!7'`6RE,?;ag7&?B5=,(S/l&Ba";>'('a@lRLZ*;
%huQ!AcR6#JBAk_<rl^_L@/"'!agm6O5DI4S'ao.''B?e.]Ct8&i:-+C&90AKo"PO.]l*2LN-B=7V+8^92IQ-sY:%2WM!<6h6"c_k
%j$p9Fm%b1`-%%Rg/a]XpmbR+Yc+e\TCaAW<38Vn$mY850Z]h7ph]7fGI]Hjd2*6fB-]]tMHLM\)&PfFl`@ml7]'gHiYD6K3`P&VS
%ji6"h3p`ttHuo&qAC&+s:]&K3jlZFn,&B0gI[rOpg?e(`E4'1g:%RW9CbHj2^R-7$]c>%@!Ofem[9GoHfAE\_]M/m)qK9/A+G&Ci
%q1H]4b4rFDqP=)J*dH$fi-d2VaU,:NDI`ZXEVJnK]p0,A\(:uJQ467M5Nnd#Bk'Oa>)1:J$S1QAf'AJ:&;2]c]s]ijUm^/o4F]:S
%/>-ApJo3@^d6f#+XR>MXRTrN]9`5H\M+;n,l#sn-G:A5QaHMX9]ug&nh:;5^0Ct1>K<*>M50nT^OXY`bH$ja!a;=%Es7C;NIIkjP
%^&-sR0'oII-FP-1SB-]1!="A-rgSTZIP&S8mG2P"/lf;idSFqb:ZkX6^:AOIV4I-kkPc\ClK-9SlflUCpXdlHfB>fDg)aZr^](LC
%F4`Ll<W:nQ=0bJB+[0=5gS?ngj4XjR7Hqquq1;oJ?*`i`p&[T$:Heh[*3)gp5*Ol3i^,iAZ9I>mjTi&J6PKkS0=n[UX,H<RNr%eb
%H=qI\-r^l.?+KXE;%5`71?D!aG5GM<kun%nGLGq<9(2coT3j-T\N=L9Z?slTSjaF/\6JedaUS0X$''#%n7<?G@):ah/UkYg:2BXX
%*rKnb:brC5fY-jZ)/<GUZaGbn+UlrhHWL")q?e@,>CV7UN03$31k1q,>_WXbKO;lr0+G\lpQ^6!\Si;9@hi/GEa42<0WNO@+VfFu
%/-o6<nP)%(5-u-h*u4a70,L*7Y/`R/CC<2AY793aG)XeDY(FGE'Yd%?!t-1-$=;(/WPb/u!>+;#Zm#Y2B_W`%mM?^U*OIX.5kjdZ
%VQNUcCC?8alU_X54LsUH!LiN8h-<eseK^i*!MJ^lUgtBB2_'W/1``F45tc:?j@MsN-cK(3pheTH-3pKgn)aZcrZ3E>+KfQ\2fYo9
%Wp;*_lAqS]IP4KioV"m-L+mL=^a.$j-?U!!N3;FYo!JKt!THETq`*^M,(lgoWNE'a)V7XaInit]+H'c<&mLD&G6lXlQ+mh&L#kgU
%@Ao%sm&TY<Nqda@fNS\51J'uA#\42PT&m,K/.nR1IY5rl$9t,L1<AHfrdY:5#@8C#%'0U/`qU[<S&<[]EDkE:/.#6Tj%"ic2JBol
%j4#g/(73tR)0'/`*[CcV9,JND3*03,!XKP!(r,pt&rM4GK-"2+.'9BR/tSa2SON\"3:nI%^Z*8+.'bfLZ9Y.o07Js3JrKj<57Pj[
%K:b"XZp*o9ll%Um;`nRA=5bOa&7d@*5T$<l[HEoBZ!i/?0Y[1<$/G_a12EC0L):l[$7eIL?L<oI8VkDWd!ulJf7T==)o.'R&-oQ7
%KGYCh3fQJ_/"kArZoDID+LF#%iZRCBYY,6lQ%o&_A'5u0-mk#i5CQ*.%=mrUK"WA51K&g\5/p,9hCF\O;+t+!IU/4hJ9Lj`*0NGu
%6Q"0_PAsLu%%`=nPaXiKXQh_%V'u6IXJ+0Y`I.bt!^p!e:Fu6?+Ft5*-$!kF%>D6)s%Fd?MX_'j3QEA#7M/%B%Ygp$![^>:K@!TV
%D?1G>4E60aR#MEEEAh,A.*ZOY'f&5:Lrd(3EeFpq:dq`K7lq<3#hJKK6Mt#b(+:=I5pX)KA6`K\9*#SXYj:Uo&("8o$I.S(Kuu/C
%"]GE,b.>;q.W\!]\qZ'2_a^KM1u]^&gL^!pqMH>VUMpnY*Z03l\Bt`i";3^%9s]Q\IP'2M6`h1U$%<^H-BO]S!CVX]ol]JVlS^'7
%82Io2`em)]PQCh_\2rk)iW9o5'+8A<"[NaEbCTtd,#.%*9G/MbL9/(%YqcgSpHTB2VjbpB5;sF`6u]e,+6+-^#&IG.L2!3)!kpP8
%9\?4O`[U22Ni:P@p4f@Gk!VA?TJDO]DA$!6)Rq3W"Xa#%*&][Y/<JBj['$A/r2Wp]W!j&1)iKFQQ=NZXf&2l(`?;*1JMeEL#Pc80
%raMaaq1FCrKj.jZrd*f61iGLsHn6\KdY!<iI,sC__[<OB8_Qi7<<htLP)&'[I-G9O+/aJHJOa[(,`G5'q$!'SZ?bQhKU?kUF&JZg
%n>o/eO*pX/Ef\05kQS-knRri554WHjZ>T8I^aZ;3UJj=Ef<:o3]%j(NVjR`($c6OfG`35qc/Q!Er$ING<iT8$IacJYUJ4p4PLa%m
%F@?O4RX\(1:QssJ_=,b_*^*D$3;YqWLI8rugl)C=W))rqe0s<c6e8S@BFMe9^`A<SA2bYc@1jNbVc,F>(JGOK'1>e-%9%q2oM`,9
%A6!BA'q?LbRa>[k5_3O-AH6s@JP*!WnVCso"nNt>#`p>66?PQi#sT#\\206ob592%,)Za1+u^ZuSH]YCE2J/:[pn'Rc7op$D1G@j
%J7;E,\/KBNM!&4O`B_n/G.&g$$_S7m7RW]-*A7OA+K>_NI\U@KLb;D[[2OC_#(3\kaHckL/;m>Aao-d-P2<(8'6)ZEHf.[GQD#'p
%)d@3I\CJqgDctK-"9Veh3q!Wa:,:[V,FRgV,"F8MUBNXk`1"\Ui<JWO4tSIo*3Cs&DM?rCdH'%27\N0+%WRK?j#nn,6995*N.#24
%+RkS,I'INsd'HX(0FE(I!/ff-1P5f6W(eI/kN)J/r+Y>468aX%UHp4<gLhlETGTmpr)QQGj:RMjZoA3:&4oX'F.kqWM;_JU4t$&C
%NC!uLL6frD&/1^PM0NX7Bdg&+hBmR"64XE:^fm1nX<GNh:1GUh(7B7cpk`odV6'W85`8Hq!%8Ho3-1OM`!,]S3sZe&TF\bnnfpk!
%'1\@RT8eG%AiB!8#W!V,#AZ%lh8D"QFuEId0F74l`de1p'TDu%6N`/[hIi,Sd>!(g2WrEr;EBptJfLV>1h==Y*2N^\Jf'Cd)MF+N
%8fo/4aQ*TMMHlJK5Z"=LW#_U'k6'5.=>Y+fWHB<ePYeDO_Ti[r+=l2+AuK@W's.2XkJ_N(1b-PsP).NH&IWX%Uu8)98\41\Tt^r.
%^1Agn7+;j7.MKRP6i=%HiAhE]qH:>NlQ1mZ'cjD*1<(u+W`#lIh?5\N3TuTkI^/1#^E+ik(ZujMn'MUk-.:cq?V0'i9\2oY"m43S
%'pU27.B-)dR^/OXB]COVgS<Xh<^=W/BMC954P#;.8h!t#D`p!S7>UbNSO]>hr%LJlOAjM6S5JpJ_SJj1JPZuR)atu@KCtS!BZQHL
%iPI-R\AAXUPo)_N_3Gi"52^rAN>i#C!D?()EU$*mSB/Jc.ECm3[&b)IHY:S+Agmu(,D3fBWuR@._Y>P<2E:ER":OgOkA=`5&I(46
%a@t8ek*@mX5Wg?sCh#Ft=qcu:1HCiH2AYt\!st:6(dnSQ@ULH>W%mWZJurl@n5"uE(<?h0P5$j>M?&bA/km1Z&a:]UAqf4gcks%-
%!"CW\`XJHFV\Nl&pe.b4@CmXRd[\lF$Wo-c3I%8M$Q%L)E%dk3[Qqnlb9?r\KEe<VTRa]g>dk-?1&_Y-*]'%+9uB(CdFOkJCC>e5
%KqURKp7DnrP0c7g%B1p=(eGuIQ(T*Ee$0k#Z@j;3&5qMU.HL('K]Y"I#$)'<@fRiflSc&=0`a&:"A1(CJUfG5`Q=0p2&(p*<5".d
%6FedB7e"K`/rH2CSo@j9JD*o5:crh&74DC?^pd!5e-\<7QRQ@S,H*%:8k;%_0G\+]Ek=mt"kAe-:qUk#DQobSc7A$[^ePGS,_6,X
%,I2l:,Rsr:82HSN9o>HMZOG"]l^1Qc`g<arkB&2AT5&PjT18D5Rljh&J,616k47TMr(/\?G0Q5'X$g8WiRqrKf,s5L7"d(1j2oqo
%-<JW#K]$;>]=%^TPNV9V"a'sg@,$:qTfc2J(aX.PR'OXQ'O(YFdMNK1_pZ]D@^J)Vd%$7t"FV3,&qlb87YsV_8uTd<!6)o66I?3T
%<Q-BTiRc:/113#6bn=4u'9tV\9TkSb#sle/\>:%L6oDbX_U+^l<7J0&Vs,bV+\krb'N,C,pnK=Qn4P2sj7-E&/l'q/RWOk$K`g'i
%q3l&2dU4=5@uLSD%7"U^<)MNJ;.^,JSXB1#dNHtT`2@=gJ0S_I8g#b+W%i"9NLkfC5h?_',g)QrXT3THE9*2'NL`DR@07gn<gV`<
%JCGH,0Q`[!eoN_r8ImQ`[YP\YVBkBd2<n*3@>kY,;$`&a-V@P-iqM.,Dd1,4"&Lm4&K4kNg(norAXGg&)HV)I'.9b:Up1S1JnSm;
%%XS7VMo#T<"g#4.QM0;rBo03k#b<ro3=osPG)fC3W8TolfuOcP4d$=.SJ>6@=cRsJmR:k6LuPeO-A7-/&;3FgZ>0eDPn,9#'uh`_
%)MA-Z0Rc@j,_-p>;?`B,[S);)6Rn4onj[/>7L@HbhNX0jKV-q!5U`#fbR4W=+RUWZUL>cbKK'O-C35&%OrYdE5YT=)`&nUWK;-H0
%Ll"*-1h%rS.1DYK-B?TKW.KT-!#3G/iI>!pilTp(E3uLR("o?WKS1P24][?hm87MoQm<$G)_?Ri#*EV0<%8)P4!0(Ldk+lL&ih"b
%FV;u1,qqcu#=HXBTEc';c3r3n$7NlD3KSrTKh(XR;C0_1,fQ-2:Xr`.96E%.Q_CK[_]KL=.^Ys:0J5=l7t\aS@Pn"ILo;Es_+d5'
%.5<,?Q7s,k[[a9=\\i8=-m2uq\cfK#,;MC0@&iOK9h2QmafIgBO@Dq%!+huDJU.>1Pp_Mg=`L7"<M^<8I1'3u6=%ElB=8mirSj`l
%ps`b0(:@sE47YWQ_d]L?!5_te-9hici?4Cp>:jl0%BR?3(E.^43SOu%'`V^iJ-$B@!E)/mJ41=!+;OapC8kPu5%mVl&9)F!L^[8=
%kmp^*OY`#?,U'p4L)S;j+iVNZ5'1ph+9E/,.^1$C$TB2ICoZ.L`#o5M_F9ifAQWMY-ApPj=IH\9hCE5"iNI'jdGdJ_N`c+3/db?'
%oS'P:N03%lZS@/^_,h5BkI:YW$W[GcL*d[5LrX((4sS-@q4+8+YV/(]Pj&]Vem>S(p.ln%,"'7#/OJ-.6RXC/>]qU0"j;qQ<K<<-
%DU?Nuf`p(mY"g/%'J9k43;ER0`G,`!;A:9D]+`FJbaUB!!0j:BDQb6]G`PZ0F=Q>)KXKnr*uBfY/7(k4Fk;_W?*at#g.9!(KR?2Z
%(4DnY,SAP;Np[$2/2dXek`dK;n(eo'9<l]=ZA)ga%(gL=,b(G,P#YJ*aUE:g-'$o:Sds.%ia>OFA=a:YM2>C-,$2+4NDM-]CB;I(
%D#juu9B;a$/3lSATeQn29Bi4+[Sg:,=[JMiZr?T/=gi/>B]lJTecV'j"VA`o(3Nd338e28+?U34(UL*"ZA?3o![qQd@UG'-b(squ
%!lur>mjh$HGpdZ@YS\sD_FeiFH+0=g`E!-2nUr%0"Ed/#qh;a[4*Yk':B^Q*[83Oo7=R`n<-3pleHj];V"*?Ack7iM:\&JEYuS7+
%0n31m<9/k%&NpQgiG(US=/:L>P'@+):/)H15Fs"HN"nG`1PN.t/EgMA%uL0c_8@s5`ptgVLJ>J[m,Xh]XC)NMOr/<:S!_\BqZr;l
%,lq/g<$Q!3\Nh!u8C7aK:+9X1.ZG_eVSl'$MRC5t_OeG_KfQHk,fSsaQA4^)'gfu,#q!khnr#6aaf$ut.Zrt1pt?\KXp2eE!V8og
%SK,4]pf[OI;O"a2afYcZ>Lf[^A7R+Al%7u\NWSJU,;D8fBZW^ILelf7,10Qc,m(2aQ"+]s<"3;n_g(+I-ADp1%DFR>-3[$H>t>;t
%!uWd&'Y77O'\0E*PFODl.9K"]#nOpc^fVg\Brm0N@P<G<4%C&C&-f1:0O6CM$f2rUZ`+@t@UK4PiTPY#Ua#LiR3E>AQ4,)?^ie^)
%n6*gB^$n8m#NPb.lP7M]N!nW^$O3:n'k@1V+H<3YL&tAtiGo>3d!u+l\iGt1PFc5+%AU8LQ%Mq#>o:Dr@eO490#1#Z_&rht$)<M!
%_qmk7&]d7P&k@s;3R*MV`X(Ui`X7#3US6/[FH:um_spBAKXJV:k!4[_cj8_F0kP@20QhtX_8/e:aB@Y7RB3]O6lGm@$)XCNR\V0j
%:r"]*Ora'^#nr[5d%o,X$2l&X-5]*88!n7QE`j>Y+t@4h*>isK3%@20Dkpd"=46)lO<%,ZS]ok3'N;%GinDaF@Y76oFBQ.!\B)IZ
%:5<lj4i-\Zlj/UZVrA=81BN542W8lcolG>2:^Wt9NmUk8m1QMl_mN">gN8N)r%T&)X$CH`3a,rr8d&PI4gGRfG[b,9fXr:WP\gll
%Q\6?oQlta.-0PYMlZ=Bc+dsLH=<sF(_upJU&(D"m"WF./k=h+:ArJGaO)`^o@mLB=>*3ib1%$C%PTV;Jh5UO58KibbF('Y;GpqZp
%K#HiYa0;nhAft^]#Q^*MBl?DO,62t\q\e?6#K6H=<](-h8/^\Za,i_@!^emi!NFL49h`X"0`GhBFO#Y0@#Ccp+coqOK;TE5%LY6=
%D+krjM;kB7>%a^7;Q6b5aqZ4>5l%XW;5mb^!%k?P\Tfpi4V3EiD8>#fg'Hf959<mVZjdSIglWL;5ii+kT"L4a%co)o`X5g16Y42+
%7Tra3'M:IdJph@.1*)a$OZWm3>SoQ`kTHJ*A/Z_`#s=un\=ZV1@5b%qqa]6te]"#&+O$Q2iQ$aOR&Y1pF=j69<S=$1Q]*=JN3Tdj
%P%teK6GNjcV_V>qmY>[iC!6bZGfH9P`<+]mOS+nK-3f'!c?2h?hf25D$:H:>+UI$_`VL\#d,B30WUL3m<M8V^GX4`Aid<L5aJ?)&
%XhGN%<eY,I0kNk9V+HM@JNd.DU8oc7J^S$::*\@F.KYTph3PR0M%EB43Xh^/[`K7rFW>Tr@M"MMMtKU(/os2h'<6U!dZ7\.=2eVQ
%JI#)Z>m,/l'Zr5+..!GC3n#B`b#;tHnitEsJ6=T[C6U!mE%EK1&@KPF"pbgLNL#lM`?-SJJ-sl8RER4<kUK)i`KM/i0(H@nVBIT(
%b@s;^RT-@2Pj=-<4:W3m/NSSWJ/IkdTesTIfNZq/MCBjgE0A.b.+$/<!@pHEBqRB;!g0&$r'Y,=l#02E.CMGqpVCQfN7$UhTop$=
%3/X\/kSl#p(1=X212Fu&Lq'LIf3?Y^1eGW\TI2%BrQ&8s^r)g'6'h)]350!g$>[]hafYV9Oj(f(3h<AS:</$^jL!$6!n>(h&th8>
%M1F6Q%>$#H7W+%9d:WBbV"q9I9Hh]4(3:%G'b\tV&kgVcASDrZ-3g[`BLNS5AJ>?E%ead2U7/V+fd'9lkQEFeG[rn/E"8811eQGO
%<31DH1?G!9H]iu+$mR262F.6s/7(Hs0dE$([kYl]Jb3)o:ek=?(F[62T1XMMD,$9'!E=e$X<Feb5/jQ0`mmd[7$[H]3&;D(WYk(h
%ONM;S\Cr`X2[^1mSCg088XTXYSV3GOUdX0)(Fj5/dOb>,[U^SI$XE1O_-<E@$ue50'N)^Y[Xf#'`j3i3G%?f2a,4GQJMW<?Q&h4b
%.#P*b!@pg>B-a>U!eGb#O!l]iCDZ!p!JH7K93Y]XTt:TK70-L?J06);^iC5Ja70L2kZUh(,5'3\@F11XX(2KV<BDVQBEp#f-UA\2
%('Fe=:]dErmUM6h-LI6&JKt@20jc=t5c78^,sjt6Qt.Kc!>jO)e8L(s$aAtQiP)Q1,R=ie`L:O+>f.ffma>h3lljHS^Oo?QWW;-<
%gPh4JS.,ob(!'pf!\R'm=m[jW1P&;oL8$ZkNY;lBnV=1n\X66&CZNlV4;F&s,,Lks`bCgWF=VO;"$nO,((69.m5i2!@TAY_TM>V_
%<:1Gk1TL%7OJmW.%flgVm4':cj#SN@AWR^c+Jmk-&Ue@EIs#:hE(0q<Non\-8j[:T$AX0.U*LqE_fs0ZS^LT85!kB<F^d/kJ.>dm
%#it1W"))Skek'tpP:(c!f$M(H"e1I:6=pMgC0Zu'cR8q9f87ea7T`-<TZChcA:8Q`C!"ZT,T39g4;jJ1<qLtFljZ6i&"ip>6nS*9
%IpI^qN29OUEO@Z!JD$#+,605]g`qNP:%7naiVF<hXJ#E734qMqhDe%_c6OQ,63:83S.^Ho,09^J/15$DHIkbLhK0Z+0m3i@U'!(2
%iHc'R(%)>O;O5$pZkUkm8=G3+4De)%AEa(e'10ae,/43(#p]SW=V8`'7g<s7/0Iu-esD(E9%h;1+X"u&2((['I:X$r(<r=.3ooUR
%N$T&g$=3'nJ?^DV//N$?,o?J.`!8Xt4b/,05=IVJYu6.^$oJ]@Up*H8@WZ[I#D5KCW'f1#I<n?MNonlT,Z&/p)\TUG,qCHlf5`:-
%Fs@ejVpnQ0,':#mNWMKnMh(*>,d+?#RfV#J?FM'<<Lidu56m,TQ#[jtW0.Z"9o]LMSKK`V17JV9lrKbs"Gk,uM_hH>^(X._:ttJR
%T`_+\mKJ,o\aW`8A!Q@Q;@W)):_>*_3t9lWj1<UQ'lP<F24"4*5e3W/&?Cb!epJZ3!G%.>7#@QY@VtK.9$JA?71ugG'fA=\Hd"34
%iG\cW.7@?'F]PM:Z&UHX`"ba!ckRZ*6p$=!/f_3[iaajBH^%uT7cY`47:Q@<*(`S$!$kX&Q)i\1BS*WaA:KI/NB.gOU6W_R*%P3O
%l`2#=A+[l@?R7Tk3fOu7=':M2$7c6V:KQnA:ohs";!pNS,3p>O?8,X,g/\IF6&>+ZAXq%875LLP#g-NtLa/H:6ai8V(4JN>6IjEu
%Vn?Q)Dm26/[b`MM^=Nnbp^8.H_XDqQ]G-tcj)oW0^6-Hgo(Z?ODlhs'<?/W:hZNLtMH,_Cl?^0U\#nYb<^#-9bKDa\[G3Rpn2nsF
%-em[@=5<MY4CH:M(MCGp$h-Om]V1$o#bhs.n-:a3;%HH=A4dEP'5d9XAGj95C6ZaP$S$pj>#QV<rX`$T<)ncg]k(nU%X`PrA!J_d
%`G<X/[gd7`cKAt=n]=EZj_]I3Ag3$[55Aa!P=/,&.U%h%H3:7_3,CTUlOE+T,/;[lE&EGVNAZ(BdGD*M27d(QJ:#/oPu)cag--f2
%?]NrDj87[i5UBQ0aX;>^%\E#T21sl2Eg/@'eSL($WD_!S<:_p&1eop_;p>UDo1%j.;DeP6,uI[fB2s"ZrleJ)Ioah!q,24_N1D>s
%k=tsOEeNO:U,Uolb=\'VQehjX,nF2(Q24FZe]_ed46t)K<\qG'Cp5:$>g4j%o?Z8MFZ#Xo8U1-\ih#eQ5KR6S`j\'%qb#t*Va*YQ
%qc51<.ci#6Wg%Pg9!u1*;?PCZ;D"3.;NFGP7C=23;RXuQP]i:t?IdPmP^8QLB[nY<7?=]F:-+7c]:s5$O'!GZ<:4nE:F$'$39qfS
%]-5QtjIjpZ%/EMH5T)!hc0InQoV5D"\8ei*"k>J$ANCG5?O+FB!0YY_6eQS2pnX1eOF^K2\@>!sCh%=dVO"Xj[7Wq!b%<Ou6Rr?2
%6/o&C@"k_GEN<l:`@4fc'F%oO9EUOplJ_DgLmJ]5gE=?pH4HQlPDQLC,S>rEJm*@+"Y&-T-"BarF]EC&]mmr3#$r9=4N/b%<@9gQ
%+%]\ui[o72L<Em[?Fl71(V]p&i<]pMZ12Ts[YM\7V\3JS#CM`(,&lt8"beU"KhN$p=r#X,j*#+@i_J<H;(T&J]LjG8<05p%_HADV
%?AHC3Q$"slmckB9#"8n<82?c&O:@-D#T+k2Q;6?`4aPa-V,1.TChtpEnZn&X>HQ">W;j$+dYcP6\DUYmWo`HL+qa-+V)4dqJ^B3j
%dpTSr>Vjc:X$omZDd]-5FUX$a1YAS!X6pI^imUe=i97954B*kR0P)Gl=F'$q#a,'!X?HkeM[NAo//goV9oW%P85"/n3^U_ePpj6]
%)#*(Mp_[B55S";h;O<G)Ge'B$q#It@Q/G@n(4;RNo!nH,',kjYnTrbc&Ve&p1ne0+>e%f<jOt`&B\Z[a<g:5f`[,u=`KGc$E![ZE
%>XD8KYi_%V!3iM`o6NNHYEmUCGqhYb/?o0I@/hamrYL2;%guHFs7JShm!nBRs"JERrEogPQ\E;'aR+@b!,4BTgp_F32Ss)MkdE&-
%/:RIM"-r,b=BAA5O*,h]lHQHZ*A=t6<OiN=]eWX%N^`$e]t%.Rj@.G\D(s;,Z0Gq)g!-PFD5hSp<`STW9t<VKjh@#KDO.6KdP[3J
%U=\CBS;=8Kge@7n?`@:PiS[H+;N+kZWSF*8gp*h``Y!Vq]!rus0Al9hg]OS5F_Q[jT=bsb3kf]a`d>\%KL@i]+JX>.K-g)93$qmT
%,0ZGmdGdG;@Cc_-"/jlUVr1C[KhB5B_I8fMe,j'b+N<-DB["7TnO(Yo\2J;DC^$8ea`kl0/ea$R'O;R8Wc#iDdRYQ%4=C]O*A^[]
%3VOABfJQRiN)26sE:5=f1u?HRQ``"\:NWB7\YNNd:r7#mgPdp:a<p$<`]bS5h2=)/]snB$MAq<'Ia4O#g`KhG%8<WJFJaCI]A1K9
%?S^/lVj_aW'@:Np9eku3-D8sqh"M_ta&<FV^[^YJEi0bmIcK*sB^^<(KB&r6K\u1d\d)/=$,>6RF]%k9po\BQ?^Z)FbC9uFG?o",
%bqB#J0^k"+r@=-@Q,ct'hRorHd.CVAoO#9'?dYt1jcl7gV(9X-=/OeSp0VY0h*@QT>M4M4flmg-C8XZ_fT-nR]'V*c7HI^ckOO#^
%Q9FIlh_fT'Q$9Je-SNJ@DU)<9fXJLtEI4cL3H0B-SEC2N:Do8M<djSTo.WMm!<jt8XhIWiH-:`2Pp[*bO!7O^,"ea/SAar_F.SsO
%4]<Mf=5L9^]QmA":4bA`mHKJU1DL&c]Ot)eo:iN,fjsc>)95gUI9shk.1Yf*1T#P,_ttkmmoMU7H()lkkOb42mpU><)sZ;#cDNd`
%mXIX\qr#&eXn7;$nWg*"^%n:To=a*@jgd>MbAb0sjQKUKdOT4U=/N\*k'IukpPbU1\MsQ#E1Rm,p947_.?d3rSi$%'J*)*UCtb@j
%hWN440;[(M.du68e'?JkEr<-*Gb;[;njLcfkB))In,0[6KrVt84DCpUEP''6MA>K_Pq,=HlT>9^C;tQn?@mK>@uge!0t!pJjnk6k
%&8+G??Zp0HSkm<oC0d7m:0"qA_.UlhnMi]I&*Y'PWj8%PdQP]eSW/;S9BA.)Or]$hO1,Cn>Ung<.In8s<D&MR[7m0d-VnH@^P9m8
%CfRUYnlK^S9"[9?@(qLQ:MH5pr6/NEjsas7'YX=Cj%<m)Smo=r<I(2,4\q34^DbHt2WuSBoMm'#CDFPEN;gCY:P!&QLsfXG=fofI
%P\k`)4"EamSl3t825Sc[:Q$O!r`W>udAs0%[TZ!Z=_6nL_js]/lRD2nPlLUGKZj&,Q'10*>r%[/Qg0nr0EkFTEqY_a=)4Z^#?7\+
%hI(#n&DL-dmB>jL'S(PQ`;TAie[fg?EOroB]i+:d.>j`u4msi+pCuXhC\BofrS@n^eU%AJgB?@`#JQZ6PLgU5<ue*mL%&?9n6E*b
%h8&MbeF6f-nD4!2>S-F3,OsSKnQ\cX?=36YF7ELknQ_RRhlj"a`2R"mR<GLKHhjR[7EBtFaF!0ME](s_K?8>`WH&m!HYKL+\&ram
%bC<HkHD>9H`n-GZ@D;&;Pq-I<RqSBDC]96/rYogAX)cbfFM:t'T$)E@qg4N.r$2PI.\W.::T;jt;ig<!h"F`mHg8Cp"lib6:1o.b
%93rkIJ:ZV!SQhcJM>/3?@Mg3;a22L(*^Tr8`[&oC8p!?KOPjiX1(n#QfuJbUOs%Z5>-qC:$@((O`NlafJSJr,%:!=lgOMg:NXCu)
%2I%3(8Sk]s@AJQ.:g%eC.u#CWKI=UiVo[]2(CLV'Gl^f+RcUX@/6:<LUHiC<(!GNbImF)Z.&?TRJWJni(@/h"<ZqhN-B,8@0SPLH
%+i^pc[a9VtLfh/V$.n<J(ef]cC_SFDe:8+SBhS8sjREhQb(Wi*QkeFnNOH*dJZ0D&'A6:@M1rWJ>`#4s#p]kB";RYS0g)h01gR4m
%qK>17]@j9=cu9gjj0Z$h$lUQA"8TTaAVEUe@eYi`4H5^:)Y[,aC^CERKZ6p3LPKOKd1l`;i&-fLd7:AT_KJ@)P>!+;=lL2-:O/>2
%jl99sku[,u6cEAHYB#>PG<GXM-N'p@4d)S/-it%/;5tB%<"sUMO%=AWMNgYNG\WYH'i3B.W0XoOMU&(s60,"$RSo7.WEf#D2c[,J
%MiL,$dXN45db+k-6DU5-U&5_d<aNbccfbLB8%OJU&0qI_9AtTMGUMN,&:5Xt:\pm.Y,TL>O?V3I_o9n=$HXt9+"DFe]ciV0e?LeB
%&JUub(d!lkl%+"11t<GDj:CRMBo$)O-6?Y.Rdmm#pWsn2%,TOu0[[+g'V^X(&uW<%>Qhl0;1:q$]mBU*-<lhf`Ld]r4CGMa=e\QM
%N.`<s>nA8^W=@qK";+*Cd"XgKMQI?kO]@&IS6^aQUELsqWt^7-='5Z(N3Dbc0MWge!GE3S;N4q+'<Ss0^XS+n$FU]or(J>,i)mok
%7+":S(:88,JI"L;#Q>N^`M,+?6m;RL8.)3&CRFVSKb,MP(]eq1>`GrOR20+9apE'Y4eieO(DA%[Mb-DKs.ZV1n0]M9/LcAs(c"o)
%V2,cYQlVPE!M!s8,PS?ZaCQkBI]6$#jd<$eicYG2:/Q+B8-V@X7YV^qYf):m`Zb[5]UXV",K^C6AjTWtR+<R0EQoWiR2?SR5E,a3
%_?_<7%M\jRPHY%PY8X(]RO$TI=Rq/BjIRLQ.Q9OI@Rg&u'+))\f4P#_]/p/F&!E;":4B4&!/BrMQe8uZhBDbfM&h>C/XHbee/_l6
%+6k,KP_5#VOA%-l6go,p-tLjK7kQ`W&SJ216>7uR&Ic<[d#pY!RZ&@j>DfgJ19]Zj/HeY])hrNTK*W&E[p1W?iNA?[U^BHrB=KI/
%8A5CZ"rBRQ!XL"@'l1]AKVVPg^+_YdIDCB?4VL.i\M.91O44SH3@/9$8W7Tl--jYQ'mH,RR7=p(90h0G_KgP48JjR_>BC1(6u&Nf
%hN5HL\;'EL`*F[t9s,-"QHdiu$<;`5X,Eo#<"i&3kPQHYD*,pi.ktf*H3OjP8G@@9#XO^K7:.TW90CF!!Q65j3oFN`XpbSfRRo+k
%?Ygk-+ei'sIhB'k[AXF+;@k&I]IH5n"6A#Z,#b(F`D*%*6BN^b"8i]\B!G0C\ui#\V^>%N?jIFh::9[s&X$lAHS02,6:smP]GRRa
%`_m-Ed=emB_'F^UV"oVM$gj$d20]J^I<cPn!>a]n>s[HUQnh"8i%X3N(aJnam7bt-#i`QA).#_2Yo#P.1Dp3@S4f<(;Q:0lNY#^j
%/^Tm4DH:QJ.iVIP+LHu6?>A\5r<OT60j2pN86H\7\8)+[kdXV>:%/Wi`1uE^('VPf#SePA%%XhIfdd3a/[]%,3\]/=CDM]RbUkd8
%&o%Q+F;LsPSOSWu0quII>$(L_k!16=#m'%,A@NDi71fod[X\@Wae3CNL`p3(IH;+F#aO`o9!DD99!p4!aYsZS;KbH!J73\+qXXXU
%L!u-c%<naK3_a3Yk[ZQY&ud$Cl7V1cgGf=Fq3>5b6',<U%5T^i:]c>GqXZ&T:?R%VkYIFc`g3FZcr>!O;V3#)-B0=d#]aAucL);W
%1sOBVUoujrLFJ^n/*'[4*\TfNlUMiC$2Y9)B=sF?@bmGV1&DYG.krEi`tE)&.?*!'YmqOA#iSpAQFM/ZTE#fS_[32Dm/'\s%Dks?
%&0PsUq%a*bA8R(8P9Wi/=?)[L%V=)d_ueOj`+bn?UZ=20eFs2/T/OjYTSSkN>d-KX+J`pn-a:Et7<fRK:7"FtLYUSN_?(=!YoN01
%.'nX7ZNtS@8!mjj&SblFq$9*6KMJb==`Ig2cA2QFdaK)hU,:6Zi-l8ffa%V=jM^F%X2^^(fLb;<889)&L*aqIP"KJHbIUia1PKh^
%#u+kbg'QG+e$4hFU45E4%eYfe*B@\3a^g;c5*cgL">Sk3<a)_lHQdo.b]=pu$L#lc0b,IE_a'O_.T2]JdeC`.V8:!d!L(_AJW'\n
%Mp^PWb.#DiWQW/l3o`)/CPE8Fbl<Q*:+^YHq]r,:8XtnW\o]CpAW3:?B<5=BFjCOrdL[G6C_QG;6:h*Wo)snW==bdKoCK1%#//*r
%Gs``$n1[4b2cW4(CP![K(^armL$HSo8rDq!4P"f@a$^TAgGpl-?++MZB)F(Li7`5rrhK(TZ%iti,ib`'$N3[BdjdL^W8>Q7?68ZV
%RZAaX]^+Nq^F8Tm%$+qe-A"jQas51/6I-kq4VH6tC<JBc,Is_.G`O3@Ba_+Jn`V'UQL_(4O5BJA8$<^$C"op_p+,QgLA0=$IY5IH
%=a9:oBm,BSSuEVkIcIAA7<r]$^JS%:hE3^Q1h4mF2-+Qe^CaYS<]r@CfD,#@a]1u[R_eBrbWY[3hpAPf";RQFk?<+X&<EaKok;"0
%O2jIGhi4X\>Id8dGMG;%T#VB63fI(ZZJp</h,LRBlg]9om]gi%MiRE64+eT(]Af*&h04pPmu%DF_Zl_-JgUc]$WU/9)V)XDPQ6Of
%P2_>-p]E=;!0/GL1Hc^WN>kl,92e/RV*L:nQK8L"<?bqEpmF@nk)%1T_KPqJSgP$3M&(E3MOs%,-V!>2ApRpXT"(^`J6Iu?HK)2.
%"1Qe\Y9s\D%i8=,b+@h'5>:I$B7$B04p/H4Vu(<+Bh!Tk4/hue?>!al:TYk.&>FcQPR@BZ^50BtCTp,?QB;p@@'t(p),nH-ZDl?!
%'E>u&Ge&pH=(>MC5.#sO&EPMP5!5(0>*N#4dN'5XQB)BlC.<*7=2+1(R9Y&*,t>F5]M0O#_!j/1;3K$&^-dSj3UhR,EQ)-ilf-rQ
%./59]/S6]DX&@!19Z/#*_Rg`S-B@5HH[&&C;1U"u.RiS;W9bQEk/K7<_A2b'5"PN[;)kYtE"REWdX5"m:Z@i4O9qL8r-u,f9rfg<
%OtAS13<*D_)PfY6iU64rHqKtqO<>"NPP.N]7s4Y7Phi(G\O-=&^=G(2b]L0B6.aNJT'\H]_Sa:I5*mk--W\R8",#H,dD;O_$F\Iu
%lu+UWXQG9&E9a@d-%ZA0p;rg'N!WspUs%Aa[SIEnf'?lU.dL6bNE7W"]$NopCL'?)6X-7D]\'fQ)8nWYBF5CTjG=dEC*db@)[Y1r
%>8d6ZM#jK=;;[&5HoVP5!ku/Or:C+6<b2,P_HWS%TUpqsj?S4bYJ'6BLNQd\(5PZ4I@LcNGo:W&/?dkU(B?@Tl\XC8MFi),0-<4c
%1cb\4QJLp2/46>)b\\$rI?X_T\:Ku0"8UAN1<%\r-s!;DiUTM`)=QHGm7LN)fRg2dg;hq\?2i44cWo>@rNL%$`C7'<,nS_k]6=jj
%NqIMW_7g!YP*':.Fh[0W<FJCkmlWZ<!mJ!^@QZ9&e`2l\<UgEN<[K#!SXL3&7)_0Fl'HK;nZ&(B.5Cq8,?'J?bo%t7X^cBWKIf(p
%S!-\N!<=`<=>6>u56R]7"&!8?UF0GrY_dOU'X0AUcBi$98&U#2XtP'IL(>\oFq%9eYCg&<cMhD&U",]OQYhA6PC>:B)HPU]$8YL1
%'@H!IrYc^3/)0G$+;UrVgQm1&I@1S_Z\&X,p!FGdce#T8O'q]tgB]O$BD5>&_Tk@3C$:W?0Hf(-ZpUU=\\3gZR,`YJl$c9Z-gC1a
%YF[#tP;N5nI"%OZ&+G)h8!!]\&m.JX?V#\W)&sj@9dB^s"GW'!2'T7LU-Ci76kVIN!]nHN.1sR_J6c&H9F@>Yi&)AV-\:P.J=[JN
%P<adV+An.YMTDRr^6IZJ+s8@d9msfY,s\O7Y*B#N+rhjoN24g`"G;j\<AI+grstd1BK+>sN<WE?_fC*@ZK\+2QPtXI&Xf#TWMPoK
%FG\tC>)5PY6I6To_kAdO6S`$FJrC3'lUbOk&K[V5GnmkAc"u)/B%5;hHS(BB4gD4]dHqW9WOpc_K&+nupJFM"bSrg2UZN7X;PLZ=
%,HH=PLXj*GT?A?)RWTN)L@JAUK%4"f1!5bflf!Q"cKU9*l`$gp\IR4s;WoZc7h#WVCb>]J,;V[#%1t1BI't,1Tp,fP7%`\gY=_9b
%`QI9MkV^1/@M8bemH$FHHX>\a$_M3'TGUK;d,K'Z:H_Q?KI[kJ/9#6dl!qXY$tY3R#u3:'BW3K-]@j$LE8fbRpBf8+F3[T;#BnSU
%/EE0#H/nBSQ@2TEm,l/;*rEslfY%uk@r\4LrCb\kGe_ddQQc?9:R'i/+`b^W;[+BP5g7bf)dl%a#53XZ!6L4-_o(;t@ir*a$!RNE
%RC+#eS&PLuQt(+P@iZmgOla5R.Dpij?BpEJ<=foAWOFZq&Um,5N4F6WB8.pfbDa(:N,Fu,f1C-q40>MZT:\dBKFN$B\%!R?[EUfI
%0GiI[5/f)SYMH0qf['3JiSEk"h/>O5R'B9O$@eG+k8;t)9!NA([bX)])LXPM]@o9QEZUhLA"76DT1&5?8)e!$6^_c:#elc2)H"2=
%j`?;]aWs6\[*jpr#!#NsE>F>_>Z=bBNM3eMLCGcr$GBBo]#.EG;i5-,<!t1I_WU![+mugR"7"D'pl))ed5$4o!!KZEeWLB1ke]\C
%^#,mgXc)H@D3lXCOEArs?nK8>$ruu6ZQ]:Qn!"npSkrDBM\4^T,`#LLTK;Q_jrC>9otgG[R&YS(rh5lnd29sFIZ2?E`6X8Sm']NX
%HDHkCG<U*.-]r1K]eaf'GsD8Ur71CM+:?sK^T-HOi4X,S2a:-sFn5[E5s^03E.]@QG,0*4N"]oA5YPio2S3r$K*[B`24$`:(7l.*
%JF+>^Z0O)""P5rDKod0/(F^s[+].!:da+,N"F,@PkZm-?Z5<YQSI]jXL8euZZT^/^`d.g?F60]GeQGB<[\I'2aVP.YhPiqNY7VE5
%@To:-(c3;T;`l*<On&`Mc%R1M3m/PT%\-S3]6\H]*8kruki$9!0$CM85N)?<qQ_6f0Ue$^KQT/JRI/<PaO\Jgle6i]5N_NV"tQtr
%jpQ`3eCUB0a*a?s!=;tE[b-bGc9.+_B&UE4A"1be[@LP4IcsYMK9D5MY>]".5Q31P*&fIdkbh)n).n\!eC/e.n"PAT,+<jWk>S/K
%T97dtBs)t2$B;o@AsuNr+bb,sD@gGW8f^3V$frTE`I&Im3bWK];)8*k]RB!Vn+,H7pAd+g/0D(XQbO'/*aUo\9tl5N1/D7#s%r6,
%:7jZ'(s2K.>:eTedr*F=oD>]*AOdt.5Ok,cVpWe5EbNA,IR!ikM3f#5ER.'F-?+Q=$I\6E^Akg8UWf-[@1\d)<)&$a-D49t5)]<:
%&i.]D'hk?T;I/smbn=SHl,6f+3E,kpeaTZB^\+q3e7Z`bgBY43P.5uS-rKCXib=\hhfHg$TLk(ro."&p"DJQ*ftek5$A0b\*rl_"
%$AEJ*KsE>I)Vu^D?u.q>)FJh%Mh-\3oe[rj(S)<C.>&4k#4tON7YVqm1gC&/Q9]!%UFr3Di=_7&$.?[`&lHUTd]!!/hCQ+gG^Pn:
%HFGW(*L`FtM,bKGhe52#2J0<`;fahK[))%PN+:<rM;A39;u5o,Qo>SHM8\LH4Hm^7akWE9+%dNNbe6XIY]jG+ETV;F004lF!uX5G
%gBX'%pK\F[2gE6t(/C=Sk3-&?0:XbIi3D0(\Ft1V+:/g:W5?%33(4tXMElhk7>tlTEK:YP8O=hNX<e7s`6_4"j2lm=8]W<:/0t=q
%/5-f<=`.NjJZh1&QA![QbjAW>WqXkF'#"`^^72dA.3a$:&3A$e!$@p=PB`M'c44.>[JImGTMl3K:,:^)c:W3[DR2+sk7&!D0><pY
%LZuaVZBG>U`n3U7A5RVH?=I_V1[^>d1PR_abu&P#j?s&Jj_AD_/rU+H'QoX37q\49<h0\k%BXf9qR=2Sp]tPU6r(i.NaZ3e-tLqS
%XZ:.sp`E'EMMX1QFTJ6bk[,9TiCUp3KT9?j7X$,>oAAWb87Z5GS5h"?:g#9/L#nHaJ=]@7&JU]'!4H"=/$-1>j@7X:0d,PRU%W,q
%DdGZ_X"jj,Ll=8j*JrEo-&.;S%%8+%3r"k?pt^Y$#F$JD/a-7G0$Dd:Ydbn<a)&iFC6?<K;u<;ubBGUq7GWc/?O4>$fE@j2^]:=g
%&BRf>_>_4\?'T9&Q.h?9@,d]YK;tXli;23qg89NHVIIjT%%qH0%%*0s<0-!GQ<e:^"J&hgD[Pg/K+GW%5'5\1a*q_i>h:qIi3#03
%Y0OHb)I6rq^l'Tk"4o0;8/f8nY'^p)U5eAiqgSZSk(^fhgF]2:]t#!\*k\ZLM.l*p_:^^?n;DhM"B]?QM:#2d1'Yn0HQu&SqJ,<A
%JBOdN^cOijI/M@*/^c*[W;%4NnL_&.iUC)sNcu?dO7dfrPb;s6jnCPt=-3$C+5..<JHd"cE?W_Tpl<5q6Sm40[n@ajJV*bCWOe*%
%*Xg+lDO0Hr:^L"'WuSVUSo!*dQll4_l%bT<qX&63Jups4"@n4JZe"(:_pQBun(oZ#MbSq9$qZ"fKO+$BS@5;6'8l^#]WbQ97eY5+
%WM*<8K5T:YGROPegOP1^rFO/"YEmqkN^%JH@$=k$#s@p9G7oPq#pUP(L`I>`1Ai`2-m:dY%!Mm"m(djqPF3Y&*f&r?`2F*.W0o%j
%!L_#qBDf:\cFO/]FZl^#E3Kdt=N%;Z[Ln*V@d`@;Gqs@4/p9oQGJ[I(>P2+fZeYYIW9`Xd%ngEB&QGo8S7M0L'UXOMY-W#R.F9Q"
%oTG4b+?RQEA7H"`#.YHCf.%G'!]%nAk:-(Z)H_*oKK97mW[kJhZmSVF+'6MDp>;KhNF1"brq*&Ug*:$!bhFK%?#^h'^%u/5-_!>l
%OSgA87kPk,qugY&4UQij3Gop,9J268OVK1s[j49OJPf7hns$FB8Da4K&Y7)8>j+u;J[.CO'%7`)b"3:GY/(`NQRKdWF!`@p.cO]C
%VlG/CrgAJ%QkHC7nSXZJEoZ86PnVE9BK(?T.[,FKQskib7_^b3G5'Jj9P&K!oRhOZg^&)\+b`rA.d`qIBA@lj]3n9>aE[XpCde%1
%9sUj]0Y;.Zag^ZoJ-@JurS7'][kcU05VS"fe\d&Jb-E@q&BW52GDab+h%;>$E0d1;%fMNKrU0_[99H!Xq>N$^Sm&\,N=->Go\f),
%ht4n]7b]<5IiO4/P4j5\$AW_WA$ZV^A8Kpf9pbBr`qm)]-4:C)(GXT\*,TQa6]X+<&7=D7=+;5eBE=(Ed+(HnA*BsYjb[U)[L0D\
%WdGa*]Y!Rh2EF36,1H[2Eu6,ne#\HUSnbX*&E'Jp^lXZppUdLg/QQd0:s^t64fY![p1e9]EDWSM-NHT/c35Qt<>N#K+Ons8#`bVK
%I,S8((M=*X]-Fo<mF&bh'Y:!k\t\kZYXSW$+Y^^pGXMaW>ekI[XZK_PH7\3(fQ4\j'!GEb64S53+.d5m8hiN>hEZ>/M4`fA(E!4C
%N!S0?lZS`i]oB2s803lkI0fFsgd?L_c-NO]6ASqsQ:>,$BNK6FHoW/RoBharr-TAFkdIIA*cs_s%O%Oq[``!`m&+b<s5`D%NCRl=
%S/Jp=LOA]D)eNH\do=0C,hBTD?SMk^*_(i0MKa'BOm,/SCh;s248PmYWA#0odr[98J]R&*a+qJef9M?FpaBId[<iMQ*mUEq2Uq(;
%C6$2IJr$6SKeYQo+g;uHHJAi8!kAJS`M'U=J=,6*UTsab!"9\2QKLuq_Qj,jgsJ"k5Q5eFa;ETSZVtdgZu6cOY\K2:!p5R$P.F?L
%rm9GupUku\OC[I9-'$l7.i5qS?.($Hi+*e&q^'otanEpPBsO@p9g9_YjR?\M/3f'7ThUR@])]?h&/2T:8HmGPJ21b$#dQkR"hAlA
%>b#?grM-UAUiIZnK:FkFFj^S?IIUHc,V%r//kV@/U=sW.Qmg-GV.Q/T;:(.<ch2]q(aS62YVU0r4d$)9<;$G<orT;?Bbk8d'JR#R
%jSH/2WM%W=H8g[5bCN[g^$+J!BWtJ=Tt"sC%-eb>)e%U'OrH:n*N3g!XjQq8)VFIfK-RZ3:L5B[XrRQWUU;*TNE0:0P4Vai@G*mY
%bN^X^:Hf54F*d1eOEY`OpT:i`iZBgRia[ml79)4!IIF@u.T\Sa)k<;G]?+$5"Rs:aCNDbKd="jU2JtehoaT$&AX,h7[(s8`<n.Go
%%D0)pn;"GmLi^phhQ5@[GMB,Xj[e@r/WNh)f^&^@3e.<l9e[9qld+J?q\e^.+q,_>730TlfSm\;1q!gqY+dU?od*]1(lh2^AbN6/
%PkV.LOQaT54AP?TZ69b&\A7+uB.'P+`4r4[$MrVfHG(@9FQ?Y1j/9)n'%2*TpD_(-&6q;C]3sh>qN.D+jB^YJQJ$t<kj-Ns<oT5&
%Sm146-&uATU,#e#EQE1H/NA!3'::e<*k,B;(572@bj8gWWqR4aQo.t<AZKB-=:eTN0#8&5MCFn'h6cI,2`Dj3:.m1hc!so?L^Dh8
%Nmq6LWfLiDX&Cp"j)G*>R^`Eu0s)D$00Mm-oU5MB_n]N7Lu?3#[<@F`s//&nV-ri9ooaR)A3A$/OO6c<k'%,L<)rY:K^KmrgKL4M
%$@71&\5d6fqM?ZrBGKko;F<^?\ND@]3:nTl[]p)U3t:kV6\SA3>NM+51P"=2\4goJ"Z5CVpY&?5,0mNnY?p%uobSITCJcS]r>k=7
%14P?i=r_I81+.ILa(n'F4ZrFt&WP92inj."4`PmUT5B=sC/%tuaF8^V-/<GZJFNo?'Yk;h6Vnf["AckVC^)9Qk7!p'n\a0:F/ZO`
%MO":Y3RDtK`V1XY:`^N1''4nEA[/]3f$MnPRkU+;("Z!k(,\_XY(uP:TTG/tFD*Ud+&VK<rDoV?09rY+9D\&[7]^OYb&/=_$7Jd;
%P.[C3Q\Add'B%TnW=[]^%0%E\eBi8%OoWm\)Jk<LU*2m&8TcQH3;dHR"]\ZqU]X<Ubj.S`86CH`IQ>Zj$_R=q]2$u?Zk^PG"kZD)
%92EXX\e8%3o7FeV1s;uc5nBGU3'i4.]6!V@$>cdsm)6Va>Y>)9G;T*))!%X_n.lm,na(!Y=J;'N=0$CLgK/5uQ\Q&Re7j&)FKu,f
%W"<k2X([d&=2aBTR<6\=/^CXaR;3)NU9,8k$7h9MA@h3c;[=JkoDTS<C$R(t=G=$n?OFSrW(2W!ZBA-/%1a2LA(7MRdG;=iVuP,C
%lnPjJ7"?GUgRq#to*5S7,\PsMXf>VGJ+'?'Y>7245e?6`m=#bop/IQn*eTO\3$pIrmcKdlBQqu:_[*TK>k!Nan>_:Q><+FO"anjA
%&B4&%+Ni0pg)5%r?,tlF*ATB'JU6VFi5;7c[NX_)1[>a4#qq)MB?Jo$e.H9jX9c4LGI7\:6OtgQ79_4J[_\K8r"=)Ph.QOU[_ZK(
%en8FW\Yt?92TdcDK`,9@;R)%YK+:aK],d/``JQ4?Q23E%bVlru\DNFfW9h`Y!UK2URhNY<@AkL1WqV(D0LGiZX4<bB54$&pXb0s`
%>QddB&3S/#"a7lNlW1Zs(B(5j]I%Ro@dr=tk!Qpqm.-$Ld1<!41r.``CS+VUkG@">&_)^0WDd&'l]G827'i5mA2AG5Y^[g?[h&`.
%\qWNO=XEt,dBGpAAGV^$>R.-r%mH6)^uLG0HCtEKraGS%(/Sq&5[i0"D?8QG=P\,oSI>>OJ1c),\JHB\g9@tc578Ij1VC\;<V3$M
%/%@XCL^B`b%u7MG`0qaWFtk)P,/DW+ZAUf5;[;Z=57Up$X3\a]_o[LcUe50.oSP)sc.N8?a5t*(2XekDTru$)Y1oI(&c:LnG"6[c
%"tQE,i*jE_E@F-W+hq/M1nt[q<)!:;1)S&A'=a.MP?W:)*E09l?eVcs:mP3+F+6Kt#]C#:QE]hmli3$f;7q^MMZY*71d/b2J+JuA
%5@VrBf)@Ws!``;HWoO_*b\Y<:h[`3Hi:T*s9dL8(0`0$D9.%M9e"X\s4a`"@3/6-tXdk;O"u/I036^$1$>:4B_g00.3hY5s(KWnb
%-tjK%<EoTh!o'C8`#WE1^]L>hY(DV[,)&<X\YOY3:,^?L>WlYRgQ=!#]@:GJ?r_cJ!R=LUTVstUPWl2OEB*Z0*Lml"F+&AaelJ!\
%OI^-[')?Rob0BtH7P`h`+qR(@9q<^Y,mB?04gUgJN+@WNj&8!A1)msRVKrss"&gV4f9aF=Bn9lV0`GM8$'cE'C_!jXg@9S!SeX#e
%32J#K3PE@7L].;Ei+QVSSM.c,?mp,U)urBu-RANbS%aaLTNiQ7kjLP\d8RSB9/L"M+&g^Ql(CFCjXMk2I8NA/Wq<d.KneY9D'OYG
%Vn28'bfCeZMAO'!ou?23E&&8NXM;^cDn;1(NmX'u/W_rb^Iu%qpp]d:O:1MnI[Le!+A*.S((<b]1id2+?$KbN3RGXG2;/RRYiChh
%7[W[af/P%A)4)%dXb]cWhmU]LEqp6,bH<_V2H]jG.)%ZeBoI/HHo2N"+Zk6Mo6bo<Qlc+5.uj(22tT.cN+[%;p@0+8'abEbDJV*e
%b+&@&a^DcAYh7RE&V!S<O>j.dj-)j/qRC&Tpj4(!NFU&nB6H(\9q<,P$A.0Heq)(nq/U<l>&>8tNVFr\`&LGq\lp?;__FF(_Z;K$
%&4Ua:KgrY2PQr=0*3pRdc"+/*?:l%)B%K4:AUM0$&LeMde\CuA^F!4#NVVaPH>alGRupArp\.a,U\?<61GLRleCVl'"(B6br)JI=
%Yu`Y@6YIliGdNqXXf+2A_N;2MZAn$]+6^!R@a9Gf9,aWFK\=3a%_??7m%Bs%j5h\lb@TFG+.IdT<A3bs?^A[]nK^eGIs5!CdF&QY
%TsHdUP^[KjbVhk$B&rYV@^m]G9l:1^##hb+U@i[+@&E&Z>dXB[IJBqTb_BY?DU)kY9hR0CYkJ[*DIO0TB(NW[c05C)r%;2b2VAb]
%55,%4=!9U=\`]*c.#B14H9@%"PW2LMVj2L;M;&gD]A!Q\0_ZCtf/!,ohe$*;c>%<3KAV%)&kkL[rIZns\D4&n5$?Oq]%pnVhr!eE
%VqIXYpR)ie*^SIABhpH9KO5b,mDo8JrG+/jAc4/_:!G@kofgLI?ZPBK(K4uhUj\_;5/rs=FHEM1VPlQE.GL%29i4(JkR<7U1O6,-
%$4lZ!MelSUB2QVr6\<;"l5RYr,%.]1=?!5_#?KYg$_Wg?V#m.@8Vgeuak&I:>7L'2:b0;RZdBPa(:oC^mGdEe?W(hd$1Uj[@`h]p
%fo2$`\1&meAOl.q1<sTu,h_aSbd`)DH)0\ep^S(6NR;/#Rh.Pk`&Yi(6OZ#/Wc+M]g1enn#r#S&3^f^+G]e7rg[IMO2<mCF'SRrZ
%fNR"/mri,%e/V[[#?qk7)u!em^0NeLU)gc=r5iZ/cVqJE!b>q*&BjQ-X\KIMhe9l"Qccq)Z:dKY9BER"/$\?OG4d*iOMgCe`tjG>
%K>*?WIlp-!81ei5P6"=k[],A?Hs3:6"54hRnW8OGVZtohS>a7g^k2&b*[L'>`Of`\n%RUk9;>77`c&0$PE9P*IO7.erfoVKS"QGp
%:l8S4Otq<,JCCVY-Mea#!)gBhEmgG3qM3a\.5DkHg/HoD5Yfe8]$BV\3/682X@\WoRW?;8^8u@T%SHs@!5V],&m<E[^>M`qKm:<L
%#V/_]rG]%uK?tfMj]ItE;2_d6;mZ5Yq_e4r:tUuf!I%cQB.q\VXFXbP&IkEJTh=Jg_[Ji<*D2$/_<#qH$9d*#_oG.#/RF0H8.K,c
%enuO$H#q?mYco[nA,b5oagn=pDZ7N]a.tn''>S<DRX($^B6%CMU[3W%hen50[l%>HIQR=E[U7Y2*A!qU2EC%l-;Mh#.QhJq+"6't
%_BlEfPdZ,QXrFj]<B4LX+^400&I"8)UpF0H_YIV^A[LN8BKN$:0+S\3<n9m\8QA[^4,b#YXc<7C4Hg#UWj!S#c5[g+=$Y3a<o)B)
%NGBuI<]"ci,RP,&CD[$O)hV:kHhX0;=Tq'jk]W$+-.LpNb\OQ+8O7Y<"!1&h0QaFdl$n"SFDn4Hfj\VbUuYb>m-1(C-Zh8$cJ]Fg
%h3b[P_rGU#M*eC8=28=^9-(_uiI1kMJ[_p*iu[Y`1?n&Xf#,.&La*N3_i'5`NFhZ'!j'n#q1$3kY8;+Xd@@Y(Ld@@>d#s28HL.@7
%<$=_jHIqJbn\)$KKnlF"cs8g.`)bV>KT0tr/:JOUl\7_?1\g;;O?LW=6FR`TiZZqB<cbRiL4C)*QGjqh1$3OnIuRcB`6JG2K+%gh
%@lVW39JF*.:<7<A-Q'-I4`Fg_S&I0/_hcE1e)_?G6MDC#GJaUh2Ml$%X_`oiS8,-9:5O`1$mpZO>8!=-W%Fq@dd>u3m^8"KY<)g;
%I)$%mLBN7=eqt`0M(AG6ATa-QogIo4P(pSeDZ:TL&R%:6cIU?m0pOK)Ti4N'F@[6XE>oo;RkKUEh!;]H>3rXaH!>]^\0Ok"SSJO7
%rDQ&=,D`er)"Id:iDF^K/D^V9fU^:MBN)#PYI'+F[2l!)Zgc1Vc.&Tbr+M-Fe[BdB)2*$<%f<1.YGr^=2HkiS==ssuD9kaf5@"*W
%[k:g>I*n;cqASg?8m5"%3"=&Pe:X#G_hZa2Mku,JY!.3=i'\UK!&PN?0#G@gj^?/#Hk8-k:>O1OK/Ds2>M]S[1tiWUddlar"#p39
%h:osF5.4r(I9^KWrkm`f(]k_#CY2"Dra)bfE%UBaDEpZ+>OttlVWp#+>Fd2C*kSE3I^jMD!%be1f=tQ!DQ'\l2\$]`!o%6?>fAT^
%TXhYgS=0I'66/2#"C\PO$_Hp=]BX7?@lNT#BjuK?%.C\e_d[Q1I&BPueY9/BBUo7k#aLPFfo"hn]>nZjWTH#sBL]EA2<:PJ._"`P
%%)!r3G1fuXpetin,:PuSUF7X]o`6e9@K&a5&`nS`5X`PJ?3B;<77\`=4?Og\rUC9K&r:_uc*5L::d16,7<;oPT'p\44Lk3-Qkf*h
%k]Me&!t#Kq$Bi:/[2-'%>WQ[Al$iXH54h8s_E:#b&VGgi</n&;,B.'2#-U4\^'1IR'@!-ldqno5$BK,Pn*bdq6W)p:!pCPW#'<+a
%'uT4uOCVlA(pYa!XQm^@CPU;uL'9-`4U9I?TGOi%UYO<2BZB(l9**L"8o^)M"+Q)8j6A)1IRo"t%XuT:VD!\/*uYU9mN`u?L!JR"
%@jB3HIil'pI#QTO62fQq9E:m1Jh4$ck9'[f;AIm3qL"PZ99S@6d[\LNR7X\C=ct/nJs)'iSm"a,:e@PL;bCh#ID)Pu5,HSg4Bmu.
%bL:W+IP9a^o2K.];p7"XH&=B!AL8;@4>e$uW(EjD:W^n=gR-Yg'>R2:32Vo&4AhPB8s2qpFt1[EKiD->'-ieuJG1*'I>@Sd'OVCe
%9Q5[lqChm`'+En0F3MI^&McAA.WbArL=8iCS2opl_2$;IdM-@U_bh)cC5Q_!_2emj1<3:iTZ[>[bV5R%<&$1/&3U`nHET+s8s/\5
%V51UM<'Yl1P_pbeH/Vb(TbU52P(KkJQ!m5j=XZ(!MO(R-VPF>EYEd7fWm]=rUdclcEb,D]=_3sh[;4Hdmf^8l;"/r(F:Pf;=G;[u
%*$^_;;%>X0ZD^VGAgc*5fSEBbB`)gW^OV2.eY,jb)"AQ&=nRA9XbNjL-eI&m""nXQD^!*J@H5m?AM]us=RHY?7b0IkiUl7nTOe4[
%^FnBR&2ZC`)H;W-5!YB!YN;[J_q8Mr%8Z,ME3*%cJGL+%#'J1'hOR@_TdcNpRm$gI<m$&25\7mX>oc&3<k*9\nULP@g48sAr2sHG
%i`^b4dq&!4:\=>unQc[''__!A3*GnYBsjuUTeMt/ko)\mIV?Y[W!.`er^6Fd'gqR39Fdn0a/6O=ZgShpTK9goEbQ<A/#-A\5>(Zi
%$aN`@1PXUN9Y4-SYqui*e]s@Z=LY[e#.Q0[MGl,TZGaG"TAJZQ4A>T>\>"N-`HK`S]9*bSEl;?(Y1Kp,/A&aBZqb+h^$[msZ".3R
%]/SL,^T`lrCUMR9,+E_d-%]sk%NcP;WH).BYSP39Af@H'`=_PO"is"b:f>!8+!Lq8fAd%A1&V!W.o*9,7q6)L7PLY,5Bsa.rN'NK
%)%FR!n>R_i?l=PkM'KC3:^7-bc4<_4EM=8=g0S1l<dW]<:d8l*paFiR+C8?ce4&@l,:DFtZp`'uBF]2XKe\Y4MJ.4F]3CqP_.UlB
%J<nR4oQ,"R(>^I%0P-K,mc%NP@$--q=JYk_-hK)KC(Nh):s2ZR9nd!*3/YP[]o\#JJg-"GW$m'EH[Q8AJZ`$?Te)e_X.[';nNPgM
%oWRZe_;Xg_Loi0_q?DQe1H81Pi=7X(^ki6Mh8n7p#'ih2#bW@gajW(#.=L*F,4+JR.tpu'EJ]G`qcZEMbB6m@)u[E$2nF6p8P%Hu
%C[.3$nuH>-H(hJG<)N#]2!Ls"JY&e<o,o,hQ)JAtN@f1MeddYTHaA-B3O]1/7K%MaDO8o2G<s"2e=K^A>*XH483P1%K`_@[Ca#C,
%1qNY4,*W(QGN`.6j:$L&WMV))(OA+j<iab`9Ba*si!L%"#L44U3M65AIlDa,^>MBLG$]s.<lorJ<KCML_Zu.X3UVTCbIm;E\F\\a
%^#f,Nh<sm6Lkk.tgM]8ci>BjqQ/Z49f(\Ot#O.=COB4H[8\L%W];4()Z_C\t`F"^i;3L&C2p15MG,HNJC4`B9;PfO)T0u*W*>X^t
%HuSO8nFQ/[+s<'`<7c/R6(1pBFH&%Z`;ede05f#W:4PeV[5aX^@fU*7>cp);^u<Zt]gRF%g]p$8S$VRLLKV&_Ym9B_g'G#2&WMcL
%1*luQ&TU5EhBW6g?0FptU0@cQAF4/1R"_qh7c'JGD1BhV'S!;@%NCllIdb:.Y;[pa<p"&Go;`:/++SYS"J@>![Vud>)!*&;@kRpK
%jlaPNZu.-GA.]&Mh!N"_\GKumC]i9VFCh4U`p)k+)X$8sof1A#Vn#:?jZjo@,gd:5YlCTi3gX$@L3J%TF"cXOn=*]_bh4gl']S8U
%iRnDI.D'Soj")faFGZ))KSobj[]kqf5'e@7K->_c^^!:Y%:Na>`"(J$Hic,?<U'blidcZGb@@%,.).VlYI2G2Ogg\O%F^o=$g<([
%iX6rbT`]`de_E(-d-5f-LDiG]H4QH$r#p,bY&tksq?KL\!t2b)LX<7Gg;Jg0?h->+.+Ta:fH:b6Qcn+8^kl\jCN9.;MJTcp.`QM^
%X:Zoa=$%I43A-!-/j\.VZ#KTC@ZoDM5[<#.b5nkYXUfSb'>g>[LmWn+9fO(@5D#<UZM:,A,5/N0.YWP,jH,EhDsa$)T/A*-k&tqr
%_DhW#-/NaOh?.I\.'#QhCI>nrllhgR+_)u%_RT!P]enag5T[LmFrkoF5*n-&Kq=S?$YHU@A#kP1XX]dW7e7F1$JBDi>nb"RL!\d#
%L+'FkVJ+)"'Q+$=Wo4@lgb0^Y+ItX3S_U.'j:^F(G;u]@'W=<@du;>W,Lk;DQ*sF'Scd$:HlJ0jjRSB"URO#/G_gbYia>QaJjBS1
%X%O<3*mMq9-E-f]d[TWa>p]kGQ]X>q#+IC>c4:$:;cQ%ucbluig@g_l\c!9J^#Xkgg*6-XBBta7A@gdZ];-N&q9mrF#TMt#@>B9b
%MIFhcc2Fctb_P-DOMlcndmfc9h>P7Ub`?aahIjCgX_"(laB_CuaI6'PAYL];ED[A2+u9h562p"uqL_2.jF46S;GE><RoqE#53T1G
%MJgjt6#E'^$i2a._EhJb9RaXTp3UNVjMjN$<<VpR4#L%+11>gF8VL%h]n2VEKOHJjJ*DV\n]"'7QAj3a3rpMK).T?`B$)nj79Ar'
%&GAJu2@\tIn_`dd9`,\*]Lu[e&F!C-29&d;*s/`Nj;(AsR$34S$mCBPIM,94]J`k^A-MoUQYDf5K`af'$#lQ;c9^K)Pr$.>bM^A#
%ri1m>./$K=qKc:XW*'lI6=aF@>'DhH3IfF\E]1=@+KG3V7$Dlt67^[?#X`TpY<se^(cILf1h[#0X?Aj%2A@@oLK83m0N:8,>X.bi
%+Z`O3(M^sCLKDDN0k<QN&Ab'u@WBO9r.l!)h*MJU!O$l"ggal8W42p0%SsR$&-Vm0i\@Nbbmrr,1n(4IAX'8jUhjW'P7(gR]66[A
%g@qQhWf17W5eC0g*Q1ZGKWIGs,<(@YQ8P5e-.:+Sp_:*b>cdUG)9i[mmqG$RcJ;5WTJ`+<.5`*EV-3M'pNC(K;482kJR'QTj4e)9
%9.CqW<_LIV947;s-_C/,3ZLNRBRH6CVJg?VE$QMd=d-moq5(V(RsV`Q5Ff6HM8u%ZV&p]0bg2i.iRDT@D(Gg#9,1REp\;Wq"WHZe
%?^4i<Rbg6C5;NlE'HR_^kE)^U.G[TU'0>3FD=s!p!Gn&p]c&JtC@JD12(!ID9R/ghNA=$t]4f86+)\[`*:r=V4aiga#eb=XH)UP]
%ghJ/"`tFlM`6Ku,pQq[I9^F'hop\P-dY.$GZ,9;el6Z(TRG,VBHc`p4N@h@m#N8":/rf"ITO/*9`W0'Q":JYD&Oa5s&9*ZQ(Y`n<
%K<klK+doPIrB,,e[*g,ML&E9E!OTDCDQa$mh4.1NG2=^DDG_iof6t7oU^1:1rQc.HnecknYeC5O?YECR-jH'F@.*0T4%\<=CT>7^
%K+S*IJ3t'E&1lY0D1HJ0#YJmFC/]83LchXqG8WgI+r8KFVZo`A/KA>e#2baG1Nk=PVYM#YX"VXml,7`<^NW==TZ)!B%^u/=)uS-b
%e^ZKs+opI77lWl*Y$G:\(#*^9Wa-E>(D\*HdE/N;Qe.<H91)]>;NG.j9p&L.2!bnWbA-f(pOAQ&@6+2"f7<A<@9j@^7)GUg"A_*b
%&)'g2X_/c=qER"9-'LjA6'CO.)Eme]B-?iCpmmKWEaWr/K:n50rM#cT(qI^>l_&\P_2lLm2M?6?p*2+!*0?IY>uP`R^"U2naPNB#
%G_]+[=`0!LT9"gPNIu>sk[B@@O^Ub:X.fh//]M;5C9R^Y^2Rr?WZg<2(]4qQ_.H2jR,;Xi&^"1K=V87dZN/Vc%Zoj$b5W;19G]_`
%eP"L;5IXhpermSAT>#/.259Y4=M[=Y9V>@s+JcW%]tH]>6+7j5MBKs8rl$C6Oa$hT-qZ&Ci5UfAhi;E'[])XAH<U7Uh6s=Q9rsX0
%7*HF+Yd`#SAl&(JrWWH^oSP0Y5_L1)pnSVF'G4+I/h2SEA5Jm,&G-;J])DDZpP+lJE1&PZN1DKJ%[U<Kbg7suFOe$\4au\3Guk6'
%\Q.hBbqnhaR5G4D>);=S7['^F8aFg8:M/$I1[2B:FQL_mGK(,bDd>X*K&Jrn`VAo,2u<UO4W-ctA\;)/0C1cSW;p)So`h:$/Xj>Y
%D4_4`l6cio,(4*@L\Km7kNmaU\"0,0`;p,E#qe@Mo$%\rb1_iKSmpTA-X&=6PO<AZ.L>l#3GC/kN4[Rm<o'L4"CUt"Jt?hG&cXb7
%hA`J^[h501\f:j_f4^&S_KJGmWll!IYg#q9_)\=`+^BDFY^*@D]a.Q,.PTsb*#3OM0DXVQ'!(aL="n/m@<NRRmuJX0WZO[]@d03'
%CG:g'2>R0@iR.`mm2?O/D0KLa"-rJQ1S!("F9AVc*^\mF",5e4,K1&dVfT^!(US3pdl4=r?I^#6PA,Io#iY+hk\GO2q4`le<QR?j
%j4Y7,3Qu*k]l^V),f.%LBW5*e7C2s!5WDlZfGJ'0+dW112DO31Hb?@$%_.8)CX]gDLOIY7H8Kj+@D2<J[pcX^K4oWo7PbfJE(mZ[
%e:K'OUT2LFclK21J2%rP!%)0AL,]aa7,gZ\:IOk$5=-[[b(<Z4`q=9hTf`._W>c?,eRGRKU7ZoW)h2mQgDL[>:`3g2Q_Z:G#(Dhr
%dR@tt:^#?`#N#9r+c#\6N45H/%'I:V-BQ'WKg/foaGZb+(k))`Qr4XF&)UCcLWEQ'(m2X6&1piBTV*%U)!7/(2RIs<G-JdtrbZ":
%E`-KW)!tpuN>`KNS_C:8&<i0hNZg7,!@,:d!HdFW4$jc@8$0#9b:3E*N#Hu^Aq=2@6!Vu_`hGDm'u,snrt%^2Z;Kfe@NZC%`X]@E
%ho&g,%>9:6+)JtUg:N/tE!X@ZVh;b7nbMFr^<jKb&\6:!oac"JABnV!E"'Re7jgJ7U<9dt'nZZuL3`E>0C9,;,<BZ.rq]*_G[9fR
%d*<op[S%S1C@iHrY\I0b"H[B>F@Yg@/opIpa(&$V!4@Y]+$9IA%H#l+oKWQ>3q%LDfElWtMJr7<l34&6'p#g^;kpH`dek<XP**0$
%8=FFlh)Re8O/1/ng*ItZVi`gl8:#?=qdq/eHDiO[SSj852h@5B1)C+GUROf=hPlTq6YU.+MQBF$IHdX*Ru+,dfRmd.VhFgoEZEoB
%"qr)A0e#i(8I;fQ]QuM@e\K+<`2>D&CI7BV1VcJWfS!!X;R'heXU2+FcMs=E`<J*NP]QPb!kqUGg[P)=?p"mjB6!V^O&(E%8SgUa
%!MkR(,bpHs*b'RBcXS6rN\i2JA5BKf92*@$8Xl+$8^]gHF+=g9bVIr_ju'%]P,(O4h>!h9RXKf?EsOh83CXY-n%2ClJoR^?&Ju#*
%Lb_.JOb\@ef5(<,3qhL6=&0Hf<a]K<&TV60Ne+r+]U9hQ&`3`;PJ/FN^[DpUhL17m\r96F]@#S]#ja8C//nRh9?4VjV2<l?-uLTW
%"WuU7)=sbLO"2I.61+kA""eEiJ2-D6h1E6#mLM<:9&F#kHO,lrKI(-fI4DiF@:%;;fC?iBg%b,/]"n&n/&s_=G?JJlmbk'EA6-1C
%bGe$?D0P=;$hNl5^O;DK@^C<0*WueBC+G35G0kU#`'-IXCo+//$\XF-TES[-e3tK>o-Vt8+`SI.*E!H%ebqNS#gA0O%>Xbr^:m9-
%:g3FZH.=)EbVlX-.Kf'rb1`_50&%q:flUN2l15_TB^CuVfgr:HFs?uno8Y>7j0\8Gp6F16B9ia)^TN!$4TlYP^uf_C.@`pE1?(Er
%>nn1f]9iH'Hi%Y.VpfBP2htdKosjJ!lK0q%*8pY5NT=-$e!N/_$'TrN2IJ[332O9#26<_,%I:46A[A\KbURDc72cgQR)-%S%W*pm
%0tJaB%)plmeJE-]ZU0:p_Z@B0fe'M1F?t77p!jCD?56:KpJ#3$(Q35P"5EqC'%@ZT%8@ZK)GR`BHt\$&bA/WeGr_l;a$ZOVjRBt2
%"c9oA`7B0<08K2[\tdA_h+)u_"IH0JD\Lrr'5m5]7/qp""(<&Dkg&;(2`=q2*hhr6_qg&Z4k<SH,oH`Db@V3:<lP#13?;(O";5J@
%IJYLK<,K8+L,9/RhZ<$Wp"AU:8N?b2<(`HOiX/3)M+F(K!$L7Dn]G-*@/T#t.EBeS[Do$OZ?S20Kb9Z'&8O-,gR(Ru[a(mLTPBS#
%:\Z3^4jgl5Ohf5p1K^#jZpT;V8gV:1EAmU,VY2^L!`ub>@)3+%UJ't'V6IYFT7rmT"[(cG"`Eb<dlLT^cV]g_G[6FnMTU!'!U2K2
%\Xm],<X.peL?nPVh=S0FA^B0]=s6]9/l0gL?P#<"0?i$n\3UFrpQU@>(L!'9%BE\Z[mmV/Ge<hC*o'@WYW%:@S'/>8-?t:l1_EhT
%I/'OKTR%P8+(u^BkB.tI-l+hSV0g:N3?o``')-=[JIGeFUC[K/+TXF\aG5;-873,l$6_be6qB\&ID?I`)G>tRaEO&W@]&dc$.!5#
%`gP;!-N'Hd">hJ6bt(8:k0],P1XKrM<1Gs]B>X$R#s_FdcsLg=V`nqXRtqO.ZF4XRs0ndu>gc4slT(:hVb:4Gjh:)fVKch@]VNSS
%BZ1dVomQ&gQSe`#/HTF'\XQJ]msXEf+rd-NeKnMgde7lVT=hP#?Ij;g=5)5gm)Pe'k2"U(mZeY/C?CL7P7F./+4'\9T=;0fkZssW
%=_?)[1[D]A2!E0<GePhiXFc,$lClV@AsI=AjlBMMMcR^&Q'65WnubOQQ-b%-CgdXJ=NWdmE0MYBAi\sU7Z@%9SX*3UV+b\=>?f88
%QEe1.NjtTQ/n:GF\EQ2=fHk?X#q'%SSsQ\J"Y.6VZ7k839,IXn;$@/!_*C,MYS1UgL'c=;:5P?Y-O,=ES;K&_CeU3:EsfuZ'q+P_
%:;i@mZ<n80AP-G-JaP:k`lr-R5>Z7[oUN*QSi2o(I3u%g3IPRK)%B983FupAD&W1F'9^ju9/U3ac)FhZ%bJMfRa])"]WhdTCe@'a
%nC;-P[Q4;'b**dsFE?0lPb0mCnbk`I)gQuZH#Q5-*-m>B<H1KBS8]Pt%*:MpEhlr8GaWUSkK*:cn3KS(B_i8H_fVQGrmhT-g?Q9W
%\-'Kg_Le?-ALG.E$2\n=l+[,;q7PTf^WD?RR)&lKGYTt7W6!kqb!47@-bSVn)a.b/c\U-c2YM@Gp=kXhm-a=!nGbrFe'&W#ONQbI
%o*J'<_I]@'hC%[bO[D>\gWs!t'CPjij?Ml5&:4W"joS6'Ke<LR]7RDn6/DSbl'.:<<(M<gj@pPUD@UsHLY*[-Xb-cEQ#rF])c:ur
%<tY=5,i(+O]%N%/2Iipb=`,H'DShg2P3`)KZ>T78:AbJs66[Zp<=<_iLSkIeg'SB7G\HlIpPlCf+N.QNA8.t%*>%L$6j[7'$fi(:
%*e;KIG1nO4^.:Q_n*^Di#lij[U'SRnXsabF(P5^8$h3p[Fa,I(Pt+(`)IOFQ?und%"4BDZ=^-S<@^mP$5t$d7n>t2k6!jY33PA#c
%84kjDL]o6IKH[7.m@N\&i2eEd=M`=nC;?_,"cbQ(4F4ZG8_n]u(_J4g'*&h6?k@QRlU>u&,:S?IOi;$g/]&_b0>;s(FnJN;i1r4=
%F`KGo@.gXJ+Wtj>U13%jGI-Xo<P"M$8lPRPL!&,I=<o"T[rZ@Wg]P0DVRpd&]dRV`R#NfdLcDMb'LR0LFR9ACl%$YRIl4AK`0LnI
%@&9aQG-3#4!5smp1Fdj"kh6%tE1F]n$<*NQ<$A#Ge2sTQdORJ:g>9`e^qt`fP^N]N4<AqILI\Z^Y%NcU(EQ<fj><B_MQNXjC]@[i
%kW/L+iLoZ5d*jo[W'el5YTkh(Y!-rX1E)ra_oB$HP7GRBN>o`D6SZkBYl5WJ)ss-#gBc;4B0&.p#=@\oZ5kTKW?M-2Z:%1^JB4F6
%"On(-77!$Td.`FMf.WC!lStOOW9]OfUo"_m3>LL^=aAKS+XIQ%ii6ck)*6iDOmN35<YRX4\Yj_*C_NP!GE&$Jpbl;<?@e2(2aY:K
%6[QtMn1PlX*s$!-<*t2AXVom7#tmfK&-^MC"SObd0ID(,+Q[4Jb")Y#0Z[j:jJn-Sh4utrN[KiYp"#+N+0ilg;ZV]NY8#VbG9daC
%./<lI'4.[u40=-PYtQPXi@-c>j_Q%VJQ?7u2IsFC)\Sg1&e7%`\u)DYNY,B%fHB=$EWn:Oa*4Lb"&X<d[NV`\pK&:KEUY`qRC)CW
%?F_/S.[2=_`di2=W4641)p*)aq]gb9Qgs7F4kT1K"Tjb0c)e:uWKRiMn?g'CC?`2O*6UOUEi[(58>)FZL]$AmUX0d[Uq2N>gbn@Y
%^G!b_(-dbH>m.Ulorr'jSoP*$U-k/.6g58;/(#8iEj?=T>PaB&1pP9A%[A?L#uipU,TL2g+;XA`2(o7>2GL8^)"k4XMP]!4_1,Zh
%04ptk\fu*17Hne!5.BNs5F-DK$5K=:pu;GEY$u=9Gl[7<*Cmo+r>#_)p$bhnD\X)\?2#Y`Mh]c2pt.EUqkuJ5>6Np\79aA(*?YC9
%rc6(pb0'g1F?+c2._Hg#J+`sC_a5OWS#OA(^g`;effa]WrU6Wb$t,``To7cI6[+N%!2CEdPi@r@?rI8Z$95"h#-#0QVBl;&Af+F+
%=3?%f$2eLDRG2YSqB`@^coW>MBY-!6j`VoRd-^o6p*#cs;;9`rlt6#q>ukf+l?>,Sb<TYdI_',;M"@4`_"K_b:E=2g5n#J7(pH-k
%B!`@uNERe63C\\JCt(eud)Tql\QM<:'uf?]po*!aOTauKO\EUSjorZD1bjsFkB;_0&LBF_6iiUMR1M^hOI*LaUDaIH%)N2pU=)%%
%@/#`[Ke/UK^ed)QR$;`;]M'i*IP/#6.GCL=%u77]#GrJo2#Qn'5SI`4Ds:L$lZk8f3/+G'imK>9!oKF-CBS#S)\J4b_oE0oZ#;s:
%h$"\&HW#]6nuGDW6nXs[,N@0h>0T*D+A@SF-RRAk;]ualA-j@?Rn@BSqt/.(4;Q)(2Pt7e;1q)VRm\3P'_kV'*'X3W"/"4`T:,Xt
%YH)APqrj<(]V4`"rgA^-IPWCeNI!\G6cGZUCA1/ubBg,hT'$#tP6l2(k?sLS,LH[]C_^qrWP8"a\Idf<WR!12Luk!JXkSXe<JAP2
%EaG9Cb>YfG+^7JaJ(_ub3V_Z7N)543XI@l,:Om]B@2]B]=1Jk.!5;JU[GN/JJ!cKt8%30[r3':tl=UH"lNZ#+UMhrmM#dmm.ks\2
%9OsEh66rOePlW/S\>r0Mg+OmD0PF_5ZnS.eSo$c)Q/gX(&`n`W]?h/Z(kl@MFud/8YWjWWQ&l-Kad_s@0`:d6f"*AeMQD6rrB@uK
%YB_"jdWJBM&:\WO2=Ste+M!G/2,B_S?)]e-&ndPNfqOXF`7DEs)>*]hO([TkN#gckK+P2'/Aa]Y>TY.Uh'g64<C._Bg/a3AYEk</
%>ST94V_@'PE:e!te-(rYhU2IP#X4tSYKb3pF`s9hH;UI#Ab?65.tKae]`pF1SrOJkP7(7:,kj;K)9=uu5!"X;jEj^)K5Y;*9<*.8
%jAC:LMjd/7fc#Y?\^+NUs)HdD6=_1,mKBB2!4NQ.CVIe=KU8!@"Su_Li!_L`dDZ]KS-"s#SiOVL7pttJSPIP^#m`VDC<pS]%.bKi
%i=S,B!R)bu4[R[T*-)*^%Zofeq&BF`&O`1!XhE3n*\2./V\GTg6+!h+%'ZKTW#tZb.!f^L6+/c5#]!*Br4R?(!5U:RLObdX,H,)R
%ol^?ToYFXs$S%&"F&t.;aE6NReB^UkYW.l3;CL>"E2ZVi?+;8oZ_9Ag:(GotW:%L^FV56Z!^(^I9+Na'"%2)^_T;lgqZNNL/$*ii
%&8-S0K^WQ=E!r@RAaE%dE[^B\2t#K[RZ:;r@.H(p\?Urhpf1)qi%A(7LWH\fY^uXW]Qh*6d6Kk/"h;]9]H.hP_SI+LHm#N:%33tE
%PmVBCX@<6B*6VG\b^>kf>)O2L+cO04Z?WUK0IFPj(%Bn&SbZKO%(/rG.mljTVTlG"]]8FgaC3i2iHNZAG)gNKngmi!&U4:+[&Ij%
%*RijIlA,&6a*;:tSbC1i77DJ!!hU/&88]g_bq>ciX+&!tkX]NVl<&HQ;YAHC&NBgkZgTu(\`QSD=R$:Q-5s2@VB5AjT[mpjSCg2s
%bF^PdXF^^k^'2rfDCS*Y)%6`]E3n7ZPdbM<f,U6>[3,YgRo6LP%$@4kL4q,WE/]ZPLmJ2s+OfTH>_=qa!Pl2ASsR&;Q[+HI\j[AV
%6b)]]-$D;(N@TW(6N6bN$sVcE3Lo<,_(lED2HVa<\#5oqj'#a6OXWba;C+8>(Kokp9nL9f;MITLCXcc]Vgch0S-+%UW\afR[er@I
%cp.ee.6:dMQf,JeDe#)q3j)KE/?_de[hM@'.bJ\O*1tD4$4OPcFYlZl/("Q.5]-4jdFJZ8;>7Ga_kRLY(Tm@NWU89].Z?;-D>=*J
%",U?+n_c-kfib[%UR"%ed`*I:nU:&(kRO9l,/Qe<%3?Lr#X7m1<MY["GZ^)ef@ssX34IA,K/+o%0hSD.SZ5E8);CAjbq)W*-KZ\9
%K`^#kMNCse(-ul.<Pki^9+:[OY')(L3=IXP:&F!lVE?i'A[fMFR'A:4#>J!D5EH4Ybf;U_m7[R,Os6);\_meb.?S&LYfihO,!/^H
%Rn2R5Ad@:DbI'U</qR,\b3)tMl)^_5-C`QA9lY_U1#>-.crAP-3]SVWDi8DD.sb.YZUKu.%Cq%P=<`U8OrH<9"dIY2*t50fnd<rN
%C;\;^?8Mj6Mt*+&Q)XEoNRXj@qe^rXh98SeiRq\S;'<N@f([Df:,Hcd_m9XEVIZsC.9%6+MZRuCeQ/DP[Bq5$lJ=6<5fY'sEL$&e
%PRKAbCka<k$F4X!3<5>GMiq\ATD]_Bj&ccd0X^LU1RZ`m-InHf6o1-KVU_9C-o;^"VU_$<82D$%VY-PK[^@J/]cd4`1<*Je#boSq
%.Z-E)^_QDJ;<QKEnqq$D#$ON]7R3H^Wf.Dm*J7+?JD5-!YeKa4\d%%T.,Z48Y&0Cp<E3P!?80-W4l`>EfSsSR$/,K<D?j@JXG?s^
%C4=!3AesN\jX^t<hmoYgIC)U`K)@`$=A%(-`UgqKb99.VN.QXR#7.nF6d=PslgHI$nE+I&qRkr1%<?E'A20]$rcl3%kD7=J`ZV*^
%G*^A+UG5Z,p(^s%kO3:pK8e+7d%4_>cK@6]#=ZF=E9XK""cMqX`@V,^@<p?sp9o[iJ6H*7LOX;W,*q3i*frYsb?aLEP@V(t_>_gI
%[Et:'#L<M)?8`[FVc1^D*2%0SQBit&J36X@d:]Z8,jPH[+9HO9.pCd%=mrFS2EMAEIY[t*'<HQ]^c#k.[LY>,n8O_ql*tF$k?0q%
%\Ea?B3[REafd77Sib?J_?-f/=aR_?6iQjH8)WW.$Z$7,fUXcZ`?Kt0:0@,q%TEFi4IEl;\N*3euG^,Y8\Gm^G#cH$^)IN#[*01+Q
%G8'J^5qAsK(5okATk'6D6c*N`Iq]<h)C5<s=Z&nq3nuIo7anC_ij1!IF)<S',dtO6;!3/nk'l/8/&hhp<q(:((BU(+A=Qm7YX,jc
%N6A+ama&X<>NhEsc8+g!GCPYJ%%\:36mXO3G=&?jYNOqo+M?NgMO<MVj!fLPZ:30-9?8MPUThuG=-RX0"O)O0Pb_117ZhMVnTRFY
%Vo/1P4-tCeP,"Hel$2coF@]3[F:.%_9i#gmoMI<<nmh$VY_aIJ^$%O@Sq[*``01p3?abs3AtKQ#IUM0GMJ"S(U;&9d"\=Jm]W8n.
%p9eBN%u.mMWN7$e&QDA!;=8MYQkcfT[aU+$N`!>a:K?Z:q%QKTeN*b1n^.u(HQ*;0<IYr^jk\X`6Ut@*#0@8M>rTg,_s&>ETf!:s
%o`ESGiRu&W/s;ruT!3,?e\oN-7e8j<oQ\HH$euhd+QT(^jMnRq`&8fL@4!:W`$Kulj<d[fSI%`9Ru&dE;Q9l^'`p]'dg/,6KT[T(
%/dVq6[rgk@N1#d`em=bci%\"Kdcl//P]pb:2+c+A8c1#5I`q?IC#V:g_\9`U$Ir"0D1_E8.K3u@:IGEk&CE'5)s)=9"T.5hTc#,?
%5`+@Tiq>HffAc%B&6iO(5=F+5of_5;<5`l#,eAL?+(>Q2]j!KiZjf:2n)KuU0];f(e)[4,qPqE3`2EW1JIs>7*l=pNF=mdGR!E$_
%4%s1I\PZ!pHo(>$Am1X^\n7hKM%hq3-7?%^gqXgioBo.a:[C1]JPXG['Bt$Z_Ou`ckU,#XGQ+;JBT(_<MB\$W?otqSKg5)Oh3E5U
%pldJ!V+@G(Zb>j']7W17G+QM,'DBf?.6/'gp>a3N!-h:IE/l9DnUN/$!;)=;mKE0!UB)C,@)rH&r0G(WrRkuP*E$af[M&@X%b4<?
%eLCDW#AU00DPK4]n?@rq+/#qha>QK)IR)3@.,,Guqs-`VbC'6/!Lt%S1Bh?=!,uOHcP.)ilUQ\WI/NbqP0=N')=m;28hrn9B'@EF
%BaXJ%\'ggGC=Mgm+buLs>!iYgDl,UoeEC3&gQ4cs19KM`,ZJ6MnO#c$9.B#Fa#$MY,rC*_!Aqb%h]lu^lDaMk>`@9gYb"8oV[/rl
%gdA"o"r(S.nOC.X/OZQsIZ%[T3+n3:h.VX=0gM-S0iU,f'>pR/>Ah?)@-U7^!EC,77*uB+[aB=)o^:;'EH<ZY-$D_<"t/#aAFI!V
%ZA3Z4d2V<u/LuIi9d^qOm.nhk6+\9hFO8TH'RZWRC-UA@/aVl+0!:ZKgn`[)PbKAJnDE!9pm32!Yre;fnB1OIICYl5`&jE)NXS<-
%m=CAXNQY2=i-&htCgKZPSnlo9@b[hE@:,+WI2hN8BQg`T7r@Fn366KKAUAj!]=m6o+8kol/gkOZl3A^9Ep?^rp\S$(B0SR_jJhO<
%g"Eo)T%`V#Q2`@m?9Id47hQ8&6PjHu,7TF(JWjGDD#*TE$D#2;e*(fjLJHjZBjCO:Q;W-Y8A:s8g*EM`VI%^sD48cKQ(i"7T+Et2
%==6PfV"gE!Wft>HI\ji]LQ0$#\F'E19jk.5&Jh$LT5[p>KZgHPJG"eUYQu9H#W(LV#&O.ra5=\;:RLmg&./FXT0VTBf)?nS4i+e#
%D]HR_$%tLTccod<.R5[]HX<^+Pr3M;WIK_('!VMsDcA6?b(dNI6$!?#XHT#Yju/)WVG\3<2.U8QGmR2ODA13&4r)FT`AYJ[A7\,/
%Ga+I1jlK$9g!GKeUV%Qq/R>+*&Sf-'5<dYXjY^YT(@4uM=C,F%<MTNhOd%G$h.'dMQrQLcAW*0Q*:n3lUiMWipJa$Jq!k&j33>PC
%C5+s<(T3P>Z"08D$H:n'5+WRJ-Um-2p%O5.n[,/UXZujY,AX1Rq!k'FDJ7CDfCbi$Dpn)5[*l?9:"FJH[-4pFd*"B4p`&)PG6W_q
%;k`UedJ'%,PMjI94ukaAWK9%oq];/T1:]+]*M2a9B%$uLih8HHHQ9W7]3>pGQJgTS55@L.D\4!$H%E;o14(dmh>-+K]gg?nMG#l(
%"SR_'YS9#3iFNUQQJo=tg2"]\V4b)L/W9D1'W1")g;?o,GZ?X:O<U\VQ=nQ&mA51N%eV,XbbeR0j"LiO`%;FDVSheo<G<nXmDTs'
%3176gnG'n'Tj@&LfgQS%L4++aCUb$PZqC3<W5a2Wj#Rg;@$>#fC[`9OQHeIuKU>l&f.n&uIL\nXdp@V2Vfu_UZ1#Rpk`L2CFU7jC
%l#ndRiC=HeHh07*TIA+#4dj@:V^q3)OHk4ErHmPb(JThKo7K";S2J:L1"F'\FaXbCA_#]!_K!&KY>L#E>5'bLV\Lo2,'m8?dom3,
%X)7PQ"a^oaGP/R<-"Gi#Io$tFq9]Mhh:Bt1'D"3i[g#4_i@fEjXn*2LMXGCZ!mTKHP3`QUTmqTrb\V-t)"S1%@*XP,!ZV+X<&r*k
%Y*]HMEj"qH_1%(qX\O'MTR%9Vl.01Lp^XJ&9p#WX#m%M!jR)6^ml)l4;6mGKhIZ'S]o>:2qE+4<m::MqJ+..rU>JDb7K-]PmK]+f
%^UZf"%(%5DCjcfN^5Ke/]//p7BTOVPS)0`dL_NGbO"PLR.!q!%XVB:di+*o^3c7s:T6`P*2W#'^BV:ML[!l[?LZUfB"!M=+.ZJIp
%I0%oWm7`-LH*);eO(TlYX<F.O]>aNjQRT"J>k.StUdCqSGYc'F]FX!s#oi1,7FdI$B<(WAJ&WM!D=i&o_MJT>lB\!ToT1D43?7j5
%c@$<8pJclXOsZA_PM#a2+Q/tB]Q6AF`T8@=F+HDGjX@TjGe^49qHX[]b5%ncU,E<MkN<*+1o[]t"t(d0GCKY\4EY+0S#LG!1iUsl
%\LO6EIC'93iG_HWMaVq\+VSG72hfm8Z@Z3%KHFD0f^t<%#@?Mc:@ZZ%W;*F.j5m@K4A>f8SX-2.T%uk3Qt5E'mqjdP\Mu9XmFbR*
%pa%.4JEsY:YEei_fkm!Or6IO1PMDA08)?.f4c`HDA`&!p`<04)LpnJkKW2!dX]0`gaa`d+#u]d^Iu6/omK9@ADAHXnYRq7YO3OCe
%663+^?7XeteuV?-=AO8$*HVn+"#t*60C$T1Y)GfFi?1GJF:Y2"$>74o!JjlE+N_>J]+c%21DOuJOW>Yd_+A;N?ir69NK!N&>-7;:
%m.LO06L)R_n?7<-fB6N/TYM#q<WjN^Pu]PfY?fSj%=l=LSftNFco>"LMl0=\1-W\re\\N_[W^g.*_>FqcSn%m"R%dYm%tUZ=0#JG
%dREeYDHo'd5]hKn!8pn!'7m.#!4P8oF&`pT3-#j]5@c7JOXT0`pi_+;*TRm]4T.h.pY80[>eG.k]RdR%_.`O"SDLc#j6^nhS)<5d
%OsdcYjG>!M.gA<S!:9c2RHJsh!jNMb@*gs@*XWjR3;JcL=JN3p$#68ib/(-ceNlXh4<(o!O"SSTpAo*Z$f*9DU38*i,_u&(.,GpW
%`2B:%0"ZgGd'X,W6Uh_gj:]BW>eJ#`9%"8M-r08)csq:VMf[\U88%<((8J<O+pODQ<&\aN""9t!FIE=k,U9%]D9u6+8-W.:(3-g-
%kI6<n(;.Mb--`;.kkOa7(En]S_3o0,6\([=4``/\?d,7\Y,#*X6=;Y[*\s@SY@fKh'<e@6?.E^02"B"#+?)4T+`4lh_.-Er<p[)i
%="B1ark-d\N_/plnm77IL@F9s$=lF;fVEhB$RK]gU19u`;F/$BI9s0Q0#0a$I%W,0_oAS-0\B-])LKI9B<H(ek8_5>XZa0t2@oU.
%J_s:lC+SskP&=qX-UYoAo*0W<<=LoL2a`LJB<SI]/-4eoPH<+9o*"c5RtS[2HS*30Ui,seG?Rr/eq9nCHH0Ns*X^cN<aFAe@T+9h
%nm:@C;!YaDS\pPhLBaq3-$qC;`,u)4mV;Kd*j.L0Acks<qW1]/EedC9:6s/.A-ilZdl%YQ7l/f"2n217YA`pi`7>;ic=.(lO1hIl
%=./"9F:X>Rk[*U,4=&rtqBOO63%:EQn4S02R(Ta;lRq_OJlMoGKc&b2kD/;1"F24IL;D?#9ZQHPa.ViHkh\L0W[LFuchr!A9kPWk
%!:qa4'2b7@j%3cW,!D.eM/ime,O1YhLk;YLoN@p\Jm-B?B2Gfu"_W.-<ou'(5-kA)F()L)U<O8YPA%L;ekIiLJru97;P/q#Zc7U-
%2Hb+;fF.C\0H#L?)(j1V3),@`B\uPhE%m@e,<?[qP9HONlB=LU9`Eg##gPeV04k_?3%;\'aaBYt+UTjNX&jG5]rm&'f@Q,0p+i[d
%8(hb]*sC:/>AQ,+]u$@i)pbX+,HN-[!on#U]6.*O.BfUMYg+p<9XnKk776RrS'!XW:"f7jeYCJ%]&E?SMbGo'/dXNEp,BN(1rDg(
%&nWa*GCaIq]*0%/b8k5k]U!u5Y/m-'`jAt;mMEGQb-9Zgj,k$,AZoHgj^$d66H?%oR+o9FAcbPj]U;AiV6`<"D6@98h*)ctd4UmT
%Vu)AcoJEkJ+VsFP:R9h?bY!/.Y\-kW-aciMHR?4L1)oKHA^I"ZnRFWAms?L"!u[NqHR8$UYiTb2=&'q^8-uET]-n!&-G7Ri2fW.o
%lhL"dN_V1o&%6bjUJle,29gVJeolo"e7!LW<c\@<\m^#k=N=bQE`)R2:^DR\TZ4!uAS(\JpJL(l2AmpniM]*\bBOl&7"?(`napN[
%X*mVa:oFn1<&doRrbUc[i<\0=J(l1[@6V^QCY!Kd1Vio[63L8=rll4s0L42V"8tU9*&qA%C(PJRCe\ham2L;Fi3:4tZD_8PBHJ=$
%hoS$Q>hnNFVloUJHWJ%A5I(f`I),4GQ/B>Ar(?_]@j^(Qf\5jg(hZmo^\N02!"o;(KD#namH-9"gkl@d=5SkK1&:`mkJl>KIbD43
%P"h,,V3emh^'S.jW(hA>Si&)V:j?t=3[(W%TW1He]qT_tGgC8)Sn=A$!PGi*r)mWU@d4mnS&Vl7q4"0`&hA9ULap(CT'"Bs(0sPm
%:k.X/)#_(n'R`&B]T0EW67;oCAMCnXMQPNR\KBP&p6cZf=V^=P]hFDL@UgIR3NWotQsUZ^OZ\JQ&Y]TJiasFsf`QK(e4Knh(g8\R
%er3V=VrMR"<ijs5>I-M8I^eF7;cO&V$/Ki&?W'rYP!`%8?-E\T)cV`pIX7$3QCcVhJ@aZjrj+Xh9J%Y`<cduoGtBiEYPkS2K%a*S
%L<51pb*f$;Gk&SR^#4M/lp>>b((-MGDh=Gs\>EN(e$t@gca'&XUhD[C4-WuW?T9[&&]H7#.FIZ4r"0:=qHflmFF\HB`A=o?AG,/h
%)QDl)Y.f#dCh36^-_p<fi5(,<G&9A>*9o^KY@>Hb0Xr+ip'H0RIif._L:WHtO8oH$TWY3gK%V0rYd#jBd:/*<C+qYL-<s94^hS6s
%2*ta!I+nK"nip27'esm+a.C_f7:0rgqBt1Vf"_Ms(:B]EfG'JgK,"m#$43b&\iI?OWO16"#.mh8^>rm2,q?UViV,LJZh\\\k6(:%
%XhHZO70WI0oOBZRJ*cbmg5*(SQ0'%5q?g\i!'=N+WJtuLj]]S$[5MZ6dO3EP8i)`$@KRgU?<80,rFGLjLQm-]5$Tln^5<)9WhWiM
%,?3D6_$'NH(?r9ATuS9Bg=foKT4t>>/(gs%B>D:999:m*Qn\$!K+A1bbDT@2<9U*W&`\fN=S5XOZKB9Wg5e2IOd/cY$,gr#B6@Di
%DgZEQ&VaTJ$:rEC8Bf!NltZTpWhim#=0Ykr;md>J7FGAI&>13qY&c>EpsECI@"`-pJp:=/$eRG=+.mSY6>*T,jXdOYB67EaM+(YQ
%E-9Ec6$E$&0jl_%$grY)R)s>_KYmKg6OQY!di^C#.(5gRJG7o(^]-LCKWb_j!q)mmOHHhsS3rNH0>%k.agP,t4-?Hti79`@\=Hgk
%gAYQSmZRLP2++"c)\1Mf"["(0bkqOt$/6$.fqsep!nDC=Gr`q1b"R@pl5;$V)=k(b5jW.9W'=Y%?gR'hUFsrH(>S'l5-Dd[0sWaM
%E)_.CI9ugS,ObbNJ+X"h3#u4%AUb_[;5&.0]P;HBKm>6h&%Nm3I%*dbB?TB\"M9!Kb?P6s!Ff^m7\&D.?PR]((/$Pg^l2G7p"WX]
%o`c6`K/ekDLSMEDbO\sWX]iLqp]n%TRoQ2q%C4LT*&:s/h>l`+-lO2kgHu)Z?O.#+Ed76a7edRVnTAZQI_LL#`us7&n2V&@Nl\jC
%)Fgt!$MII=@UWPVA)U:b:EoRB,HZ!&/F$GeYZ<_hhC>%RF^e&]YHfH_WK,I)i*rClAaEC3X?fE8KPInA=3h=Q#?qt8g&,J^#-:mH
%e#Y0jQVYAVHn%R=A-)GGi>r62$kD[p'KuMNaU1,$k7GQl%7W:\:<c8>aUU,^e2CodW!rNA-_bW>h9%f-l)RB-@%XfE9sLhTC/9M^
%^;#K9j!ea$AMo8gX7(f>KBkdrj[pGDE-M$=)toE#5B)+pVlI$&?>,oL#B;M"A6jpH`N@^he07mKO-gK-[LssljRpi2kk6+9S/LU#
%&Q\'ac`rn,>%#p!pmIVro]7dbO'b@*EZJ1V=Ytd-]'RVg?\U,OD)5s:f7p7lE5LC"FkM[MK`W3\r$k]8?]M1ebHRJ$(aMY#\Et+V
%8Ie:NbUe>`;g2O2>&lp2FbO`(%E"W`PZWkZ#:b5T'3U'#O(<mirJQKH1"<UXV9T:,ri4#cfsZ)=MReI;U'`gtkF7HIi%kj(p325-
%U?1t(i,%<S,:Ksb&sFf6?&<D6m'gZfV3^&/XVadSeDd"BdV-/Qp?cZ!7l*05VIuA[RcUOA*f^*]#c.GdF=X*OOZ=i;NJXg`X"S#\
%fXE_tca`N*nOS^<4DjUVIQ4k-Hq,%cjhr]CU:g:EQD4"D,[;f)K=HjQ2&3bWZ8p(q<5_:$&@KI^V%RoHU7[#QMn1OiLT0!dg,3X'
%<)H/6*d)pH)GC@RCglC:87ntlM^C</U4!_LW6*BnelVAW'u=pKem3"n7U'l@-<$*a>,K\nrF"^3[W&U?5FC!KqG&U6e<$<hrTFoj
%Y!_h8Afi:@<2)SjI%JhF8j'&ja\#gCi3>_S/pI;hNu7i:eD1O>BlI<A\@99\Ndc$6:=!6jE6M8T4nJ5S,TmC1`4/-m4es6Y(s.T]
%NmqI[m(1mDHSl;h<jZfVFmN<dkWMh.#F";3;iF>F_5hHYK)>Q5^\Mf_rn%23a$8AZ]-%(BO8nHof`&A[r6PE?r@e2s?iTdpJ*I.9
%pcn`=TDn[Os6F%kO8ngTs8(atror>>o#G+PrpnD8r%J*LQ[f&$s4./$f0B6"?iTNNs5dVfqXne,oj@]:N8UFM_*@qZJ,UPiq]Gk-
%rrN0lV^D~>
%AI9_PrivateDataEnd
